%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: (Adobe Illustrator Artwork)
%%Creator: (Adobe Illustrator\(R\) 25.2)
%%For: (Chalermsuk Bootvises)
%%CreationDate: (20/3/2564 BE)
%%BoundingBox: 0 0 2000 2000
%%HiResBoundingBox: 0 0 2000 2000
%%CropBox: 0 0 2000 2000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 25.2.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 25.2.1 x236 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 6.0-c004 79.164570, 2020/11/18-15:51:46        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:photoshop="http://ns.adobe.com/photoshop/1.0/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Developer Programming</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Chalermsuk Bootvises</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Illustrations design concept developer create code programming language with icons. Vector illustrate.</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>development</rdf:li>
               <rdf:li>web</rdf:li>
               <rdf:li>mobile</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>app</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>people</rdf:li>
               <rdf:li>concept</rdf:li>
               <rdf:li>business</rdf:li>
               <rdf:li>developer</rdf:li>
               <rdf:li>isometric</rdf:li>
               <rdf:li>technology</rdf:li>
               <rdf:li>flat</rdf:li>
               <rdf:li>application</rdf:li>
               <rdf:li>background</rdf:li>
               <rdf:li>website</rdf:li>
               <rdf:li>page</rdf:li>
               <rdf:li>interface</rdf:li>
               <rdf:li>programming</rdf:li>
               <rdf:li>software</rdf:li>
               <rdf:li>team</rdf:li>
               <rdf:li>developers</rdf:li>
               <rdf:li>internet</rdf:li>
               <rdf:li>landing</rdf:li>
               <rdf:li>coding</rdf:li>
               <rdf:li>graphic</rdf:li>
               <rdf:li>ui</rdf:li>
               <rdf:li>symbol</rdf:li>
               <rdf:li>network</rdf:li>
               <rdf:li>user</rdf:li>
               <rdf:li>template</rdf:li>
               <rdf:li>icon</rdf:li>
               <rdf:li>building</rdf:li>
               <rdf:li>modern</rdf:li>
               <rdf:li>process</rdf:li>
               <rdf:li>infographic</rdf:li>
               <rdf:li>communication</rdf:li>
               <rdf:li>digital</rdf:li>
               <rdf:li>device</rdf:li>
               <rdf:li>smartphone</rdf:li>
               <rdf:li>construction</rdf:li>
               <rdf:li>teamwork</rdf:li>
               <rdf:li>testing</rdf:li>
               <rdf:li>sign</rdf:li>
               <rdf:li>api</rdf:li>
               <rdf:li>programmer</rdf:li>
               <rdf:li>site</rdf:li>
               <rdf:li>studio</rdf:li>
               <rdf:li>white</rdf:li>
            </rdf:Bag>
         </dc:subject>
         <xmp:CreatorTool>Adobe Illustrator 25.2 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2021-03-20T21:14:58+07:00</xmp:CreateDate>
         <xmp:ModifyDate>2021-03-20T21:14:58+07:00</xmp:ModifyDate>
         <xmp:MetadataDate>2021-03-20T21:14:58+07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9QYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:dbce2428-efd2-4304-ab7a-32827df5eb8a</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:dbce2428-efd2-4304-ab7a-32827df5eb8a</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:16fbee02-858c-47ce-8ee1-0573f114308b</stRef:instanceID>
            <stRef:documentID>xmp.did:fc796b08-b52b-46d4-892c-2e67f8a4cc44</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:96e717cc-b5ed-47d3-9bd7-ad4b2b30c1bf</stEvt:instanceID>
                  <stEvt:when>2018-08-02T13:04:35+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fc796b08-b52b-46d4-892c-2e67f8a4cc44</stEvt:instanceID>
                  <stEvt:when>2018-08-02T13:37:32+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:16fbee02-858c-47ce-8ee1-0573f114308b</stEvt:instanceID>
                  <stEvt:when>2018-08-02T13:45:09+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CC 2018 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:dbce2428-efd2-4304-ab7a-32827df5eb8a</stEvt:instanceID>
                  <stEvt:when>2021-03-20T21:14:58+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 25.2 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>2000.000000</stDim:w>
            <stDim:h>2000.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>248</xmpG:red>
                           <xmpG:green>248</xmpG:green>
                           <xmpG:blue>248</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=101 B=77</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>100</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=3 G=17 B=98</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>3</xmpG:red>
                           <xmpG:green>17</xmpG:green>
                           <xmpG:blue>98</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=25 G=87 B=194</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>24</xmpG:red>
                           <xmpG:green>86</xmpG:green>
                           <xmpG:blue>193</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=245 G=171 B=53</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>244</xmpG:red>
                           <xmpG:green>170</xmpG:green>
                           <xmpG:blue>52</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=203 B=48</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>202</xmpG:green>
                           <xmpG:blue>47</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=3 G=17 B=98 copy</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>3</xmpG:red>
                           <xmpG:green>17</xmpG:green>
                           <xmpG:blue>98</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=125 G=173 B=255</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>124</xmpG:red>
                           <xmpG:green>172</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=209 G=200 B=206</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>209</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>205</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=143 B=174</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>142</xmpG:green>
                           <xmpG:blue>174</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=101 B=77</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>100</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=44 G=75 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>44</xmpG:red>
                           <xmpG:green>75</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=25 G=87 B=194</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>24</xmpG:red>
                           <xmpG:green>86</xmpG:green>
                           <xmpG:blue>193</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=19 G=66 B=148</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>19</xmpG:red>
                           <xmpG:green>66</xmpG:green>
                           <xmpG:blue>148</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=13 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>13</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=3 G=17 B=98</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>3</xmpG:red>
                           <xmpG:green>17</xmpG:green>
                           <xmpG:blue>98</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=211 B=231</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>211</xmpG:green>
                           <xmpG:blue>231</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=120 G=109 B=133</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>120</xmpG:red>
                           <xmpG:green>109</xmpG:green>
                           <xmpG:blue>133</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=143 B=174</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>143</xmpG:green>
                           <xmpG:blue>174</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=254 G=145 B=166</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>254</xmpG:red>
                           <xmpG:green>145</xmpG:green>
                           <xmpG:blue>166</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=254 G=186 B=199</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>254</xmpG:red>
                           <xmpG:green>186</xmpG:green>
                           <xmpG:blue>199</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=231 B=232</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>231</xmpG:green>
                           <xmpG:blue>232</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=25 G=87 B=194</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>24</xmpG:red>
                           <xmpG:green>86</xmpG:green>
                           <xmpG:blue>193</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=203 B=48</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>202</xmpG:green>
                           <xmpG:blue>47</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=143 B=174</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>142</xmpG:green>
                           <xmpG:blue>174</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=101 B=77</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>100</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=3 G=17 B=98 copy</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>3</xmpG:red>
                           <xmpG:green>17</xmpG:green>
                           <xmpG:blue>98</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
         <photoshop:Headline>Illustrations design concept developer create code programming language with icons. Vector illustrate.</photoshop:Headline>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
2000 2000 li
2000 0 li
cp
clp
2000 2000 mo
0 2000 li
0 0 li
2000 0 li
2000 2000 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.972549 .972549 .972549 rgb
f
485.333 1397.71 mo
432.823 1397.71 390.256 1355.14 390.256 1302.63 cv
390.256 1250.12 432.823 1207.55 485.333 1207.55 cv
537.842 1207.55 580.409 1250.12 580.409 1302.63 cv
580.409 1355.14 537.842 1397.71 485.333 1397.71 cv
cp
703.007 1328.49 mo
703.007 1278.45 li
639.965 1260.93 li
636.458 1247.89 631.347 1235.51 624.854 1224.01 cv
656.943 1167.24 li
621.56 1131.85 li
565.11 1163.76 li
553.477 1157.06 540.919 1151.8 527.682 1148.17 cv
510.353 1085.79 li
460.313 1085.79 li
442.984 1148.17 li
429.746 1151.8 417.188 1157.06 405.555 1163.76 cv
349.105 1131.85 li
313.722 1167.24 li
345.812 1224.01 li
339.318 1235.51 334.208 1247.89 330.698 1260.93 cv
267.658 1278.45 li
267.658 1328.49 li
331.207 1346.14 li
334.782 1358.83 339.866 1370.89 346.28 1382.09 cv
313.722 1439.69 li
349.105 1475.08 li
407.037 1442.33 li
418.105 1448.55 429.986 1453.49 442.482 1456.95 cv
460.313 1521.14 li
510.353 1521.14 li
528.183 1456.95 li
540.679 1453.49 552.559 1448.55 563.628 1442.33 cv
621.56 1475.08 li
656.943 1439.69 li
624.385 1382.09 li
630.801 1370.88 635.902 1358.83 639.478 1346.13 cv
703.007 1328.49 li
cp
.819608 .784314 .807843 rgb
f
208.546 1258.3 mo
186.218 1253.05 172.367 1230.71 177.609 1208.38 cv
182.851 1186.05 205.201 1172.2 227.528 1177.44 cv
249.856 1182.68 263.708 1205.03 258.465 1227.36 cv
253.224 1249.69 230.874 1263.54 208.546 1258.3 cv
cp
308.016 1250.59 mo
313.011 1229.31 li
287.953 1215.57 li
287.763 1209.68 286.826 1203.9 285.212 1198.37 cv
304.526 1177.43 li
293.012 1158.85 li
265.823 1166.78 li
261.545 1162.77 256.731 1159.28 251.464 1156.42 cv
250.323 1128.16 li
229.045 1123.17 li
215.449 1147.96 li
209.458 1148.18 203.592 1149.17 197.978 1150.85 cv
177.159 1131.65 li
158.581 1143.17 li
166.558 1170.51 li
162.649 1174.75 159.24 1179.51 156.446 1184.7 cv
127.892 1185.85 li
122.896 1207.13 li
148.156 1220.98 li
148.41 1226.74 149.368 1232.37 150.977 1237.77 cv
131.382 1259.02 li
142.896 1277.6 li
170.798 1269.46 li
174.884 1273.21 179.442 1276.49 184.411 1279.21 cv
185.584 1308.29 li
206.863 1313.28 li
220.852 1287.77 li
226.512 1287.54 232.057 1286.63 237.384 1285.09 cv
258.749 1304.79 li
277.327 1293.28 li
269.233 1265.54 li
273.08 1261.41 276.452 1256.8 279.24 1251.75 cv
308.016 1250.59 li
cp
f
675.44 1478.39 mo
672.916 1478.39 li
672.916 495.622 li
675.44 495.622 li
675.44 1478.39 li
cp
.619608 .560784 .682353 rgb
f
385.45 552.182 mo
385.45 552.182 li
379.978 552.182 375.541 547.746 375.541 542.273 cv
375.541 536.801 379.978 532.364 385.45 532.364 cv
390.922 532.364 395.359 536.801 395.359 542.273 cv
395.359 547.746 390.922 552.182 385.45 552.182 cv
cp
.129412 .568627 .94902 rgb
f
489.648 546.924 mo
407.033 546.924 li
404.829 546.924 403.043 545.138 403.043 542.934 cv
403.043 540.803 li
403.043 538.6 404.829 536.813 407.033 536.813 cv
489.648 536.813 li
491.852 536.813 493.638 538.6 493.638 540.803 cv
493.638 542.934 li
493.638 545.138 491.852 546.924 489.648 546.924 cv
cp
.619608 .560784 .682353 rgb
f
385.45 663.403 mo
385.45 663.403 li
379.978 663.403 375.541 658.967 375.541 653.495 cv
375.541 648.022 379.978 643.585 385.45 643.585 cv
390.922 643.585 395.359 648.022 395.359 653.495 cv
395.359 658.967 390.922 663.403 385.45 663.403 cv
cp
.129412 .568627 .94902 rgb
f
489.648 658.146 mo
407.033 658.146 li
404.829 658.146 403.043 656.359 403.043 654.155 cv
403.043 652.025 li
403.043 649.821 404.829 648.035 407.033 648.035 cv
489.648 648.035 li
491.852 648.035 493.638 649.821 493.638 652.025 cv
493.638 654.155 li
493.638 656.359 491.852 658.146 489.648 658.146 cv
cp
.619608 .560784 .682353 rgb
f
385.45 808.193 mo
385.45 808.193 li
379.978 808.193 375.541 803.757 375.541 798.285 cv
375.541 792.812 379.978 788.375 385.45 788.375 cv
390.922 788.375 395.359 792.812 395.359 798.285 cv
395.359 803.757 390.922 808.193 385.45 808.193 cv
cp
.129412 .568627 .94902 rgb
f
489.648 802.936 mo
407.033 802.936 li
404.829 802.936 403.043 801.149 403.043 798.945 cv
403.043 796.814 li
403.043 794.611 404.829 792.825 407.033 792.825 cv
489.648 792.825 li
491.852 792.825 493.638 794.611 493.638 796.814 cv
493.638 798.945 li
493.638 801.149 491.852 802.936 489.648 802.936 cv
cp
.619608 .560784 .682353 rgb
f
385.45 845.604 mo
385.45 845.604 li
379.978 845.604 375.541 841.168 375.541 835.695 cv
375.541 830.223 379.978 825.787 385.45 825.787 cv
390.922 825.787 395.359 830.223 395.359 835.695 cv
395.359 841.168 390.922 845.604 385.45 845.604 cv
cp
.129412 .568627 .94902 rgb
f
489.648 840.346 mo
407.033 840.346 li
404.829 840.346 403.043 838.56 403.043 836.356 cv
403.043 834.226 li
403.043 832.022 404.829 830.235 407.033 830.235 cv
489.648 830.235 li
491.852 830.235 493.638 832.022 493.638 834.226 cv
493.638 836.356 li
493.638 838.56 491.852 840.346 489.648 840.346 cv
cp
.619608 .560784 .682353 rgb
f
412.952 581.302 mo
412.952 581.302 li
407.479 581.302 403.043 576.865 403.043 571.393 cv
403.043 565.92 407.479 561.484 412.952 561.484 cv
418.424 561.484 422.861 565.92 422.861 571.393 cv
422.861 576.865 418.424 581.302 412.952 581.302 cv
cp
.129412 .568627 .94902 rgb
f
517.15 576.044 mo
434.535 576.044 li
432.332 576.044 430.545 574.257 430.545 572.054 cv
430.545 569.923 li
430.545 567.719 432.332 565.933 434.535 565.933 cv
517.15 565.933 li
519.354 565.933 521.14 567.719 521.14 569.923 cv
521.14 572.054 li
521.14 574.257 519.354 576.044 517.15 576.044 cv
cp
.619608 .560784 .682353 rgb
f
412.952 610.421 mo
412.952 610.421 li
407.479 610.421 403.043 605.985 403.043 600.513 cv
403.043 595.04 407.479 590.604 412.952 590.604 cv
418.424 590.604 422.861 595.04 422.861 600.513 cv
422.861 605.985 418.424 610.421 412.952 610.421 cv
cp
.129412 .568627 .94902 rgb
f
551.527 605.164 mo
434.535 605.164 li
432.332 605.164 430.545 603.377 430.545 601.174 cv
430.545 599.043 li
430.545 596.839 432.332 595.053 434.535 595.053 cv
551.527 595.053 li
553.731 595.053 555.517 596.839 555.517 599.043 cv
555.517 601.174 li
555.517 603.377 553.731 605.164 551.527 605.164 cv
cp
.619608 .560784 .682353 rgb
f
412.952 691.31 mo
412.952 691.31 li
407.479 691.31 403.043 686.874 403.043 681.401 cv
403.043 675.929 407.479 671.492 412.952 671.492 cv
418.424 671.492 422.861 675.929 422.861 681.401 cv
422.861 686.874 418.424 691.31 412.952 691.31 cv
cp
.129412 .568627 .94902 rgb
f
578.625 686.052 mo
434.535 686.052 li
432.332 686.052 430.545 684.266 430.545 682.062 cv
430.545 679.931 li
430.545 677.728 432.332 675.941 434.535 675.941 cv
578.625 675.941 li
580.829 675.941 582.615 677.728 582.615 679.931 cv
582.615 682.062 li
582.615 684.266 580.829 686.052 578.625 686.052 cv
cp
.619608 .560784 .682353 rgb
f
412.952 720.43 mo
412.952 720.43 li
407.479 720.43 403.043 715.993 403.043 710.521 cv
403.043 705.048 407.479 700.612 412.952 700.612 cv
418.424 700.612 422.861 705.048 422.861 710.521 cv
422.861 715.993 418.424 720.43 412.952 720.43 cv
cp
.129412 .568627 .94902 rgb
f
529.283 715.172 mo
434.535 715.172 li
432.332 715.172 430.545 713.385 430.545 711.182 cv
430.545 709.051 li
430.545 706.847 432.332 705.061 434.535 705.061 cv
529.283 705.061 li
531.487 705.061 533.273 706.847 533.273 709.051 cv
533.273 711.182 li
533.273 713.385 531.487 715.172 529.283 715.172 cv
cp
.619608 .560784 .682353 rgb
f
438.366 746.991 mo
438.366 746.991 li
434.046 746.991 430.545 743.489 430.545 739.17 cv
430.545 734.851 434.046 731.35 438.366 731.35 cv
442.685 731.35 446.186 734.851 446.186 739.17 cv
446.186 743.489 442.685 746.991 438.366 746.991 cv
cp
.129412 .568627 .94902 rgb
f
617.451 742.841 mo
456.241 742.841 li
454.038 742.841 452.251 741.055 452.251 738.851 cv
452.251 736.647 454.038 734.861 456.241 734.861 cv
617.451 734.861 li
619.655 734.861 621.441 736.647 621.441 738.851 cv
621.441 741.055 619.655 742.841 617.451 742.841 cv
cp
.619608 .560784 .682353 rgb
f
438.366 769.974 mo
438.366 769.974 li
434.046 769.974 430.545 766.472 430.545 762.153 cv
430.545 757.834 434.046 754.333 438.366 754.333 cv
442.685 754.333 446.186 757.834 446.186 762.153 cv
446.186 766.472 442.685 769.974 438.366 769.974 cv
cp
.129412 .568627 .94902 rgb
f
551.527 765.824 mo
456.241 765.824 li
454.038 765.824 452.251 764.038 452.251 761.834 cv
452.251 759.63 454.038 757.844 456.241 757.844 cv
551.527 757.844 li
553.731 757.844 555.517 759.63 555.517 761.834 cv
555.517 764.038 553.731 765.824 551.527 765.824 cv
cp
.619608 .560784 .682353 rgb
f
385.45 887.466 mo
385.45 887.466 li
379.978 887.466 375.541 883.029 375.541 877.557 cv
375.541 872.084 379.978 867.648 385.45 867.648 cv
390.922 867.648 395.359 872.084 395.359 877.557 cv
395.359 883.029 390.922 887.466 385.45 887.466 cv
cp
.129412 .568627 .94902 rgb
f
489.648 882.208 mo
407.033 882.208 li
404.829 882.208 403.043 880.421 403.043 878.218 cv
403.043 876.087 li
403.043 873.883 404.829 872.097 407.033 872.097 cv
489.648 872.097 li
491.852 872.097 493.638 873.883 493.638 876.087 cv
493.638 878.218 li
493.638 880.421 491.852 882.208 489.648 882.208 cv
cp
.619608 .560784 .682353 rgb
f
385.45 998.687 mo
385.45 998.687 li
379.978 998.687 375.541 994.251 375.541 988.778 cv
375.541 983.306 379.978 978.87 385.45 978.87 cv
390.922 978.87 395.359 983.306 395.359 988.778 cv
395.359 994.251 390.922 998.687 385.45 998.687 cv
cp
.129412 .568627 .94902 rgb
f
489.648 993.429 mo
407.033 993.429 li
404.829 993.429 403.043 991.643 403.043 989.439 cv
403.043 987.308 li
403.043 985.104 404.829 983.318 407.033 983.318 cv
489.648 983.318 li
491.852 983.318 493.638 985.104 493.638 987.308 cv
493.638 989.439 li
493.638 991.643 491.852 993.429 489.648 993.429 cv
cp
.619608 .560784 .682353 rgb
f
385.45 1143.48 mo
385.45 1143.48 li
379.978 1143.48 375.541 1139.04 375.541 1133.57 cv
375.541 1128.1 379.978 1123.66 385.45 1123.66 cv
390.922 1123.66 395.359 1128.1 395.359 1133.57 cv
395.359 1139.04 390.922 1143.48 385.45 1143.48 cv
cp
.129412 .568627 .94902 rgb
f
489.648 1138.22 mo
407.033 1138.22 li
404.829 1138.22 403.043 1136.43 403.043 1134.23 cv
403.043 1132.1 li
403.043 1129.89 404.829 1128.11 407.033 1128.11 cv
489.648 1128.11 li
491.852 1128.11 493.638 1129.89 493.638 1132.1 cv
493.638 1134.23 li
493.638 1136.43 491.852 1138.22 489.648 1138.22 cv
cp
.619608 .560784 .682353 rgb
f
385.45 1180.89 mo
385.45 1180.89 li
379.978 1180.89 375.541 1176.45 375.541 1170.98 cv
375.541 1165.51 379.978 1161.07 385.45 1161.07 cv
390.922 1161.07 395.359 1165.51 395.359 1170.98 cv
395.359 1176.45 390.922 1180.89 385.45 1180.89 cv
cp
.129412 .568627 .94902 rgb
f
489.648 1175.63 mo
407.033 1175.63 li
404.829 1175.63 403.043 1173.84 403.043 1171.64 cv
403.043 1169.51 li
403.043 1167.31 404.829 1165.52 407.033 1165.52 cv
489.648 1165.52 li
491.852 1165.52 493.638 1167.31 493.638 1169.51 cv
493.638 1171.64 li
493.638 1173.84 491.852 1175.63 489.648 1175.63 cv
cp
.619608 .560784 .682353 rgb
f
412.952 916.585 mo
412.952 916.585 li
407.479 916.585 403.043 912.149 403.043 906.677 cv
403.043 901.204 407.479 896.768 412.952 896.768 cv
418.424 896.768 422.861 901.204 422.861 906.677 cv
422.861 912.149 418.424 916.585 412.952 916.585 cv
cp
.129412 .568627 .94902 rgb
f
517.15 911.328 mo
434.535 911.328 li
432.332 911.328 430.545 909.542 430.545 907.338 cv
430.545 905.207 li
430.545 903.003 432.332 901.217 434.535 901.217 cv
517.15 901.217 li
519.354 901.217 521.14 903.003 521.14 905.207 cv
521.14 907.338 li
521.14 909.542 519.354 911.328 517.15 911.328 cv
cp
.619608 .560784 .682353 rgb
f
412.952 945.706 mo
412.952 945.706 li
407.479 945.706 403.043 941.269 403.043 935.796 cv
403.043 930.324 407.479 925.888 412.952 925.888 cv
418.424 925.888 422.861 930.324 422.861 935.796 cv
422.861 941.269 418.424 945.706 412.952 945.706 cv
cp
.129412 .568627 .94902 rgb
f
551.527 940.447 mo
434.535 940.447 li
432.332 940.447 430.545 938.661 430.545 936.458 cv
430.545 934.327 li
430.545 932.123 432.332 930.336 434.535 930.336 cv
551.527 930.336 li
553.731 930.336 555.517 932.123 555.517 934.327 cv
555.517 936.458 li
555.517 938.661 553.731 940.447 551.527 940.447 cv
cp
.619608 .560784 .682353 rgb
f
412.952 1026.59 mo
412.952 1026.59 li
407.479 1026.59 403.043 1022.16 403.043 1016.68 cv
403.043 1011.21 407.479 1006.78 412.952 1006.78 cv
418.424 1006.78 422.861 1011.21 422.861 1016.68 cv
422.861 1022.16 418.424 1026.59 412.952 1026.59 cv
cp
.129412 .568627 .94902 rgb
f
578.625 1021.34 mo
434.535 1021.34 li
432.332 1021.34 430.545 1019.55 430.545 1017.35 cv
430.545 1015.21 li
430.545 1013.01 432.332 1011.22 434.535 1011.22 cv
578.625 1011.22 li
580.829 1011.22 582.615 1013.01 582.615 1015.21 cv
582.615 1017.35 li
582.615 1019.55 580.829 1021.34 578.625 1021.34 cv
cp
.619608 .560784 .682353 rgb
f
412.952 1055.71 mo
412.952 1055.71 li
407.479 1055.71 403.043 1051.28 403.043 1045.8 cv
403.043 1040.33 407.479 1035.9 412.952 1035.9 cv
418.424 1035.9 422.861 1040.33 422.861 1045.8 cv
422.861 1051.28 418.424 1055.71 412.952 1055.71 cv
cp
.129412 .568627 .94902 rgb
f
529.283 1050.46 mo
434.535 1050.46 li
432.332 1050.46 430.545 1048.67 430.545 1046.47 cv
430.545 1044.33 li
430.545 1042.13 432.332 1040.34 434.535 1040.34 cv
529.283 1040.34 li
531.487 1040.34 533.273 1042.13 533.273 1044.33 cv
533.273 1046.47 li
533.273 1048.67 531.487 1050.46 529.283 1050.46 cv
cp
.619608 .560784 .682353 rgb
f
438.366 1082.27 mo
438.366 1082.27 li
434.046 1082.27 430.545 1078.77 430.545 1074.45 cv
430.545 1070.13 434.046 1066.63 438.366 1066.63 cv
442.685 1066.63 446.186 1070.13 446.186 1074.45 cv
446.186 1078.77 442.685 1082.27 438.366 1082.27 cv
cp
.129412 .568627 .94902 rgb
f
617.451 1078.13 mo
456.241 1078.13 li
454.038 1078.13 452.251 1076.34 452.251 1074.13 cv
452.251 1071.93 454.038 1070.14 456.241 1070.14 cv
617.451 1070.14 li
619.655 1070.14 621.441 1071.93 621.441 1074.13 cv
621.441 1076.34 619.655 1078.13 617.451 1078.13 cv
cp
.619608 .560784 .682353 rgb
f
438.366 1105.26 mo
438.366 1105.26 li
434.046 1105.26 430.545 1101.76 430.545 1097.44 cv
430.545 1093.12 434.046 1089.62 438.366 1089.62 cv
442.685 1089.62 446.186 1093.12 446.186 1097.44 cv
446.186 1101.76 442.685 1105.26 438.366 1105.26 cv
cp
.129412 .568627 .94902 rgb
f
551.527 1101.11 mo
456.241 1101.11 li
454.038 1101.11 452.251 1099.32 452.251 1097.12 cv
452.251 1094.91 454.038 1093.13 456.241 1093.13 cv
551.527 1093.13 li
553.731 1093.13 555.517 1094.91 555.517 1097.12 cv
555.517 1099.32 553.731 1101.11 551.527 1101.11 cv
cp
.619608 .560784 .682353 rgb
f
707.556 541.869 mo
707.556 541.869 li
703.099 541.869 699.485 538.255 699.485 533.798 cv
699.485 529.341 703.099 525.728 707.556 525.728 cv
712.013 525.728 715.626 529.341 715.626 533.798 cv
715.626 538.255 712.013 541.869 707.556 541.869 cv
cp
.309804 .333333 .411765 rgb
f
828.665 541.869 mo
747.771 541.869 li
743.313 541.869 739.7 538.255 739.7 533.798 cv
739.7 529.341 743.313 525.728 747.771 525.728 cv
828.665 525.728 li
833.123 525.728 836.736 529.341 836.736 533.798 cv
836.736 538.255 833.123 541.869 828.665 541.869 cv
cp
1 .796078 .188235 rgb
f
1029.62 541.869 mo
868.78 541.869 li
864.323 541.869 860.709 538.255 860.709 533.798 cv
860.709 529.341 864.323 525.728 868.78 525.728 cv
1029.62 525.728 li
1034.08 525.728 1037.69 529.341 1037.69 533.798 cv
1037.69 538.255 1034.08 541.869 1029.62 541.869 cv
cp
.894118 .27451 .290196 rgb
f
707.556 589.373 mo
707.556 589.373 li
703.099 589.373 699.485 585.759 699.485 581.302 cv
699.485 576.844 703.099 573.231 707.556 573.231 cv
712.013 573.231 715.626 576.844 715.626 581.302 cv
715.626 585.759 712.013 589.373 707.556 589.373 cv
cp
.309804 .333333 .411765 rgb
f
973.461 589.373 mo
747.771 589.373 li
743.313 589.373 739.7 585.759 739.7 581.302 cv
739.7 576.844 743.313 573.231 747.771 573.231 cv
973.461 573.231 li
977.918 573.231 981.532 576.844 981.532 581.302 cv
981.532 585.759 977.918 589.373 973.461 589.373 cv
cp
.098039 .341176 .760784 rgb
f
1424.12 589.373 mo
1013.58 589.373 li
1009.12 589.373 1005.5 585.759 1005.5 581.302 cv
1005.5 576.844 1009.12 573.231 1013.58 573.231 cv
1424.12 573.231 li
1428.58 573.231 1432.19 576.844 1432.19 581.302 cv
1432.19 585.759 1428.58 589.373 1424.12 589.373 cv
cp
1 .796078 .188235 rgb
f
707.556 636.876 mo
707.556 636.876 li
703.099 636.876 699.485 633.263 699.485 628.806 cv
699.485 628.805 li
699.485 624.348 703.099 620.735 707.556 620.735 cv
712.013 620.735 715.626 624.348 715.626 628.805 cv
715.626 628.806 li
715.626 633.263 712.013 636.876 707.556 636.876 cv
cp
.309804 .333333 .411765 rgb
f
828.665 636.876 mo
747.771 636.876 li
743.313 636.876 739.7 633.263 739.7 628.806 cv
739.7 628.805 li
739.7 624.348 743.313 620.735 747.771 620.735 cv
828.665 620.735 li
833.123 620.735 836.736 624.348 836.736 628.805 cv
836.736 628.806 li
836.736 633.263 833.123 636.876 828.665 636.876 cv
cp
.098039 .341176 .760784 rgb
f
707.556 684.38 mo
707.556 684.38 li
703.099 684.38 699.485 680.767 699.485 676.309 cv
699.485 671.852 703.099 668.238 707.556 668.238 cv
712.013 668.238 715.626 671.852 715.626 676.309 cv
715.626 680.767 712.013 684.38 707.556 684.38 cv
cp
.309804 .333333 .411765 rgb
f
787.785 684.38 mo
747.771 684.38 li
743.313 684.38 739.7 680.767 739.7 676.309 cv
739.7 671.852 743.313 668.238 747.771 668.238 cv
787.785 668.238 li
792.243 668.238 795.856 671.852 795.856 676.309 cv
795.856 680.767 792.243 684.38 787.785 684.38 cv
cp
.894118 .27451 .290196 rgb
f
973.461 684.38 mo
827.9 684.38 li
823.443 684.38 819.829 680.767 819.829 676.309 cv
819.829 671.852 823.443 668.238 827.9 668.238 cv
973.461 668.238 li
977.918 668.238 981.532 671.852 981.532 676.309 cv
981.532 680.767 977.918 684.38 973.461 684.38 cv
cp
.619608 .560784 .682353 rgb
f
707.556 731.883 mo
707.556 731.883 li
703.099 731.883 699.485 728.27 699.485 723.813 cv
699.485 719.355 703.099 715.742 707.556 715.742 cv
712.013 715.742 715.626 719.355 715.626 723.813 cv
715.626 728.27 712.013 731.883 707.556 731.883 cv
cp
.309804 .333333 .411765 rgb
f
877.183 731.883 mo
796.289 731.883 li
791.832 731.883 788.218 728.27 788.218 723.813 cv
788.218 719.355 791.832 715.742 796.289 715.742 cv
877.183 715.742 li
881.64 715.742 885.253 719.355 885.253 723.813 cv
885.253 728.27 881.64 731.883 877.183 731.883 cv
cp
.619608 .560784 .682353 rgb
f
1114.7 731.883 mo
917.298 731.883 li
912.84 731.883 909.227 728.27 909.227 723.813 cv
909.227 719.355 912.84 715.742 917.298 715.742 cv
1114.7 715.742 li
1119.16 715.742 1122.77 719.355 1122.77 723.813 cv
1122.77 728.27 1119.16 731.883 1114.7 731.883 cv
cp
.0470588 .592157 .701961 rgb
f
707.556 779.387 mo
707.556 779.387 li
703.099 779.387 699.485 775.774 699.485 771.316 cv
699.485 766.859 703.099 763.246 707.556 763.246 cv
712.013 763.246 715.626 766.859 715.626 771.316 cv
715.626 775.774 712.013 779.387 707.556 779.387 cv
cp
.309804 .333333 .411765 rgb
f
1507.5 779.387 mo
796.289 779.387 li
791.832 779.387 788.218 775.774 788.218 771.316 cv
788.218 766.859 791.832 763.246 796.289 763.246 cv
1507.5 763.246 li
1511.96 763.246 1515.57 766.859 1515.57 771.316 cv
1515.57 775.774 1511.96 779.387 1507.5 779.387 cv
cp
1 .796078 .188235 rgb
f
1635.13 779.387 mo
1553.07 779.387 li
1548.61 779.387 1545 775.774 1545 771.316 cv
1545 766.859 1548.61 763.246 1553.07 763.246 cv
1635.13 763.246 li
1639.59 763.246 1643.2 766.859 1643.2 771.316 cv
1643.2 775.774 1639.59 779.387 1635.13 779.387 cv
cp
.960784 .670588 .207843 rgb
f
1635.13 778.044 mo
1553.07 778.044 li
1548.61 778.044 1545 774.431 1545 769.974 cv
1545 765.516 1548.61 761.903 1553.07 761.903 cv
1635.13 761.903 li
1639.59 761.903 1643.2 765.516 1643.2 769.974 cv
1643.2 774.431 1639.59 778.044 1635.13 778.044 cv
cp
f
707.556 826.891 mo
707.556 826.891 li
703.099 826.891 699.485 823.278 699.485 818.82 cv
699.485 814.363 703.099 810.75 707.556 810.75 cv
712.013 810.75 715.626 814.363 715.626 818.82 cv
715.626 823.278 712.013 826.891 707.556 826.891 cv
cp
.309804 .333333 .411765 rgb
f
707.556 874.395 mo
707.556 874.395 li
703.099 874.395 699.485 870.781 699.485 866.324 cv
699.485 861.867 703.099 858.253 707.556 858.253 cv
712.013 858.253 715.626 861.867 715.626 866.324 cv
715.626 870.781 712.013 874.395 707.556 874.395 cv
cp
f
1440.99 874.395 mo
852.014 874.395 li
847.556 874.395 843.943 870.781 843.943 866.324 cv
843.943 861.867 847.556 858.253 852.014 858.253 cv
1440.99 858.253 li
1445.45 858.253 1449.06 861.867 1449.06 866.324 cv
1449.06 870.781 1445.45 874.395 1440.99 874.395 cv
cp
.0470588 .592157 .701961 rgb
f
1635.13 874.395 mo
1482.96 874.395 li
1478.51 874.395 1474.89 870.781 1474.89 866.324 cv
1474.89 861.867 1478.51 858.253 1482.96 858.253 cv
1635.13 858.253 li
1639.59 858.253 1643.2 861.867 1643.2 866.324 cv
1643.2 870.781 1639.59 874.395 1635.13 874.395 cv
cp
1 .796078 .188235 rgb
f
707.556 921.898 mo
707.556 921.898 li
703.099 921.898 699.485 918.285 699.485 913.828 cv
699.485 909.37 703.099 905.757 707.556 905.757 cv
712.013 905.757 715.626 909.37 715.626 913.828 cv
715.626 918.285 712.013 921.898 707.556 921.898 cv
cp
.309804 .333333 .411765 rgb
f
835.872 921.898 mo
796.289 921.898 li
791.832 921.898 788.218 918.285 788.218 913.828 cv
788.218 909.37 791.832 905.757 796.289 905.757 cv
835.872 905.757 li
840.33 905.757 843.943 909.37 843.943 913.828 cv
843.943 918.285 840.33 921.898 835.872 921.898 cv
cp
.894118 .27451 .290196 rgb
f
707.556 968.776 mo
707.556 968.776 li
703.099 968.776 699.485 965.163 699.485 960.706 cv
699.485 956.249 703.099 952.635 707.556 952.635 cv
712.013 952.635 715.626 956.249 715.626 960.706 cv
715.626 965.163 712.013 968.776 707.556 968.776 cv
cp
.309804 .333333 .411765 rgb
f
877.183 968.776 mo
796.289 968.776 li
791.832 968.776 788.218 965.163 788.218 960.706 cv
788.218 956.249 791.832 952.635 796.289 952.635 cv
877.183 952.635 li
881.64 952.635 885.253 956.249 885.253 960.706 cv
885.253 965.163 881.64 968.776 877.183 968.776 cv
cp
.619608 .560784 .682353 rgb
f
1114.7 968.776 mo
917.298 968.776 li
912.84 968.776 909.227 965.163 909.227 960.706 cv
909.227 956.249 912.84 952.635 917.298 952.635 cv
1114.7 952.635 li
1119.16 952.635 1122.77 956.249 1122.77 960.706 cv
1122.77 965.163 1119.16 968.776 1114.7 968.776 cv
cp
.0470588 .592157 .701961 rgb
f
707.556 1016.28 mo
707.556 1016.28 li
703.099 1016.28 699.485 1012.67 699.485 1008.21 cv
699.485 1003.75 703.099 1000.14 707.556 1000.14 cv
712.013 1000.14 715.626 1003.75 715.626 1008.21 cv
715.626 1012.67 712.013 1016.28 707.556 1016.28 cv
cp
.309804 .333333 .411765 rgb
f
1507.5 1016.28 mo
796.289 1016.28 li
791.832 1016.28 788.218 1012.67 788.218 1008.21 cv
788.218 1003.75 791.832 1000.14 796.289 1000.14 cv
1507.5 1000.14 li
1511.96 1000.14 1515.57 1003.75 1515.57 1008.21 cv
1515.57 1012.67 1511.96 1016.28 1507.5 1016.28 cv
cp
1 .796078 .188235 rgb
f
1635.13 1016.28 mo
1553.07 1016.28 li
1548.61 1016.28 1545 1012.67 1545 1008.21 cv
1545 1003.75 1548.61 1000.14 1553.07 1000.14 cv
1635.13 1000.14 li
1639.59 1000.14 1643.2 1003.75 1643.2 1008.21 cv
1643.2 1012.67 1639.59 1016.28 1635.13 1016.28 cv
cp
.960784 .670588 .207843 rgb
f
1635.13 1014.94 mo
1553.07 1014.94 li
1548.61 1014.94 1545 1011.32 1545 1006.87 cv
1545 1002.41 1548.61 998.796 1553.07 998.796 cv
1635.13 998.796 li
1639.59 998.796 1643.2 1002.41 1643.2 1006.87 cv
1643.2 1011.32 1639.59 1014.94 1635.13 1014.94 cv
cp
f
707.556 1063.78 mo
707.556 1063.78 li
703.099 1063.78 699.485 1060.17 699.485 1055.71 cv
699.485 1051.26 703.099 1047.64 707.556 1047.64 cv
712.013 1047.64 715.626 1051.26 715.626 1055.71 cv
715.626 1060.17 712.013 1063.78 707.556 1063.78 cv
cp
.309804 .333333 .411765 rgb
f
1838.26 1063.78 mo
852.014 1063.78 li
847.556 1063.78 843.943 1060.17 843.943 1055.71 cv
843.943 1051.26 847.556 1047.64 852.014 1047.64 cv
1838.26 1047.64 li
1842.71 1047.64 1846.33 1051.26 1846.33 1055.71 cv
1846.33 1060.17 1842.71 1063.78 1838.26 1063.78 cv
cp
.894118 .27451 .290196 rgb
f
707.556 1111.29 mo
707.556 1111.29 li
703.099 1111.29 699.485 1107.67 699.485 1103.22 cv
699.485 1098.76 703.099 1095.15 707.556 1095.15 cv
712.013 1095.15 715.626 1098.76 715.626 1103.22 cv
715.626 1107.67 712.013 1111.29 707.556 1111.29 cv
cp
.309804 .333333 .411765 rgb
f
1016.47 1111.29 mo
852.014 1111.29 li
847.556 1111.29 843.943 1107.67 843.943 1103.22 cv
843.943 1098.76 847.556 1095.15 852.014 1095.15 cv
1016.47 1095.15 li
1020.93 1095.15 1024.54 1098.76 1024.54 1103.22 cv
1024.54 1107.67 1020.93 1111.29 1016.47 1111.29 cv
cp
.0470588 .592157 .701961 rgb
f
1440.99 1111.29 mo
1064.28 1111.29 li
1059.82 1111.29 1056.21 1107.67 1056.21 1103.22 cv
1056.21 1098.76 1059.82 1095.15 1064.28 1095.15 cv
1440.99 1095.15 li
1445.45 1095.15 1449.06 1098.76 1449.06 1103.22 cv
1449.06 1107.67 1445.45 1111.29 1440.99 1111.29 cv
cp
.619608 .560784 .682353 rgb
f
1635.13 1111.29 mo
1482.96 1111.29 li
1478.51 1111.29 1474.89 1107.67 1474.89 1103.22 cv
1474.89 1098.76 1478.51 1095.15 1482.96 1095.15 cv
1635.13 1095.15 li
1639.59 1095.15 1643.2 1098.76 1643.2 1103.22 cv
1643.2 1107.67 1639.59 1111.29 1635.13 1111.29 cv
cp
1 .796078 .188235 rgb
f
707.556 1158.79 mo
707.556 1158.79 li
703.099 1158.79 699.485 1155.18 699.485 1150.72 cv
699.485 1146.26 703.099 1142.65 707.556 1142.65 cv
712.013 1142.65 715.626 1146.26 715.626 1150.72 cv
715.626 1155.18 712.013 1158.79 707.556 1158.79 cv
cp
.309804 .333333 .411765 rgb
f
835.872 1158.79 mo
796.289 1158.79 li
791.832 1158.79 788.218 1155.18 788.218 1150.72 cv
788.218 1146.26 791.832 1142.65 796.289 1142.65 cv
835.872 1142.65 li
840.33 1142.65 843.943 1146.26 843.943 1150.72 cv
843.943 1155.18 840.33 1158.79 835.872 1158.79 cv
cp
.960784 .670588 .207843 rgb
f
707.556 1205.67 mo
707.556 1205.67 li
703.099 1205.67 699.485 1202.06 699.485 1197.6 cv
699.485 1193.14 703.099 1189.53 707.556 1189.53 cv
712.013 1189.53 715.626 1193.14 715.626 1197.6 cv
715.626 1202.06 712.013 1205.67 707.556 1205.67 cv
cp
.309804 .333333 .411765 rgb
f
877.183 1205.67 mo
796.289 1205.67 li
791.832 1205.67 788.218 1202.06 788.218 1197.6 cv
788.218 1193.14 791.832 1189.53 796.289 1189.53 cv
877.183 1189.53 li
881.64 1189.53 885.253 1193.14 885.253 1197.6 cv
885.253 1202.06 881.64 1205.67 877.183 1205.67 cv
cp
.619608 .560784 .682353 rgb
f
1114.7 1205.67 mo
917.298 1205.67 li
912.84 1205.67 909.227 1202.06 909.227 1197.6 cv
909.227 1193.14 912.84 1189.53 917.298 1189.53 cv
1114.7 1189.53 li
1119.16 1189.53 1122.77 1193.14 1122.77 1197.6 cv
1122.77 1202.06 1119.16 1205.67 1114.7 1205.67 cv
cp
.0470588 .592157 .701961 rgb
f
707.556 1253.17 mo
707.556 1253.17 li
703.099 1253.17 699.485 1249.56 699.485 1245.1 cv
699.485 1240.65 703.099 1237.03 707.556 1237.03 cv
712.013 1237.03 715.626 1240.65 715.626 1245.1 cv
715.626 1249.56 712.013 1253.17 707.556 1253.17 cv
cp
.309804 .333333 .411765 rgb
f
1507.5 1253.17 mo
796.289 1253.17 li
791.832 1253.17 788.218 1249.56 788.218 1245.1 cv
788.218 1240.65 791.832 1237.03 796.289 1237.03 cv
1507.5 1237.03 li
1511.96 1237.03 1515.57 1240.65 1515.57 1245.1 cv
1515.57 1249.56 1511.96 1253.17 1507.5 1253.17 cv
cp
1 .796078 .188235 rgb
f
1635.13 1253.17 mo
1553.07 1253.17 li
1548.61 1253.17 1545 1249.56 1545 1245.1 cv
1545 1240.65 1548.61 1237.03 1553.07 1237.03 cv
1635.13 1237.03 li
1639.59 1237.03 1643.2 1240.65 1643.2 1245.1 cv
1643.2 1249.56 1639.59 1253.17 1635.13 1253.17 cv
cp
.960784 .670588 .207843 rgb
f
1635.13 1251.83 mo
1553.07 1251.83 li
1548.61 1251.83 1545 1248.22 1545 1243.76 cv
1545 1239.3 1548.61 1235.69 1553.07 1235.69 cv
1635.13 1235.69 li
1639.59 1235.69 1643.2 1239.3 1643.2 1243.76 cv
1643.2 1248.22 1639.59 1251.83 1635.13 1251.83 cv
cp
1 .796078 .188235 rgb
f
707.556 1300.68 mo
707.556 1300.68 li
703.099 1300.68 699.485 1297.06 699.485 1292.61 cv
699.485 1288.15 703.099 1284.54 707.556 1284.54 cv
712.013 1284.54 715.626 1288.15 715.626 1292.61 cv
715.626 1297.06 712.013 1300.68 707.556 1300.68 cv
cp
.309804 .333333 .411765 rgb
f
1838.26 1300.68 mo
852.014 1300.68 li
847.556 1300.68 843.943 1297.06 843.943 1292.61 cv
843.943 1288.15 847.556 1284.54 852.014 1284.54 cv
1838.26 1284.54 li
1842.71 1284.54 1846.33 1288.15 1846.33 1292.61 cv
1846.33 1297.06 1842.71 1300.68 1838.26 1300.68 cv
cp
.0470588 .592157 .701961 rgb
f
707.556 1348.18 mo
707.556 1348.18 li
703.099 1348.18 699.485 1344.57 699.485 1340.11 cv
699.485 1335.65 703.099 1332.04 707.556 1332.04 cv
712.013 1332.04 715.626 1335.65 715.626 1340.11 cv
715.626 1344.57 712.013 1348.18 707.556 1348.18 cv
cp
.309804 .333333 .411765 rgb
f
1440.99 1348.18 mo
852.014 1348.18 li
847.556 1348.18 843.943 1344.57 843.943 1340.11 cv
843.943 1335.65 847.556 1332.04 852.014 1332.04 cv
1440.99 1332.04 li
1445.45 1332.04 1449.06 1335.65 1449.06 1340.11 cv
1449.06 1344.57 1445.45 1348.18 1440.99 1348.18 cv
cp
.619608 .560784 .682353 rgb
f
1635.13 1348.18 mo
1482.96 1348.18 li
1478.51 1348.18 1474.89 1344.57 1474.89 1340.11 cv
1474.89 1335.65 1478.51 1332.04 1482.96 1332.04 cv
1635.13 1332.04 li
1639.59 1332.04 1643.2 1335.65 1643.2 1340.11 cv
1643.2 1344.57 1639.59 1348.18 1635.13 1348.18 cv
cp
.894118 .27451 .290196 rgb
f
1838.26 1348.18 mo
1686.09 1348.18 li
1681.63 1348.18 1678.02 1344.57 1678.02 1340.11 cv
1678.02 1335.65 1681.63 1332.04 1686.09 1332.04 cv
1838.26 1332.04 li
1842.71 1332.04 1846.33 1335.65 1846.33 1340.11 cv
1846.33 1344.57 1842.71 1348.18 1838.26 1348.18 cv
cp
.619608 .560784 .682353 rgb
f
707.556 1395.68 mo
707.556 1395.68 li
703.099 1395.68 699.485 1392.07 699.485 1387.61 cv
699.485 1383.16 703.099 1379.54 707.556 1379.54 cv
712.013 1379.54 715.626 1383.16 715.626 1387.61 cv
715.626 1392.07 712.013 1395.68 707.556 1395.68 cv
cp
.309804 .333333 .411765 rgb
f
835.872 1395.68 mo
796.289 1395.68 li
791.832 1395.68 788.218 1392.07 788.218 1387.61 cv
788.218 1383.16 791.832 1379.54 796.289 1379.54 cv
835.872 1379.54 li
840.33 1379.54 843.943 1383.16 843.943 1387.61 cv
843.943 1392.07 840.33 1395.68 835.872 1395.68 cv
cp
.960784 .670588 .207843 rgb
f
659.71 1318.63 mo
641.629 1298.07 641.357 1266.62 650.854 1240.94 cv
660.35 1215.26 677.972 1193.58 693.552 1171.07 cv
709.132 1148.56 723.295 1123.47 724.172 1096.11 cv
725.799 1045.34 682.862 1005.21 665.207 957.586 cv
660.734 945.522 657.958 933.038 656.646 920.357 cv
645.839 812.461 704.575 692.051 808.833 655.34 cv
822.049 649.467 839.669 658.277 839.669 671.493 cv
841.138 700.861 813.238 724.356 813.238 755.193 cv
813.238 758.13 814.707 764.003 816.175 765.472 cv
869.038 794.84 879.317 847.703 824.985 882.945 cv
820.58 887.351 819.112 893.224 816.04 898.649 cv
812.386 908.012 811.959 918.027 813.549 927.956 cv
815.139 937.885 818.747 947.729 823.167 956.749 cv
832.009 974.789 844.048 991.339 850.586 1010.34 cv
868.449 1062.24 841.642 1118.64 809.78 1163.34 cv
777.917 1208.04 739.049 1251.06 728.65 1304.96 cv
725.319 1322.22 724.965 1340.46 717.188 1356.23 cv
709.41 1371.99 690.564 1384.45 674.416 1377.5 cv
673.347 1372.76 672.277 1368.02 671.207 1363.28 cv
.098039 .341176 .760784 rgb
f
704.808 1157.92 mo
703.364 1156.18 li
776.82 1095.27 754.972 1004.02 733.841 915.783 cv
732.019 908.173 730.198 900.57 728.438 892.99 cv
716.725 842.577 732.615 798.915 748.006 771.165 cv
764.667 741.129 784.374 722.729 784.571 722.547 cv
786.106 724.207 li
785.328 724.928 708.536 797.338 730.64 892.479 cv
732.399 900.053 734.219 907.651 736.04 915.256 cv
757.331 1004.17 779.347 1096.11 704.808 1157.92 cv
cp
.011765 .066667 .384314 rgb
f
508.807 1011.17 mo
481.709 980.483 463.733 938.995 470.943 898.698 cv
478.152 858.401 516.139 822.878 556.795 827.659 cv
534.207 792.377 510.91 754.974 508.772 713.135 cv
506.634 671.297 534.32 624.798 576.121 622.011 cv
593.865 620.828 611.002 628.982 623.157 641.845 cv
635.56 655.34 642.902 672.961 641.433 690.583 cv
632.623 678.835 644.37 664.151 656.118 661.214 cv
663.459 659.746 670.802 661.214 676.675 665.62 cv
688.423 675.898 695.765 690.583 692.828 705.267 cv
684.018 740.509 659.054 772.814 676.675 809.524 cv
704.575 865.324 729.539 919.656 742.15 980.231 cv
744.618 990.063 746.921 999.955 748.943 1009.91 cv
750.969 1019.85 752.711 1029.86 754.166 1039.91 cv
758.047 1066.74 759.701 1095.09 749.077 1120.03 cv
736.425 1149.74 707.734 1171.23 698.793 1202.26 cv
684.609 1251.46 724.604 1307.96 700.672 1353.23 cv
683.337 1386.02 636.783 1391.97 606.373 1375.11 cv
563.018 1351.08 561.945 1294.15 572.997 1251.55 cv
583.439 1211.3 606.462 1176.64 600.076 1132.73 cv
597.857 1117.49 592.417 1104.27 584.991 1092.31 cv
565.75 1061.33 533.184 1038.77 508.807 1011.17 cv
cp
.490196 .678431 1 rgb
f
498.372 1311.26 mo
801.192 1311.26 li
719.799 1473.39 li
570.064 1473.39 li
498.372 1311.26 li
cp
1 .796078 .188235 rgb
f
648.76 1302.93 mo
648.451 1302.28 641.175 1286.58 639.706 1255.99 cv
638.354 1227.85 641.961 1181.31 666.815 1119.43 cv
700.75 1034.94 656.093 950.478 623.486 888.805 cv
610.195 863.666 598.717 841.956 595.295 825.416 cv
583.604 768.911 616.59 701.041 616.925 700.362 cv
618.953 701.361 li
618.622 702.034 585.978 769.222 597.509 824.958 cv
600.866 841.183 612.274 862.762 625.485 887.748 cv
658.298 949.812 703.237 1034.81 668.914 1120.27 cv
644.247 1181.69 640.639 1227.82 641.957 1255.71 cv
643.382 1285.91 650.73 1301.81 650.804 1301.96 cv
648.76 1302.93 li
cp
.011765 .066667 .384314 rgb
f
668.988 1119.98 mo
666.742 1119.72 li
671.176 1081.75 662.869 1024.8 598.112 969.093 cv
559.296 935.701 518.066 918.423 517.654 918.252 cv
518.52 916.164 li
518.935 916.335 560.499 933.753 599.586 967.379 cv
635.745 998.484 677.136 1050.21 668.988 1119.98 cv
cp
f
612.159 867.069 mo
597.983 819.873 611.036 783.07 624.482 760.506 cv
639.042 736.075 657.226 722.599 657.407 722.465 cv
658.744 724.289 li
658.564 724.42 640.698 737.676 626.378 761.741 cv
613.192 783.9 600.396 820.049 614.324 866.417 cv
612.159 867.069 li
cp
f
660.976 1141.4 mo
658.72 1141.25 li
661.161 1105.5 655.559 1056.44 615.014 1025.72 cv
590.769 1007.35 565.202 1004.23 564.946 1004.2 cv
565.205 1001.96 li
565.466 1001.99 591.647 1005.18 616.378 1023.92 cv
657.729 1055.25 663.454 1105.1 660.976 1141.4 cv
cp
f
738.57 926.1 mo
736.317 925.902 li
739.149 893.57 748.955 850.181 779.583 827.084 cv
798.009 813.188 814.981 813.289 815.702 813.289 cv
815.67 815.549 li
815.491 815.584 798.635 815.489 780.819 828.983 cv
750.949 851.606 741.356 894.282 738.57 926.1 cv
cp
f
504.36 901.265 mo
501.681 901.265 499.502 903.444 499.502 906.123 cv
499.502 908.802 501.681 910.981 504.36 910.981 cv
507.04 910.981 509.219 908.802 509.219 906.123 cv
509.219 903.444 507.04 901.265 504.36 901.265 cv
cp
504.36 913.242 mo
500.435 913.242 497.241 910.049 497.241 906.123 cv
497.241 902.197 500.435 899.004 504.36 899.004 cv
508.286 899.004 511.479 902.197 511.479 906.123 cv
511.479 910.049 508.286 913.242 504.36 913.242 cv
cp
f
828.167 806.249 mo
826.226 806.249 824.647 807.828 824.647 809.769 cv
824.647 811.71 826.226 813.289 828.167 813.289 cv
830.107 813.289 831.686 811.71 831.686 809.769 cv
831.686 807.828 830.107 806.249 828.167 806.249 cv
cp
828.167 815.549 mo
824.979 815.549 822.387 812.957 822.387 809.769 cv
822.387 806.581 824.979 803.988 828.167 803.988 cv
831.354 803.988 833.947 806.581 833.947 809.769 cv
833.947 812.957 831.354 815.549 828.167 815.549 cv
cp
f
548.556 998.612 mo
546.143 998.612 544.18 1000.58 544.18 1002.99 cv
544.18 1005.4 546.143 1007.37 548.556 1007.37 cv
550.969 1007.37 552.932 1005.4 552.932 1002.99 cv
552.932 1000.58 550.969 998.612 548.556 998.612 cv
cp
548.556 1009.62 mo
544.896 1009.62 541.919 1006.65 541.919 1002.99 cv
541.919 999.329 544.896 996.352 548.556 996.352 cv
552.216 996.352 555.193 999.329 555.193 1002.99 cv
555.193 1006.65 552.216 1009.62 548.556 1009.62 cv
cp
f
621.391 686.574 mo
619.544 686.574 618.043 688.075 618.043 689.921 cv
618.043 691.768 619.544 693.269 621.391 693.269 cv
623.237 693.269 624.739 691.768 624.739 689.921 cv
624.739 688.075 623.237 686.574 621.391 686.574 cv
cp
621.391 695.53 mo
618.298 695.53 615.782 693.014 615.782 689.921 cv
615.782 686.829 618.298 684.313 621.391 684.313 cv
624.483 684.313 627 686.829 627 689.921 cv
627 693.014 624.483 695.53 621.391 695.53 cv
cp
f
667.646 713.739 mo
665.8 713.739 664.298 715.241 664.298 717.087 cv
664.298 718.933 665.8 720.435 667.646 720.435 cv
669.492 720.435 670.994 718.933 670.994 717.087 cv
670.994 715.241 669.492 713.739 667.646 713.739 cv
cp
667.646 722.695 mo
664.553 722.695 662.038 720.18 662.038 717.087 cv
662.038 713.995 664.553 711.479 667.646 711.479 cv
670.738 711.479 673.254 713.995 673.254 717.087 cv
673.254 720.18 670.738 722.695 667.646 722.695 cv
cp
f
794.663 703.606 mo
791.359 703.606 788.671 706.294 788.671 709.598 cv
788.671 712.901 791.359 715.589 794.663 715.589 cv
797.966 715.589 800.654 712.901 800.654 709.598 cv
800.654 706.294 797.966 703.606 794.663 703.606 cv
cp
794.663 717.85 mo
790.112 717.85 786.41 714.148 786.41 709.598 cv
786.41 705.047 790.112 701.345 794.663 701.345 cv
799.213 701.345 802.915 705.047 802.915 709.598 cv
802.915 714.148 799.213 717.85 794.663 717.85 cv
cp
f
1309.59 1004.61 mo
1309.59 1040.95 1280.13 1070.41 1243.79 1070.41 cv
1207.44 1070.41 1177.98 1040.95 1177.98 1004.61 cv
1177.98 968.269 1207.44 938.805 1243.79 938.805 cv
1280.13 938.805 1309.59 968.269 1309.59 1004.61 cv
cp
1 .796078 .188235 rgb
f
1209.61 1048.55 mo
1210.63 1048.55 1211.64 1048.15 1212.4 1047.36 cv
1213.88 1045.83 1213.83 1043.38 1212.29 1041.91 cv
1197.92 1028.09 1197.76 1008.02 1197.76 1007.81 cv
1197.76 1005.68 1196.03 1003.95 1193.9 1003.95 cv
1191.77 1003.95 1190.04 1005.68 1190.04 1007.81 cv
1190.04 1008.77 1190.23 1031.4 1206.94 1047.47 cv
1207.69 1048.19 1208.65 1048.55 1209.61 1048.55 cv
cp
.972549 .972549 .972549 rgb
f
1519.59 1395.5 mo
1573.54 1118.17 li
1366.31 895.704 li
1377.18 880.456 li
1595.31 1111.41 li
1540.75 1392.53 li
1519.59 1395.5 li
cp
.011765 .066667 .384314 rgb
f
1390.21 894.262 mo
1414.44 919.908 li
1388.86 919.908 li
1380.53 910.965 li
1390.21 894.262 li
cp
f
1584.54 1166.89 mo
1567.99 1146.7 li
1569.02 1141.39 li
1589.81 1139.75 li
1584.54 1166.89 li
cp
f
1459.84 1430.38 mo
1459.84 1431.86 1458.64 1433.08 1457.14 1433.08 cv
1421.37 1433.08 li
1419.88 1433.08 1418.66 1431.86 1418.66 1430.38 cv
1418.66 1403.37 li
1418.66 1401.88 1419.88 1400.67 1421.37 1400.67 cv
1457.14 1400.67 li
1458.64 1400.67 1459.84 1401.88 1459.84 1403.37 cv
1459.84 1430.38 li
cp
.972549 .972549 .972549 rgb
f
1530.17 1404.84 mo
1442.04 1404.84 1370.59 1425.41 1370.59 1462.26 cv
1689.75 1462.26 li
1689.75 1425.41 1618.31 1404.84 1530.17 1404.84 cv
cp
.011765 .066667 .384314 rgb
f
1530.17 1427.81 mo
1514.14 1427.81 1517.34 1415.66 1523.32 1404.88 cv
1525.59 1404.86 1527.87 1404.84 1530.17 1404.84 cv
1549.62 1404.84 1568.26 1405.84 1585.5 1407.8 cv
1576.61 1413.7 1552.93 1427.81 1530.17 1427.81 cv
cp
f
1395.2 913.984 mo
1381.76 926.944 1360.36 926.548 1347.4 913.103 cv
1334.44 899.671 1334.85 878.269 1348.28 865.317 cv
1361.72 852.365 1383.12 852.756 1396.08 866.198 cv
1409.03 879.638 1408.64 901.03 1395.2 913.984 cv
cp
.098039 .341176 .760784 rgb
f
1383.07 901.411 mo
1376.58 907.664 1366.24 907.475 1359.99 900.977 cv
1353.73 894.488 1353.92 884.155 1360.42 877.904 cv
1366.91 871.642 1377.24 871.834 1383.5 878.327 cv
1389.75 884.815 1389.56 895.149 1383.07 901.411 cv
cp
.011765 .066667 .384314 rgb
f
1617.95 1114.68 mo
1617.95 1133.34 1602.81 1148.48 1584.15 1148.48 cv
1565.48 1148.48 1550.35 1133.34 1550.35 1114.68 cv
1550.35 1096.01 1565.48 1080.88 1584.15 1080.88 cv
1602.81 1080.88 1617.95 1096.01 1617.95 1114.68 cv
cp
.098039 .341176 .760784 rgb
f
1600.47 1114.68 mo
1600.47 1123.69 1593.17 1131 1584.15 1131 cv
1575.14 1131 1567.82 1123.69 1567.82 1114.68 cv
1567.82 1105.66 1575.14 1098.35 1584.15 1098.35 cv
1593.17 1098.35 1600.47 1105.66 1600.47 1114.68 cv
cp
.011765 .066667 .384314 rgb
f
1563.96 1394.01 mo
1563.96 1412.68 1548.83 1427.81 1530.17 1427.81 cv
1511.5 1427.81 1496.37 1412.68 1496.37 1394.01 cv
1496.37 1375.35 1511.5 1360.21 1530.17 1360.21 cv
1548.83 1360.21 1563.96 1375.35 1563.96 1394.01 cv
cp
.098039 .341176 .760784 rgb
f
1546.49 1394.01 mo
1546.49 1403.02 1539.19 1410.34 1530.17 1410.34 cv
1521.15 1410.34 1513.84 1403.02 1513.84 1394.01 cv
1513.84 1385 1521.15 1377.69 1530.17 1377.69 cv
1539.19 1377.69 1546.49 1385 1546.49 1394.01 cv
cp
.011765 .066667 .384314 rgb
f
1358.8 937.406 mo
1322.88 900.151 li
1338.11 885.479 li
1374.02 922.733 li
1358.8 937.406 li
cp
f
1160.99 959.129 mo
1226.75 895.746 1287.81 854.644 1347.21 914.041 cv
1401.81 968.645 1361.06 1035.09 1295.3 1098.47 cv
1160.99 959.129 li
cp
.098039 .341176 .760784 rgb
f
1371.66 877.904 mo
1365.44 877.904 1360.42 882.93 1360.42 889.14 cv
1360.42 895.354 1365.44 900.383 1371.66 900.383 cv
1377.86 900.383 1382.89 895.354 1382.89 889.14 cv
1382.89 882.93 1377.86 877.904 1371.66 877.904 cv
cp
.972549 .972549 .972549 rgb
f
1584.15 1103.22 mo
1577.94 1103.22 1572.91 1108.25 1572.91 1114.46 cv
1572.91 1120.67 1577.94 1125.7 1584.15 1125.7 cv
1590.36 1125.7 1595.39 1120.67 1595.39 1114.46 cv
1595.39 1108.25 1590.36 1103.22 1584.15 1103.22 cv
cp
f
1530.17 1382.77 mo
1523.96 1382.77 1518.93 1387.8 1518.93 1394.01 cv
1518.93 1400.22 1523.96 1405.26 1530.17 1405.26 cv
1536.38 1405.26 1541.4 1400.22 1541.4 1394.01 cv
1541.4 1387.8 1536.38 1382.77 1530.17 1382.77 cv
cp
f
1116.02 1781.93 mo
1113.07 1781.93 1110.07 1781.41 1107.05 1780.26 cv
1087.14 1772.69 1086.07 1745.73 1078.7 1725.73 cv
1069.03 1699.5 1042.03 1680.67 1014.07 1680.66 cv
1014.06 1680.66 1014.05 1680.66 1014.04 1680.66 cv
994.267 1680.66 974.937 1690.07 961.95 1704.85 cv
950.368 1718.02 950.467 1744.87 935.007 1752.56 cv
930.069 1755.02 925.845 1756.13 922.231 1756.13 cv
891.016 1756.13 905.436 1673.14 900.441 1657.66 cv
891.168 1628.91 858.573 1614.22 828.48 1611.56 cv
823.064 1611.08 817.65 1610.87 812.235 1610.87 cv
786.496 1610.87 760.75 1615.5 734.973 1617.29 cv
729.177 1617.69 723.307 1617.93 717.425 1617.93 cv
691.647 1617.93 665.671 1613.4 644.979 1598.56 cv
619.567 1580.33 606.39 1542.41 623.843 1516.46 cv
635.111 1499.7 656.131 1491.69 676.308 1490.92 cv
677.619 1490.87 678.926 1490.85 680.235 1490.85 cv
699.059 1490.85 717.593 1495.85 735.905 1500.45 cv
844.935 1527.79 957.326 1541.5 1069.73 1541.5 cv
1164.9 1541.5 1260.09 1531.67 1353.21 1511.98 cv
1365.75 1509.33 1378.58 1506.49 1391.3 1506.49 cv
1395.98 1506.49 1400.65 1506.88 1405.29 1507.8 cv
1422.5 1511.22 1439.16 1524.29 1440.63 1541.78 cv
1442.05 1558.67 1428.83 1573.97 1413.31 1580.81 cv
1397.8 1587.64 1380.33 1587.97 1363.4 1588.78 cv
1303.59 1591.61 1244.12 1601.69 1186.72 1618.74 cv
1203.79 1620.93 1214.12 1640.52 1212.47 1657.65 cv
1210.83 1674.79 1200.66 1689.75 1190.82 1703.87 cv
1180.01 1719.37 1169.21 1734.88 1158.4 1750.38 cv
1147.99 1765.31 1132.67 1781.94 1116.02 1781.93 cv
.827451 .827451 .827451 rgb
f
809.602 1401.68 mo
1290.56 1380.69 li
1260.82 1489.39 li
980.784 1606.83 li
802.445 1527.34 li
809.602 1401.68 li
cp
.011765 .066667 .384314 rgb
f
860.913 1355.66 mo
865.085 1441.15 li
1232.59 1441.15 li
1241.85 1262.18 li
860.913 1355.66 li
cp
1 .396078 .301961 rgb
f
979.094 1023.7 mo
979.094 1023.7 822.158 1055.51 793.292 1079.2 cv
764.426 1102.9 735.836 1393.64 745.593 1407.06 cv
755.35 1420.47 1342.68 1434.18 1356.21 1409.04 cv
1369.75 1383.89 1294.33 1082.79 1274.02 1067.7 cv
1253.71 1052.62 1028.84 1020.31 979.094 1023.7 cv
cp
f
1232.63 1331.31 mo
1232.48 1331.3 li
1231.53 1331.22 1230.82 1330.38 1230.9 1329.43 cv
1235.7 1274.04 1230.95 1118.06 1230.9 1116.49 cv
1230.87 1115.54 1231.62 1114.74 1232.57 1114.71 cv
1233.45 1114.64 1234.32 1115.43 1234.35 1116.38 cv
1234.4 1117.95 1239.16 1274.14 1234.35 1329.73 cv
1234.27 1330.63 1233.51 1331.31 1232.63 1331.31 cv
cp
0 .0509804 .254902 rgb
f
844.891 1325.64 mo
844.692 1325.63 li
843.744 1325.52 843.063 1324.66 843.171 1323.71 cv
850.667 1258.14 837.154 1123.45 837.017 1122.1 cv
836.92 1121.15 837.612 1120.3 838.561 1120.21 cv
839.515 1120.11 840.36 1120.8 840.456 1121.75 cv
840.593 1123.11 854.143 1258.17 846.605 1324.1 cv
846.505 1324.99 845.757 1325.64 844.891 1325.64 cv
cp
f
899.396 1394.97 mo
891.984 1365.02 li
891.475 1362.97 892.657 1360.87 894.679 1360.24 cv
904.824 1357.09 li
906.242 1356.65 907.299 1355.46 907.569 1354 cv
909.292 1344.7 li
909.643 1342.81 911.295 1341.43 913.222 1341.43 cv
921.52 1341.43 li
922.898 1341.43 924.179 1340.72 924.909 1339.56 cv
929.969 1331.46 li
931.119 1329.62 933.528 1329.03 935.396 1330.14 cv
945.002 1335.83 li
946.228 1336.56 947.747 1336.58 948.991 1335.88 cv
954.63 1332.73 li
956.456 1331.71 958.76 1332.27 959.914 1334.01 cv
980.12 1364.55 li
981.369 1366.43 980.802 1368.98 978.871 1370.16 cv
974.395 1372.9 li
972.741 1373.91 970.601 1373.59 969.317 1372.13 cv
966.671 1369.14 961.758 1371.45 962.374 1375.4 cv
962.581 1376.73 li
962.85 1378.45 961.967 1380.15 960.401 1380.93 cv
920.776 1400.48 li
920.515 1400.61 920.248 1400.71 919.965 1400.78 cv
917.479 1401.39 905.307 1403.95 899.95 1396.24 cv
899.684 1395.86 899.507 1395.42 899.396 1394.97 cv
cp
.996078 .729412 .780392 rgb
f
1178.59 1394.97 mo
1186.01 1365.02 li
1186.51 1362.97 1185.33 1360.87 1183.31 1360.24 cv
1173.17 1357.09 li
1171.75 1356.65 1170.69 1355.46 1170.42 1354 cv
1168.7 1344.7 li
1168.35 1342.81 1166.7 1341.43 1164.77 1341.43 cv
1156.47 1341.43 li
1155.09 1341.43 1153.81 1340.72 1153.08 1339.56 cv
1148.02 1331.46 li
1146.87 1329.62 1144.46 1329.03 1142.59 1330.14 cv
1132.99 1335.83 li
1131.76 1336.56 1130.24 1336.58 1129 1335.88 cv
1123.36 1332.73 li
1121.54 1331.71 1119.23 1332.27 1118.08 1334.01 cv
1097.87 1364.55 li
1096.62 1366.43 1097.19 1368.98 1099.12 1370.16 cv
1103.6 1372.9 li
1105.25 1373.91 1107.39 1373.59 1108.67 1372.13 cv
1111.32 1369.14 1116.23 1371.45 1115.62 1375.4 cv
1115.41 1376.73 li
1115.14 1378.45 1116.02 1380.15 1117.59 1380.93 cv
1157.21 1400.48 li
1157.48 1400.61 1157.74 1400.71 1158.03 1400.78 cv
1160.51 1401.39 1172.68 1403.95 1178.04 1396.24 cv
1178.31 1395.86 1178.48 1395.42 1178.59 1394.97 cv
cp
f
891.869 1354.79 mo
891.615 1354.77 li
797.659 1340.93 li
796.714 1340.79 796.061 1339.91 796.2 1338.97 cv
796.34 1338.03 797.222 1337.37 798.162 1337.51 cv
892.118 1351.35 li
893.063 1351.49 893.715 1352.37 893.576 1353.31 cv
893.449 1354.17 892.711 1354.79 891.869 1354.79 cv
cp
0 .0509804 .254902 rgb
f
1194.4 1359.77 mo
1193.58 1359.77 1192.85 1359.18 1192.7 1358.34 cv
1192.53 1357.4 1193.16 1356.51 1194.1 1356.34 cv
1270.48 1342.71 li
1271.42 1342.54 1272.32 1343.17 1272.48 1344.11 cv
1272.65 1345.05 1272.03 1345.95 1271.09 1346.12 cv
1194.7 1359.74 li
1194.6 1359.76 1194.5 1359.77 1194.4 1359.77 cv
cp
f
954.015 956.411 mo
954.015 956.411 940.831 1069.77 1021.56 1069.77 cv
1095 1069.77 1092.44 972.242 1092.44 972.242 cv
1092.44 972.242 1099.78 911.883 1042.85 905.052 cv
985.917 898.22 950.58 936.037 954.015 956.411 cv
cp
.996078 .729412 .780392 rgb
f
1072.9 919.217 mo
1072.9 919.217 1054.96 954.356 1073.14 972.205 cv
1084.75 983.593 1089.88 1000.02 1086.15 1015.85 cv
1085.96 1016.7 li
1085.96 1016.7 1116.44 992.552 1122.09 943.591 cv
1127.73 894.63 1105.52 863.818 1086.71 867.295 cv
1086.71 867.295 1079.22 829.681 1031.44 833.199 cv
983.664 836.715 944.231 832.837 926.93 870.713 cv
909.628 908.589 939.786 941.758 939.786 941.758 cv
939.786 941.758 942.14 981.844 958.448 1016.72 cv
952.083 969.911 li
952.083 969.911 1004.58 899.384 1072.9 919.217 cv
cp
.011765 .066667 .384314 rgb
f
1091.52 978.318 mo
1085.96 1016.7 li
1085.96 1016.7 1113.09 1002.29 1112.66 982.753 cv
1112.51 976.24 1110.25 972.642 1107.3 970.739 cv
1101.01 966.68 1092.6 970.906 1091.52 978.318 cv
cp
.996078 .729412 .780392 rgb
f
954.173 967.281 mo
958.873 1016.7 li
958.873 1016.7 932.796 1001.59 933.23 982.044 cv
933.665 962.503 954.173 967.281 954.173 967.281 cv
cp
f
1167.76 1232.14 mo
895.893 1232.14 li
883.94 1232.14 874.251 1241.83 874.251 1253.78 cv
874.251 1433.2 li
874.251 1445.15 883.94 1454.84 895.893 1454.84 cv
1167.76 1454.84 li
1179.71 1454.84 1189.4 1445.15 1189.4 1433.2 cv
1189.4 1253.78 li
1189.4 1241.83 1179.71 1232.14 1167.76 1232.14 cv
cp
.972549 .972549 .972549 rgb
f
1184.16 1465.32 mo
879.492 1465.32 li
876.597 1465.32 874.251 1462.98 874.251 1460.08 cv
874.251 1457.19 876.597 1454.84 879.492 1454.84 cv
1184.16 1454.84 li
1187.05 1454.84 1189.4 1457.19 1189.4 1460.08 cv
1189.4 1462.98 1187.05 1465.32 1184.16 1465.32 cv
cp
.454902 .411765 .501961 rgb
f
1138.82 1459.69 mo
1138.82 1460.92 1137.82 1461.92 1136.59 1461.92 cv
1135.36 1461.92 1134.36 1460.92 1134.36 1459.69 cv
1134.36 1458.46 1135.36 1457.46 1136.59 1457.46 cv
1137.82 1457.46 1138.82 1458.46 1138.82 1459.69 cv
cp
.619608 .560784 .682353 rgb
f
1110.93 1461.92 mo
1128.96 1461.92 li
1128.96 1457.46 li
1110.93 1457.46 li
1110.93 1461.92 li
cp
f
708.422 1328.84 mo
1125.88 1582.3 li
1092.27 1609.59 1073.57 1645.24 1066.05 1687.17 cv
631.198 1468.18 li
587.425 1446.13 573.724 1390.18 602.36 1350.41 cv
626.669 1316.64 672.858 1307.25 708.422 1328.84 cv
cp
.098039 .341176 .760784 rgb
f
1005.16 1620.78 mo
978.653 1643.16 li
1031.09 1669.57 li
1046.78 1656.06 1077.37 1630.01 1081.93 1628.27 cv
1088.09 1625.92 1005.16 1620.78 1005.16 1620.78 cv
cp
.011765 .066667 .384314 rgb
f
1125.88 1582.3 mo
1195.41 1621.48 li
1200.6 1624.4 1202.41 1630.99 1199.44 1636.16 cv
1181.1 1668.14 1119.93 1771.52 1087.6 1785.57 cv
1087.6 1785.57 1061.5 1777.19 1071.5 1743.06 cv
1081.49 1708.94 1068.04 1677.37 1068.04 1677.37 cv
1068.04 1677.37 1070.31 1597.82 1125.88 1582.3 cv
cp
f
1087.6 1785.57 mo
1119.93 1771.52 1181.1 1668.14 1199.44 1636.16 cv
1201.78 1632.08 1201.14 1627.13 1198.22 1623.78 cv
1185.8 1631.13 1132 1668.49 1087.6 1785.57 cv
cp
.172549 .294118 .501961 rgb
f
1345.01 1357.46 mo
903.939 1567.15 li
934.598 1597.71 949.581 1635.08 952.8 1677.56 cv
1407.66 1503.93 li
1453.45 1486.45 1472.77 1432.18 1448.33 1389.7 cv
1448.33 1389.7 li
1427.58 1353.64 1382.58 1339.6 1345.01 1357.46 cv
cp
.098039 .341176 .760784 rgb
f
903.939 1567.15 mo
830.788 1599.06 li
825.329 1601.44 822.859 1607.81 825.281 1613.25 cv
840.275 1646.93 890.621 1755.99 921.349 1773.26 cv
921.349 1773.26 948.166 1767.58 941.692 1732.61 cv
935.219 1697.65 951.808 1667.61 951.808 1667.61 cv
951.808 1667.61 957.641 1588.24 903.939 1567.15 cv
cp
.011765 .066667 .384314 rgb
f
921.349 1773.26 mo
890.621 1755.99 840.275 1646.93 825.281 1613.25 cv
823.37 1608.96 824.514 1604.09 827.761 1601.06 cv
839.37 1609.63 889.093 1652.27 921.349 1773.26 cv
cp
.172549 .294118 .501961 rgb
f
746.334 1332.23 mo
743.216 1372.78 742.603 1402.94 745.593 1407.06 cv
748.336 1410.83 796.732 1414.62 865.195 1417.57 cv
746.334 1332.23 li
cp
1 .396078 .301961 rgb
f
1186.8 1422.77 mo
1279.71 1421.7 1351.58 1417.64 1356.21 1409.04 cv
1359.53 1402.88 1357.51 1380.17 1352.27 1349.17 cv
1186.8 1422.77 li
cp
f
920.836 1560.85 mo
920.189 1560.85 919.57 1560.48 919.274 1559.86 cv
918.865 1559 919.231 1557.97 920.093 1557.56 cv
999.208 1519.95 li
1000.07 1519.54 1001.1 1519.9 1001.51 1520.76 cv
1001.92 1521.63 1001.55 1522.66 1000.69 1523.07 cv
921.577 1560.68 li
921.337 1560.79 921.085 1560.85 920.836 1560.85 cv
cp
0 .0509804 .254902 rgb
f
714.008 488.947 mo
714.008 500.068 704.993 509.083 693.872 509.083 cv
508.32 509.083 li
497.2 509.083 488.185 500.068 488.185 488.948 cv
488.185 387.099 li
488.185 375.979 497.2 366.964 508.32 366.964 cv
693.871 366.964 li
704.993 366.964 714.008 375.98 714.008 387.102 cv
714.008 488.947 li
cp
1 .396078 .301961 rgb
f
571.239 477.847 mo
585.951 477.847 li
628.281 398.201 li
613.569 398.201 li
571.239 477.847 li
cp
.972549 .972549 .972549 rgb
f
675.709 440.387 mo
675.603 440.387 li
652.828 408.169 li
637.209 408.169 li
660.035 440.477 li
637.209 471.254 li
652.828 471.254 li
675.603 440.568 li
675.709 440.568 li
675.655 440.477 li
675.709 440.387 li
cp
f
526.484 440.387 mo
526.59 440.387 li
549.362 408.169 li
563.634 408.169 li
540.807 440.477 li
563.634 471.254 li
549.362 471.254 li
526.59 440.568 li
526.484 440.568 li
526.537 440.477 li
526.484 440.387 li
cp
f
1553.7 681.637 mo
1553.7 694.937 1542.91 705.719 1529.61 705.719 cv
1307.7 705.719 li
1294.4 705.719 1283.62 694.938 1283.62 681.638 cv
1283.62 559.831 li
1283.62 546.532 1294.4 535.75 1307.7 535.75 cv
1529.61 535.75 li
1542.91 535.75 1553.7 546.533 1553.7 559.834 cv
1553.7 681.637 li
cp
.098039 .341176 .760784 rgb
f
1357.18 616.644 mo
1356.27 617.85 1354.65 619.133 1352.31 620.492 cv
1349.71 622.187 li
1350.46 622.79 1351.33 623.355 1352.31 623.882 cv
1353.97 624.943 1355.2 625.806 1355.99 626.485 cv
1356.78 627.165 1357.4 628.066 1357.86 629.196 cv
1358.31 630.333 1358.54 631.875 1358.54 633.838 cv
1358.54 654.529 li
1358.54 657.469 1359.38 659.583 1361.08 660.866 cv
1362.78 662.149 1365.62 662.791 1369.62 662.791 cv
1369.62 671.38 li
1365.66 671.38 li
1359.63 671.38 1355.31 670.326 1352.71 668.219 cv
1350.11 666.104 1348.81 662.562 1348.81 657.583 cv
1348.81 633.158 li
1348.81 630.822 1348.39 629.142 1347.56 628.127 cv
1346.74 627.104 1345.45 626.6 1343.72 626.6 cv
1340.44 626.6 li
1340.44 617.888 li
1343.72 617.888 li
1345.45 617.888 1346.74 617.384 1347.56 616.361 cv
1348.39 615.346 1348.81 613.666 1348.81 611.33 cv
1348.81 586.905 li
1348.81 582.003 1350.11 578.476 1352.71 576.33 cv
1355.31 574.177 1359.63 573.108 1365.66 573.108 cv
1369.62 573.108 li
1369.62 581.697 li
1365.62 581.697 1362.78 582.339 1361.08 583.622 cv
1359.38 584.904 1358.54 587.019 1358.54 589.959 cv
1358.54 610.765 li
1358.54 613.483 1358.08 615.437 1357.18 616.644 cv
cp
.972549 .972549 .972549 rgb
f
1496.87 617.888 mo
1496.87 626.6 li
1493.59 626.6 li
1491.86 626.6 1490.58 627.104 1489.75 628.127 cv
1488.92 629.142 1488.51 630.822 1488.51 633.158 cv
1488.51 657.583 li
1488.51 662.562 1487.2 666.104 1484.6 668.219 cv
1482 670.326 1477.68 671.38 1471.66 671.38 cv
1467.7 671.38 li
1467.7 662.791 li
1471.69 662.791 1474.54 662.149 1476.23 660.866 cv
1477.93 659.583 1478.78 657.469 1478.78 654.529 cv
1478.78 633.838 li
1478.78 631.875 1479 630.333 1479.46 629.196 cv
1479.91 628.066 1480.53 627.165 1481.32 626.485 cv
1482.12 625.806 1483.34 624.943 1485 623.882 cv
1485.98 623.355 1486.85 622.79 1487.6 622.187 cv
1485 620.492 li
1482.66 619.133 1481.04 617.85 1480.13 616.644 cv
1479.23 615.437 1478.78 613.483 1478.78 610.765 cv
1478.78 589.959 li
1478.78 587.019 1477.93 584.904 1476.23 583.622 cv
1474.54 582.339 1471.69 581.697 1467.7 581.697 cv
1467.7 573.108 li
1471.66 573.108 li
1477.68 573.108 1482 574.177 1484.6 576.33 cv
1487.2 578.476 1488.51 582.003 1488.51 586.905 cv
1488.51 611.33 li
1488.51 613.666 1488.92 615.346 1489.75 616.361 cv
1490.58 617.384 1491.86 617.888 1493.59 617.888 cv
1496.87 617.888 li
cp
f
1422.39 317.133 mo
1416.09 356.593 1378.99 383.47 1339.53 377.165 cv
1300.07 370.86 1273.19 333.76 1279.49 294.3 cv
1285.8 254.84 1322.9 227.963 1362.36 234.268 cv
1401.82 240.573 1428.7 277.673 1422.39 317.133 cv
cp
.098039 .341176 .760784 rgb
f
1317.49 288.137 mo
1316.07 297.049 li
1325.74 298.595 li
1327.17 289.683 li
1331.99 290.453 li
1328.57 311.817 li
1323.75 311.046 li
1325.1 302.624 li
1315.42 301.078 li
1314.08 309.5 li
1309.25 308.73 li
1312.67 287.366 li
1317.49 288.137 li
cp
1 1 1 rgb
f
1352.44 293.721 mo
1351.79 297.811 li
1345.25 296.767 li
1342.49 314.041 li
1337.67 313.271 li
1340.43 295.997 li
1333.93 294.958 li
1334.58 290.868 li
1352.44 293.721 li
cp
f
1360.44 294.999 mo
1364.58 309.056 li
1372.86 296.983 li
1378.23 297.842 li
1374.82 319.206 li
1370.48 318.513 li
1372.78 304.108 li
1365.15 315.439 li
1362.01 314.937 li
1358.29 301.792 li
1355.99 316.197 li
1351.62 315.5 li
1355.04 294.136 li
1360.44 294.999 li
cp
f
1387.79 299.369 mo
1385.05 316.521 li
1394.2 317.984 li
1393.53 322.196 li
1379.55 319.962 li
1382.96 298.599 li
1387.79 299.369 li
cp
f
205.235 911.453 mo
173.363 908.758 145.342 932.411 142.647 964.284 cv
139.953 996.156 163.605 1024.18 195.478 1026.87 cv
227.35 1029.57 255.371 1005.91 258.066 974.042 cv
260.76 942.169 237.107 914.147 205.235 911.453 cv
cp
.098039 .341176 .760784 rgb
f
178.879 984.316 mo
173.864 983.892 169.989 981.416 167.153 977.467 cv
171.552 971.821 li
173.933 974.816 176.804 976.457 179.098 976.651 cv
181.873 976.886 183.724 975.323 183.995 972.121 cv
185.52 954.087 li
172.661 953 li
173.265 945.85 li
194.606 947.654 li
192.459 973.051 li
191.796 980.894 186.616 984.97 178.879 984.316 cv
cp
1 1 1 rgb
f
214.502 956.215 mo
211.674 955.976 209.668 956.826 209.497 958.854 cv
208.915 965.737 229.141 963.578 227.951 977.019 cv
227.333 984.33 220.649 987.739 212.38 987.041 cv
206.244 986.521 200.307 983.656 196.395 979.725 cv
200.336 973.126 li
203.891 976.866 209.146 979.513 213.095 979.846 cv
216.563 980.14 218.751 979.036 218.946 976.742 cv
219.541 969.698 199.292 972.125 200.411 958.892 cv
200.984 952.117 207.161 948.34 215.805 949.07 cv
221.033 949.513 226.127 951.556 229.653 954.326 cv
225.808 961.039 li
222.058 958.358 217.491 956.467 214.502 956.215 cv
cp
f
1746.67 1488.15 mo
1746.67 1498.41 1738.35 1506.73 1728.09 1506.73 cv
1627.96 1506.73 li
1617.69 1506.73 1609.37 1498.41 1609.37 1488.15 cv
1609.37 1394.15 li
1609.37 1383.88 1617.69 1375.56 1627.96 1375.56 cv
1728.08 1375.56 li
1738.35 1375.56 1746.67 1383.88 1746.67 1394.15 cv
1746.67 1488.15 li
cp
1 .796078 .188235 rgb
f
1686.76 1403.1 mo
1669.33 1403.1 li
1669.33 1413.41 li
1667.69 1413.92 1666.11 1414.58 1664.6 1415.37 cv
1657.3 1408.06 li
1644.97 1420.38 li
1652.27 1427.68 li
1651.48 1429.18 1650.82 1430.76 1650.3 1432.41 cv
1639.97 1432.41 li
1639.97 1449.84 li
1650.28 1449.84 li
1650.79 1451.48 1651.46 1453.06 1652.24 1454.56 cv
1644.93 1461.87 li
1657.26 1474.2 li
1664.55 1466.9 li
1666.06 1467.69 1667.64 1468.35 1669.28 1468.87 cv
1669.28 1479.2 li
1686.71 1479.2 li
1686.71 1468.89 li
1688.35 1468.37 1689.93 1467.71 1691.44 1466.93 cv
1698.75 1474.24 li
1711.07 1461.91 li
1703.78 1454.61 li
1704.56 1453.11 1705.23 1451.53 1705.74 1449.89 cv
1716.07 1449.89 li
1716.07 1432.46 li
1705.76 1432.46 li
1705.25 1430.81 1704.58 1429.24 1703.8 1427.73 cv
1711.11 1420.42 li
1698.78 1408.1 li
1691.49 1415.39 li
1689.98 1414.61 1688.41 1413.94 1686.76 1413.42 cv
1686.76 1403.1 li
cp
1683.38 1406.48 mo
1683.38 1413.42 li
1683.38 1415.91 li
1685.75 1416.65 li
1687.16 1417.1 1688.57 1417.69 1689.92 1418.39 cv
1692.12 1419.55 li
1693.88 1417.79 li
1698.78 1412.89 li
1706.32 1420.42 li
1701.41 1425.34 li
1699.65 1427.09 li
1700.8 1429.3 li
1701.5 1430.66 1702.09 1432.06 1702.53 1433.47 cv
1703.27 1435.85 li
1705.76 1435.85 li
1712.69 1435.85 li
1712.69 1446.5 li
1705.74 1446.5 li
1703.26 1446.5 li
1702.51 1448.87 li
1702.07 1450.29 1701.48 1451.69 1700.77 1453.04 cv
1699.62 1455.25 li
1701.38 1457.01 li
1706.28 1461.91 li
1698.75 1469.45 li
1693.83 1464.53 li
1692.08 1462.77 li
1689.87 1463.92 li
1688.51 1464.63 1687.11 1465.21 1685.7 1465.66 cv
1683.32 1466.4 li
1683.32 1468.89 li
1683.32 1475.81 li
1672.67 1475.81 li
1672.67 1468.87 li
1672.67 1466.39 li
1670.3 1465.64 li
1668.88 1465.19 1667.48 1464.61 1666.13 1463.9 cv
1663.92 1462.75 li
1662.16 1464.51 li
1657.26 1469.41 li
1649.72 1461.87 li
1654.64 1456.96 li
1656.39 1455.2 li
1655.25 1453 li
1654.54 1451.64 1653.95 1450.24 1653.51 1448.83 cv
1652.77 1446.45 li
1650.28 1446.45 li
1643.36 1446.45 li
1643.36 1435.79 li
1650.3 1435.79 li
1652.78 1435.79 li
1653.53 1433.42 li
1653.97 1432.01 1654.56 1430.6 1655.27 1429.25 cv
1656.42 1427.05 li
1654.66 1425.29 li
1649.76 1420.38 li
1657.29 1412.85 li
1662.21 1417.76 li
1663.97 1419.52 li
1666.17 1418.37 li
1667.53 1417.66 1668.93 1417.08 1670.34 1416.64 cv
1672.72 1415.9 li
1672.72 1413.41 li
1672.72 1406.48 li
1683.38 1406.48 li
1 1 1 rgb
f
1678.02 1422.83 mo
1667.9 1422.83 1659.7 1431.03 1659.7 1441.15 cv
1659.7 1451.27 1667.9 1459.47 1678.02 1459.47 cv
1688.14 1459.47 1696.34 1451.27 1696.34 1441.15 cv
1696.34 1431.03 1688.14 1422.83 1678.02 1422.83 cv
cp
1678.02 1426.21 mo
1686.26 1426.21 1692.96 1432.91 1692.96 1441.15 cv
1692.96 1449.38 1686.26 1456.08 1678.02 1456.08 cv
1669.79 1456.08 1663.09 1449.38 1663.09 1441.15 cv
1663.09 1432.91 1669.79 1426.21 1678.02 1426.21 cv
f
1749.52 509.083 mo
1749.52 548.569 1717.51 580.578 1678.02 580.578 cv
1638.54 580.578 1606.53 548.569 1606.53 509.083 cv
1606.53 469.598 1638.54 437.588 1678.02 437.588 cv
1717.51 437.588 1749.52 469.598 1749.52 509.083 cv
cp
1 .396078 .301961 rgb
f
1651.69 500.726 mo
1646.08 500.726 1641.74 505.065 1641.74 510.76 cv
1641.74 516.453 1646.08 520.838 1651.69 520.838 cv
1654.62 520.838 1657.84 519.345 1660.18 517.012 cv
1664.52 521.726 li
1661.07 525.272 1656.07 527.559 1651.31 527.559 cv
1641.56 527.559 1634.19 520.325 1634.19 510.852 cv
1634.19 501.425 1641.7 494.333 1651.59 494.333 cv
1656.3 494.333 1661.25 496.432 1664.47 499.746 cv
1660.18 504.973 li
1657.94 502.405 1654.72 500.726 1651.69 500.726 cv
cp
1 1 1 rgb
f
1680.23 500.539 mo
1677.76 500.539 1676.08 501.425 1676.08 503.199 cv
1676.08 509.219 1693.48 505.859 1693.43 517.619 cv
1693.43 524.013 1687.88 527.465 1680.65 527.465 cv
1675.28 527.465 1669.91 525.413 1666.23 522.286 cv
1669.17 516.266 li
1672.53 519.252 1677.29 521.165 1680.74 521.165 cv
1683.77 521.165 1685.59 520.046 1685.59 518.04 cv
1685.59 511.878 1668.19 515.472 1668.19 503.899 cv
1668.19 497.973 1673.27 494.239 1680.83 494.239 cv
1685.41 494.239 1689.98 495.64 1693.25 497.787 cv
1690.4 503.899 li
1686.95 501.846 1682.84 500.539 1680.23 500.539 cv
cp
f
1709.94 500.539 mo
1707.47 500.539 1705.79 501.425 1705.79 503.199 cv
1705.79 509.219 1723.19 505.859 1723.14 517.619 cv
1723.14 524.013 1717.59 527.465 1710.36 527.465 cv
1704.99 527.465 1699.63 525.413 1695.94 522.286 cv
1698.88 516.266 li
1702.24 519.252 1707 521.165 1710.45 521.165 cv
1713.48 521.165 1715.3 520.046 1715.3 518.04 cv
1715.3 511.878 1697.9 515.472 1697.9 503.899 cv
1697.9 497.973 1702.98 494.239 1710.54 494.239 cv
1715.12 494.239 1719.69 495.64 1722.96 497.787 cv
1720.11 503.899 li
1716.66 501.846 1712.55 500.539 1709.94 500.539 cv
cp
f
1169.6 438.784 mo
1169.18 471.182 1142.57 497.105 1110.17 496.686 cv
1077.78 496.266 1051.85 469.662 1052.27 437.264 cv
1052.69 404.866 1079.3 378.942 1111.69 379.361 cv
1144.09 379.781 1170.02 406.385 1169.6 438.784 cv
cp
1 .396078 .301961 rgb
f
1078.7 424.66 mo
1083.65 433.708 li
1088.86 424.792 li
1095.35 424.875 li
1087.08 438.833 li
1095.66 454.27 li
1089.11 454.185 li
1083.51 444.329 li
1077.77 454.038 li
1071.35 453.955 li
1080.25 439.039 li
1072.32 424.577 li
1078.7 424.66 li
cp
1 1 1 rgb
f
1105.26 425.004 mo
1112.1 443.062 li
1119.38 425.187 li
1125.48 425.266 li
1125.1 454.651 li
1120.17 454.587 li
1120.43 434.772 li
1113.76 451.523 li
1110.19 451.477 li
1103.96 434.56 li
1103.7 454.374 li
1098.74 454.31 li
1099.13 424.924 li
1105.26 425.004 li
cp
f
1136.33 425.406 mo
1136.02 448.998 li
1146.43 449.133 li
1146.35 454.926 li
1130.47 454.721 li
1130.85 425.335 li
1136.33 425.406 li
cp
f
343.672 706.582 mo
353.099 737.942 335.317 771.007 303.956 780.434 cv
272.595 789.86 239.53 772.079 230.104 740.718 cv
220.677 709.356 238.458 676.292 269.82 666.865 cv
301.181 657.439 334.246 675.22 343.672 706.582 cv
cp
.619608 .560784 .682353 rgb
f
259.455 721.78 mo
257.731 722.298 256.785 723.397 257.235 724.896 cv
258.761 729.973 270.041 723.492 272.992 733.426 cv
274.613 738.821 271.619 742.896 266.578 744.412 cv
262.836 745.537 258.576 744.929 255.213 743.063 cv
255.736 737.366 li
258.834 739.183 262.637 739.799 265.044 739.076 cv
267.158 738.44 268.144 737.115 267.635 735.423 cv
266.072 730.224 254.852 736.902 251.916 727.137 cv
250.414 722.137 253.011 717.922 258.28 716.338 cv
261.468 715.38 265.01 715.603 267.832 716.731 cv
267.398 722.483 li
264.47 721.475 261.277 721.232 259.455 721.78 cv
cp
1 1 1 rgb
f
288.158 732.087 mo
291.963 730.943 293.917 726.233 292.461 721.392 cv
291.006 716.548 286.803 713.776 282.998 714.92 cv
279.16 716.074 277.084 720.733 278.54 725.577 cv
279.995 730.417 284.352 733.231 288.158 732.087 cv
cp
304.082 736.573 mo
302.894 738.992 300.766 740.877 298.554 741.542 cv
295.463 742.471 292.131 740.939 289.401 737.637 cv
282.542 739.484 275.638 735.035 273.271 727.16 cv
270.856 719.127 274.338 711.597 281.299 709.504 cv
288.26 707.412 295.327 711.813 297.73 719.808 cv
299.576 725.948 297.957 731.889 293.941 735.284 cv
295.244 736.312 296.553 736.774 297.658 736.442 cv
298.765 736.109 299.98 734.844 301.008 733.075 cv
304.082 736.573 li
cp
f
302.302 703.405 mo
308.954 725.534 li
318.711 722.601 li
320.345 728.037 li
305.448 732.514 li
297.163 704.95 li
302.302 703.405 li
cp
f
925.854 273.387 mo
934.436 311.635 910.386 349.597 872.138 358.178 cv
833.89 366.759 795.928 342.709 787.347 304.461 cv
778.766 266.214 802.816 228.252 841.063 219.671 cv
879.312 211.09 917.273 235.14 925.854 273.387 cv
cp
.619608 .560784 .682353 rgb
f
831.318 287.002 mo
830.567 283.76 828.114 282.617 824.451 283.463 cv
819.002 284.723 li
821.279 294.58 li
826.729 293.32 li
830.391 292.475 832.085 290.33 831.318 287.002 cv
cp
837.507 285.353 mo
839.073 292.133 835.733 297.024 828.329 298.735 cv
822.547 300.071 li
824.47 308.39 li
817.898 309.907 li
811.172 280.791 li
823.525 277.938 li
830.93 276.227 836.02 278.907 837.507 285.353 cv
cp
1 1 1 rgb
f
845.934 272.762 mo
848.739 284.907 li
861.922 281.861 li
859.117 269.716 li
865.692 268.198 li
872.416 297.315 li
865.844 298.833 li
863.19 287.352 li
850.007 290.397 li
852.658 301.879 li
846.086 303.396 li
839.362 274.28 li
845.934 272.762 li
cp
f
892.225 272.935 mo
891.474 269.692 889.021 268.549 885.358 269.395 cv
879.909 270.653 li
882.186 280.511 li
887.635 279.252 li
891.298 278.407 892.992 276.262 892.225 272.935 cv
cp
898.415 271.285 mo
899.98 278.065 896.64 282.957 889.236 284.667 cv
883.454 286.001 li
885.377 294.32 li
878.806 295.839 li
872.079 266.723 li
884.432 263.869 li
891.836 262.159 896.926 264.839 898.415 271.285 cv
cp
f
1803.54 855.854 mo
1803.54 878.7 1785.02 897.221 1762.17 897.221 cv
1739.33 897.221 1720.81 878.7 1720.81 855.854 cv
1720.81 833.007 1739.33 814.487 1762.17 814.487 cv
1785.02 814.487 1803.54 833.007 1803.54 855.854 cv
cp
1 .796078 .188235 rgb
f
1751.72 851.646 mo
1748.46 851.666 1745.95 854.208 1745.97 857.523 cv
1746 860.838 1748.54 863.375 1751.8 863.355 cv
1753.51 863.344 1755.38 862.462 1756.73 861.096 cv
1759.27 863.825 li
1757.28 865.902 1754.38 867.251 1751.61 867.269 cv
1745.93 867.305 1741.61 863.12 1741.57 857.605 cv
1741.54 852.117 1745.89 847.96 1751.65 847.924 cv
1754.39 847.906 1757.28 849.111 1759.17 851.028 cv
1756.69 854.086 li
1755.37 852.601 1753.49 851.635 1751.72 851.646 cv
cp
1 1 1 rgb
f
1771.93 855.484 mo
1767.8 855.511 li
1767.31 859.617 li
1771.44 859.591 li
1771.93 855.484 li
cp
1774.94 855.465 mo
1774.48 859.572 li
1778.15 859.549 li
1777.84 862.566 li
1774.12 862.59 li
1773.6 866.94 li
1770.59 866.959 li
1771.1 862.609 li
1766.97 862.635 li
1766.46 866.985 li
1763.42 867.005 li
1763.93 862.654 li
1760.24 862.677 li
1760.54 859.659 li
1764.29 859.636 li
1764.76 855.529 li
1761.09 855.552 li
1761.39 852.536 li
1765.12 852.513 li
1765.66 847.971 li
1768.68 847.952 li
1768.13 852.493 li
1772.26 852.467 li
1772.8 847.926 li
1775.85 847.907 li
1775.31 852.448 li
1779 852.425 li
1778.72 855.442 li
1774.94 855.465 li
cp
f
439.23 1348.28 mo
439.23 1383.46 410.715 1411.97 375.541 1411.97 cv
340.366 1411.97 311.852 1383.46 311.852 1348.28 cv
311.852 1313.11 340.366 1284.59 375.541 1284.59 cv
410.715 1284.59 439.23 1313.11 439.23 1348.28 cv
cp
.098039 .341176 .760784 rgb
f
362.144 1336.74 mo
356.61 1336.77 352.347 1341.09 352.382 1346.72 cv
352.42 1352.34 356.737 1356.65 362.27 1356.62 cv
365.178 1356.6 368.351 1355.1 370.645 1352.78 cv
374.962 1357.41 li
371.571 1360.94 366.649 1363.23 361.945 1363.26 cv
352.303 1363.33 344.971 1356.22 344.911 1346.86 cv
344.851 1337.54 352.234 1330.48 362.015 1330.42 cv
366.675 1330.39 371.578 1332.43 374.779 1335.69 cv
370.569 1340.88 li
368.338 1338.36 365.144 1336.72 362.144 1336.74 cv
cp
1 1 1 rgb
f
396.445 1343.25 mo
389.438 1343.3 li
388.605 1350.27 li
395.613 1350.23 li
396.445 1343.25 li
cp
401.569 1343.22 mo
400.781 1350.2 li
407.007 1350.15 li
406.491 1355.28 li
400.169 1355.32 li
399.291 1362.71 li
394.17 1362.74 li
395.046 1355.35 li
388.039 1355.39 li
387.159 1362.78 li
381.995 1362.82 li
382.871 1355.43 li
376.594 1355.47 li
377.117 1350.34 li
383.482 1350.3 li
384.27 1343.33 li
378.043 1343.37 li
378.563 1338.25 li
384.884 1338.21 li
385.801 1330.5 li
390.925 1330.46 li
390.004 1338.17 li
397.012 1338.13 li
397.932 1330.42 li
403.1 1330.39 li
402.18 1338.1 li
408.457 1338.06 li
407.978 1343.18 li
401.569 1343.22 li
cp
f
1572.91 879.675 mo
1536.44 879.675 1506.88 909.238 1506.88 945.706 cv
1506.88 982.173 1536.44 1011.74 1572.91 1011.74 cv
1609.38 1011.74 1638.94 982.173 1638.94 945.706 cv
1638.94 909.238 1609.38 879.675 1572.91 879.675 cv
cp
.619608 .560784 .682353 rgb
f
1549.46 938.885 mo
1543.76 938.885 1539.34 943.305 1539.34 949.1 cv
1539.34 954.896 1543.76 959.36 1549.46 959.36 cv
1552.45 959.36 1555.73 957.842 1558.11 955.466 cv
1562.53 960.266 li
1559.01 963.874 1553.93 966.204 1549.08 966.204 cv
1539.15 966.204 1531.65 958.838 1531.65 949.194 cv
1531.65 939.599 1539.29 932.379 1549.37 932.379 cv
1554.16 932.379 1559.2 934.514 1562.48 937.889 cv
1558.11 943.21 li
1555.83 940.595 1552.55 938.885 1549.46 938.885 cv
cp
1 1 1 rgb
f
1585.79 952.806 mo
1577.66 952.806 li
1577.66 960.833 li
1573.01 960.833 li
1573.01 952.806 li
1564.88 952.806 li
1564.88 947.961 li
1573.01 947.961 li
1573.01 939.884 li
1577.66 939.884 li
1577.66 947.961 li
1585.79 947.961 li
1585.79 952.806 li
cp
f
1609.81 952.806 mo
1601.69 952.806 li
1601.69 960.833 li
1597.03 960.833 li
1597.03 952.806 li
1588.91 952.806 li
1588.91 947.961 li
1597.03 947.961 li
1597.03 939.884 li
1601.69 939.884 li
1601.69 947.961 li
1609.81 947.961 li
1609.81 952.806 li
cp
f
642.206 215.945 mo
638.86 215.658 635.566 215.457 632.418 215.349 cv
632.473 213.708 li
635.65 213.817 638.972 214.02 642.346 214.309 cv
642.206 215.945 li
cp
609.614 216.288 mo
609.404 214.661 li
612.576 214.252 615.897 213.959 619.276 213.79 cv
619.359 215.429 li
616.022 215.597 612.743 215.886 609.614 216.288 cv
cp
664.924 218.922 mo
661.381 218.34 658.202 217.853 655.208 217.433 cv
655.436 215.807 li
658.443 216.229 661.634 216.718 665.189 217.302 cv
664.924 218.922 li
cp
587.523 221.667 mo
586.942 220.133 li
589.969 218.986 593.155 217.978 596.413 217.136 cv
596.823 218.725 li
593.624 219.552 590.495 220.542 587.523 221.667 cv
cp
687.558 222.859 mo
684.724 222.37 681.891 221.867 679.058 221.365 cv
677.854 221.151 li
678.141 219.535 li
679.344 219.749 li
682.175 220.25 685.006 220.753 687.838 221.241 cv
687.558 222.859 li
cp
710.332 226.251 mo
707.243 225.898 704.041 225.476 700.542 224.96 cv
700.781 223.336 li
704.262 223.849 707.447 224.269 710.519 224.621 cv
710.332 226.251 li
cp
731.919 227.584 mo
729.188 227.584 726.344 227.509 723.465 227.361 cv
723.55 225.722 li
726.399 225.868 729.215 225.942 731.919 225.942 cv
733.344 225.937 li
733.36 227.577 li
731.919 227.584 li
cp
567.85 232.804 mo
566.808 231.537 li
569.402 229.405 572.148 227.481 574.971 225.819 cv
575.804 227.233 li
573.054 228.853 570.378 230.727 567.85 232.804 cv
cp
526.159 244.359 mo
525.88 242.742 li
528.29 242.328 530.741 241.947 533.169 241.61 cv
533.998 241.495 534.831 241.383 535.666 241.278 cv
535.873 242.905 li
535.044 243.011 534.218 243.121 533.395 243.236 cv
530.985 243.571 528.55 243.949 526.159 244.359 cv
cp
581.024 245.421 mo
578.052 244.438 574.879 243.637 571.596 243.039 cv
571.891 241.424 li
575.248 242.035 578.495 242.856 581.541 243.862 cv
581.024 245.421 li
cp
503.8 249.325 mo
503.367 247.742 li
506.543 246.874 509.769 246.063 512.955 245.333 cv
513.323 246.933 li
510.158 247.659 506.953 248.463 503.8 249.325 cv
cp
553.119 249.929 mo
551.708 249.091 li
553.238 246.519 554.971 244.015 556.866 241.636 cv
554.272 241.587 551.632 241.626 548.884 241.75 cv
548.809 240.111 li
552.238 239.954 555.491 239.929 558.722 240.045 cv
558.664 241.686 li
558.556 241.681 558.446 241.678 558.338 241.674 cv
558.704 241.974 li
556.637 244.496 554.758 247.173 553.119 249.929 cv
cp
482.022 256.392 mo
481.443 254.855 li
484.51 253.7 487.644 252.589 490.756 251.557 cv
491.273 253.114 li
488.181 254.141 485.068 255.243 482.022 256.392 cv
cp
600.426 256.659 mo
598.138 254.452 595.658 252.529 593.056 250.943 cv
592.786 250.78 li
593.627 249.37 li
593.911 249.542 li
596.615 251.19 599.19 253.188 601.566 255.477 cv
600.426 256.659 li
cp
460.985 265.424 mo
460.271 263.946 li
463.231 262.515 466.25 261.125 469.242 259.817 cv
469.9 261.321 li
466.926 262.621 463.927 264.001 460.985 265.424 cv
cp
545.564 271.12 mo
543.937 270.908 li
544.357 267.677 545.11 264.402 546.173 261.172 cv
547.732 261.685 li
546.702 264.817 545.972 267.992 545.564 271.12 cv
cp
612.293 275.602 mo
611.33 272.588 610.006 269.623 608.359 266.788 cv
609.779 265.963 li
611.485 268.9 612.857 271.975 613.857 275.102 cv
612.293 275.602 li
cp
440.833 276.286 mo
439.992 274.876 li
442.804 273.198 445.688 271.549 448.565 269.976 cv
449.353 271.416 li
446.495 272.98 443.628 274.618 440.833 276.286 cv
cp
421.685 288.839 mo
420.728 287.506 li
423.402 285.587 426.135 283.699 428.852 281.894 cv
429.76 283.261 li
427.06 285.055 424.342 286.932 421.685 288.839 cv
cp
546.836 293.874 mo
546.667 293.479 546.505 293.081 546.353 292.679 cv
545.316 289.958 544.556 287.115 544.091 284.228 cv
545.712 283.967 li
546.159 286.744 546.891 289.479 547.887 292.094 cv
548.032 292.476 548.185 292.854 548.346 293.229 cv
546.836 293.874 li
cp
613.847 298.192 mo
612.307 297.623 li
613.395 294.686 614.007 291.532 614.126 288.251 cv
615.767 288.31 li
615.641 291.767 614.996 295.092 613.847 298.192 cv
cp
403.651 302.955 mo
402.586 301.705 li
405.08 299.582 407.646 297.472 410.216 295.436 cv
411.235 296.722 li
408.681 298.747 406.128 300.843 403.651 302.955 cv
cp
562.411 310.94 mo
559.457 309.205 556.773 307.161 554.436 304.864 cv
555.587 303.694 li
557.828 305.895 560.404 307.857 563.242 309.524 cv
562.411 310.94 li
cp
597.872 314.682 mo
597.26 313.158 li
600.301 311.936 603.014 310.246 605.325 308.135 cv
606.432 309.346 li
603.976 311.591 601.096 313.386 597.872 314.682 cv
cp
584.728 317.1 mo
581.444 317.096 578.097 316.694 574.781 315.904 cv
575.162 314.308 li
578.354 315.068 581.572 315.456 584.73 315.458 cv
584.728 317.1 li
cp
386.836 318.51 mo
385.672 317.351 li
387.982 315.033 390.368 312.719 392.765 310.477 cv
393.886 311.675 li
391.504 313.905 389.132 316.205 386.836 318.51 cv
cp
371.342 335.387 mo
370.089 334.327 li
372.207 331.82 374.397 329.32 376.598 326.896 cv
377.813 327.999 li
375.626 330.409 373.449 332.896 371.342 335.387 cv
cp
357.277 353.475 mo
355.941 352.521 li
357.853 349.844 359.831 347.173 361.821 344.582 cv
363.124 345.581 li
361.144 348.158 359.177 350.813 357.277 353.475 cv
cp
344.753 372.665 mo
343.342 371.825 li
345.021 369.003 346.771 366.177 348.545 363.424 cv
349.925 364.313 li
348.162 367.049 346.422 369.859 344.753 372.665 cv
cp
333.889 392.836 mo
332.411 392.12 li
333.838 389.176 335.343 386.212 336.884 383.308 cv
338.334 384.078 li
336.802 386.964 335.307 389.911 333.889 392.836 cv
cp
324.81 413.866 mo
323.275 413.281 li
324.441 410.216 325.682 407.132 326.963 404.115 cv
328.473 404.756 li
327.201 407.755 325.968 410.819 324.81 413.866 cv
cp
317.646 435.609 mo
316.066 435.168 li
316.941 432.035 317.899 428.852 318.911 425.709 cv
320.474 426.212 li
319.467 429.335 318.517 432.497 317.646 435.609 cv
cp
312.523 457.908 mo
310.908 457.616 li
311.488 454.401 312.145 451.145 312.859 447.939 cv
314.46 448.296 li
313.751 451.48 313.1 454.714 312.523 457.908 cv
cp
309.557 480.586 mo
307.921 480.453 li
308.187 477.188 308.526 473.881 308.929 470.626 cv
310.558 470.829 li
310.158 474.061 309.821 477.344 309.557 480.586 cv
cp
.619608 .560784 .682353 rgb
f
1461.89 294.879 mo
1461.73 293.246 li
1464.66 292.958 1467.66 292.813 1470.64 292.813 cv
1471.66 292.819 li
1471.64 294.459 li
1470.64 294.455 li
1467.71 294.455 1464.77 294.597 1461.89 294.879 cv
cp
1494.17 297.448 mo
1491.01 296.644 1487.79 295.993 1484.6 295.511 cv
1484.85 293.888 li
1488.09 294.377 1491.37 295.04 1494.57 295.858 cv
1494.17 297.448 li
cp
1515.46 305.47 mo
1512.56 303.997 1509.56 302.647 1506.55 301.459 cv
1507.16 299.933 li
1510.21 301.139 1513.25 302.51 1516.2 304.005 cv
1515.46 305.47 li
cp
1534.56 317.864 mo
1532.04 315.818 1529.39 313.863 1526.7 312.055 cv
1527.61 310.691 li
1530.35 312.528 1533.04 314.513 1535.59 316.589 cv
1534.56 317.864 li
cp
1550.55 334.049 mo
1548.55 331.514 1546.39 329.036 1544.14 326.685 cv
1545.32 325.548 li
1547.61 327.938 1549.8 330.455 1551.84 333.031 cv
1550.55 334.049 li
cp
1562.46 353.405 mo
1561.12 350.484 1559.59 347.579 1557.93 344.769 cv
1559.34 343.931 li
1561.04 346.791 1562.59 349.747 1563.96 352.72 cv
1562.46 353.405 li
cp
1569.27 375.071 mo
1568.69 371.868 1567.94 368.674 1567.03 365.577 cv
1568.61 365.115 li
1569.53 368.267 1570.3 371.52 1570.88 374.781 cv
1569.27 375.071 li
cp
1572.24 397.861 mo
1570.6 397.767 li
1570.71 395.864 1570.77 393.933 1570.77 392.027 cv
1570.77 390.685 1570.74 389.343 1570.69 388.003 cv
1572.33 387.936 li
1572.38 389.299 1572.41 390.663 1572.41 392.028 cv
1572.41 393.965 1572.35 395.928 1572.24 397.861 cv
cp
1568.38 420.652 mo
1566.8 420.204 li
1567.69 417.069 1568.44 413.868 1569.03 410.692 cv
1570.64 410.991 li
1570.05 414.217 1569.28 417.467 1568.38 420.652 cv
cp
1559.75 442.094 mo
1558.31 441.322 li
1559.83 438.468 1561.24 435.499 1562.5 432.495 cv
1564.01 433.131 li
1562.73 436.181 1561.3 439.196 1559.75 442.094 cv
cp
1546.72 461.187 mo
1545.48 460.116 li
1547.58 457.671 1549.6 455.08 1551.48 452.414 cv
1552.83 453.359 li
1550.92 456.069 1548.86 458.703 1546.72 461.187 cv
cp
1529.68 476.805 mo
1528.73 475.469 li
1531.35 473.599 1533.91 471.553 1536.35 469.389 cv
1537.44 470.618 li
1534.96 472.819 1532.35 474.901 1529.68 476.805 cv
cp
f
1681.23 618.73 mo
1679.8 617.92 li
1681.44 615.037 1683.37 612.284 1685.53 609.736 cv
1686.78 610.797 li
1684.68 613.267 1682.82 615.937 1681.23 618.73 cv
cp
1674.44 640.17 mo
1672.81 639.989 li
1673.18 636.628 1673.82 633.335 1674.7 630.199 cv
1676.28 630.643 li
1675.42 633.693 1674.8 636.898 1674.44 640.17 cv
cp
1674.06 663.091 mo
1673.38 659.796 1672.91 656.486 1672.64 653.251 cv
1674.28 653.119 li
1674.54 656.288 1675 659.531 1675.67 662.759 cv
1674.06 663.091 li
cp
1681.57 684.965 mo
1680.12 681.977 1678.82 678.9 1677.69 675.824 cv
1679.24 675.261 li
1680.34 678.287 1681.62 681.311 1683.04 684.25 cv
1681.57 684.965 li
cp
1693.95 704.492 mo
1691.89 701.942 1689.92 699.244 1688.1 696.473 cv
1689.47 695.571 li
1691.26 698.297 1693.2 700.951 1695.23 703.458 cv
1693.95 704.492 li
cp
1710.45 720.672 mo
1707.85 718.573 1705.34 716.39 1702.97 714.181 cv
1704.09 712.982 li
1706.43 715.164 1708.92 717.321 1711.49 719.395 cv
1710.45 720.672 li
cp
1729.39 733.849 mo
1726.51 732.1 1723.7 730.304 1721.07 728.513 cv
1721.99 727.156 li
1724.6 728.931 1727.38 730.71 1730.24 732.445 cv
1729.39 733.849 li
cp
1749.61 744.889 mo
1746.47 743.324 1743.6 741.843 1740.84 740.361 cv
1741.61 738.915 li
1744.37 740.389 1747.22 741.863 1750.34 743.42 cv
1749.61 744.889 li
cp
1770.4 754.74 mo
1767.41 753.369 1764.43 751.992 1761.46 750.6 cv
1762.15 749.114 li
1765.12 750.504 1768.1 751.878 1771.08 753.247 cv
1770.4 754.74 li
cp
1791.25 764.391 mo
1788.29 762.98 1785.32 761.593 1782.33 760.216 cv
1783.02 758.725 li
1786.01 760.105 1788.99 761.496 1791.95 762.909 cv
1791.25 764.391 li
cp
1811.63 774.86 mo
1808.84 773.271 1805.93 771.702 1803 770.193 cv
1803.75 768.733 li
1806.7 770.252 1809.63 771.833 1812.44 773.433 cv
1811.63 774.86 li
cp
1830.86 787.251 mo
1828.3 785.37 1825.58 783.493 1822.8 781.671 cv
1823.7 780.297 li
1826.51 782.136 1829.24 784.029 1831.83 785.926 cv
1830.86 787.251 li
cp
1848.29 802.033 mo
1846.04 799.792 1843.62 797.552 1841.1 795.377 cv
1842.17 794.136 li
1844.72 796.335 1847.17 798.601 1849.45 800.869 cv
1848.29 802.033 li
cp
1862.8 819.592 mo
1861.06 816.942 1859.12 814.29 1857.03 811.707 cv
1858.31 810.676 li
1860.43 813.3 1862.4 815.996 1864.17 818.689 cv
1862.8 819.592 li
cp
1872.71 839.985 mo
1871.74 836.951 1870.54 833.904 1869.16 830.931 cv
1870.64 830.238 li
1872.06 833.273 1873.28 836.383 1874.28 839.482 cv
1872.71 839.985 li
cp
1876.28 862.328 mo
1876.28 859.105 1876.06 855.903 1875.63 852.756 cv
1877.24 852.392 li
1877.26 852.528 li
1877.7 855.754 1877.92 859.031 1877.92 862.272 cv
1876.28 862.328 li
cp
1874.28 885.17 mo
1872.72 884.67 li
1873.72 881.557 1874.51 878.381 1875.09 875.233 cv
1876.71 875.529 li
1876.12 878.746 1875.3 881.99 1874.28 885.17 cv
cp
1864.36 906.042 mo
1862.98 905.156 li
1864.75 902.384 1866.38 899.534 1867.8 896.686 cv
1869.27 897.421 li
1867.82 900.321 1866.17 903.221 1864.36 906.042 cv
cp
1849.8 923.984 mo
1848.65 922.822 li
1850.97 920.507 1853.19 918.086 1855.26 915.628 cv
1856.51 916.683 li
1854.42 919.179 1852.16 921.635 1849.8 923.984 cv
cp
1831.93 938.622 mo
1831.02 937.257 li
1833.72 935.446 1836.37 933.504 1838.91 931.487 cv
1839.93 932.771 li
1837.36 934.816 1834.67 936.785 1831.93 938.622 cv
cp
1811.6 949.625 mo
1810.96 948.113 li
1813.95 946.851 1816.92 945.443 1819.81 943.929 cv
1820.57 945.382 li
1817.64 946.917 1814.63 948.345 1811.6 949.625 cv
cp
1684.9 954.541 mo
1681.65 953.996 1678.42 953.434 1675.18 952.86 cv
1675.47 951.244 li
1678.69 951.815 1681.93 952.378 1685.17 952.921 cv
1684.9 954.541 li
cp
1789.57 956.563 mo
1789.21 954.961 li
1792.41 954.24 1795.6 953.412 1798.69 952.501 cv
1799.15 954.076 li
1796.03 954.997 1792.8 955.833 1789.57 956.563 cv
cp
1707.65 957.967 mo
1704.39 957.545 1701.14 957.089 1697.88 956.605 cv
1698.12 954.981 li
1701.37 955.465 1704.61 955.919 1707.86 956.339 cv
1707.65 957.967 li
cp
1766.77 960.072 mo
1766.62 958.436 li
1769.91 958.147 1773.19 957.77 1776.36 957.316 cv
1776.59 958.94 li
1773.39 959.398 1770.08 959.779 1766.77 960.072 cv
cp
1730.56 960.254 mo
1727.37 960.042 1724.06 959.772 1720.72 959.451 cv
1720.88 957.816 li
1724.2 958.137 1727.49 958.406 1730.67 958.617 cv
1730.56 960.254 li
cp
1748.17 960.86 mo
1746.69 960.86 1745.21 960.846 1743.72 960.819 cv
1743.75 959.178 li
1747.03 959.237 1750.3 959.232 1753.56 959.155 cv
1753.6 960.796 li
1751.79 960.838 1749.98 960.859 1748.17 960.86 cv
cp
f
263.267 1029.6 mo
261.784 1026.65 260.394 1023.62 259.133 1020.6 cv
260.648 1019.97 li
261.894 1022.96 263.268 1025.95 264.733 1028.86 cv
263.267 1029.6 li
cp
275.272 1049.32 mo
273.341 1046.65 271.48 1043.89 269.741 1041.1 cv
271.133 1040.23 li
272.853 1042.99 274.693 1045.72 276.602 1048.35 cv
275.272 1049.32 li
cp
290.202 1066.92 mo
287.881 1064.57 285.618 1062.13 283.475 1059.66 cv
284.715 1058.58 li
286.834 1061.03 289.074 1063.44 291.371 1065.77 cv
290.202 1066.92 li
cp
307.611 1082.08 mo
304.98 1080.11 302.376 1078.03 299.874 1075.9 cv
300.938 1074.65 li
303.415 1076.76 305.99 1078.82 308.595 1080.76 cv
307.611 1082.08 li
cp
327.085 1094.47 mo
324.193 1092.92 321.309 1091.26 318.513 1089.52 cv
319.379 1088.13 li
322.146 1089.85 324.999 1091.49 327.86 1093.03 cv
327.085 1094.47 li
cp
348.209 1103.78 mo
345.128 1102.7 342.024 1101.49 338.982 1100.19 cv
339.626 1098.68 li
342.636 1099.97 345.707 1101.16 348.753 1102.23 cv
348.209 1103.78 li
cp
370.54 1109.65 mo
367.323 1109.08 364.065 1108.38 360.854 1107.58 cv
361.254 1105.98 li
364.427 1106.78 367.647 1107.47 370.824 1108.03 cv
370.54 1109.65 li
cp
f
1021.49 251.383 mo
1021.29 249.754 li
1024.66 249.335 1027.98 249.046 1031.16 248.896 cv
1031.24 250.535 li
1028.1 250.684 1024.82 250.969 1021.49 251.383 cv
cp
1053.92 252.051 mo
1050.79 251.45 1047.54 251.009 1044.25 250.74 cv
1044.38 249.104 li
1047.73 249.377 1051.04 249.827 1054.23 250.439 cv
1053.92 252.051 li
cp
999.037 255.729 mo
998.639 254.135 li
1002.05 253.284 1005.2 252.563 1008.27 251.93 cv
1008.6 253.538 li
1005.55 254.165 1002.43 254.882 999.037 255.729 cv
cp
1075.27 259.562 mo
1072.49 258.036 1069.51 256.678 1066.42 255.526 cv
1067 253.988 li
1070.16 255.167 1073.21 256.559 1076.06 258.123 cv
1075.27 259.562 li
cp
976.929 261.878 mo
976.468 260.303 li
979.616 259.381 982.771 258.458 985.934 257.558 cv
986.383 259.137 li
983.224 260.035 980.073 260.958 976.929 261.878 cv
cp
1092.42 274.074 mo
1090.44 271.483 1088.23 269.093 1085.85 266.971 cv
1086.94 265.746 li
1089.4 267.937 1091.69 270.404 1093.73 273.079 cv
1092.42 274.074 li
cp
1101.77 294.452 mo
1101.14 291.34 1100.18 288.234 1098.9 285.219 cv
1100.41 284.579 li
1101.73 287.696 1102.73 290.909 1103.37 294.128 cv
1101.77 294.452 li
cp
1130.09 310.824 mo
1126.88 310.424 1123.6 310.186 1120.35 310.116 cv
1120.39 308.476 li
1123.69 308.546 1127.03 308.788 1130.29 309.195 cv
1130.09 310.824 li
cp
1152.11 316.371 mo
1149.04 315.173 1145.96 314.164 1142.86 313.324 cv
1143.28 311.739 li
1146.45 312.594 1149.58 313.622 1152.59 314.795 cv
1152.42 315.609 li
1152.11 316.371 li
cp
1101.61 317.198 mo
1100.09 316.588 li
1100.17 316.371 1100.26 316.155 1100.34 315.936 cv
1100.86 314.519 1101.3 313.061 1101.64 311.572 cv
1100.33 311.808 1099.03 312.071 1097.74 312.361 cv
1097.38 310.759 li
1098.9 310.417 1100.45 310.111 1102 309.842 cv
1102.16 308.991 1102.28 308.131 1102.38 307.264 cv
1104.01 307.446 li
1103.93 308.156 1103.83 308.861 1103.72 309.562 cv
1104.87 309.386 1106.02 309.23 1107.17 309.096 cv
1107.36 310.727 li
1106.04 310.88 1104.71 311.063 1103.39 311.275 cv
1103.01 313.063 1102.5 314.811 1101.88 316.503 cv
1101.79 316.735 1101.7 316.967 1101.61 317.198 cv
cp
1076.43 320.172 mo
1075.66 318.722 li
1078.55 317.191 1081.6 315.805 1084.71 314.601 cv
1085.3 316.133 li
1082.25 317.313 1079.27 318.672 1076.43 320.172 cv
cp
1172.24 326.992 mo
1169.53 325.161 1166.73 323.446 1163.9 321.896 cv
1164.7 320.457 li
1167.56 322.032 1170.41 323.773 1173.16 325.633 cv
1172.24 326.992 li
cp
1058.2 333.602 mo
1057.03 332.445 li
1059.35 330.116 1061.86 327.904 1064.51 325.873 cv
1065.51 327.174 li
1062.92 329.162 1060.46 331.325 1058.2 333.602 cv
cp
1086.41 334.598 mo
1085.57 333.188 li
1088.35 331.526 1090.89 329.522 1093.11 327.234 cv
1094.29 328.378 li
1091.97 330.769 1089.32 332.861 1086.41 334.598 cv
cp
1068.24 339.824 mo
1066.75 339.824 1065.28 339.716 1063.85 339.502 cv
1064.09 337.879 li
1067.14 338.334 1070.4 338.273 1073.63 337.699 cv
1073.92 339.315 li
1072.02 339.652 1070.11 339.824 1068.24 339.824 cv
cp
1189.72 341.601 mo
1187.42 339.265 1185.02 337.016 1182.58 334.916 cv
1183.65 333.673 li
1186.12 335.802 1188.56 338.082 1190.89 340.449 cv
1189.72 341.601 li
cp
1204.17 359.234 mo
1202.33 356.542 1200.38 353.892 1198.36 351.363 cv
1199.64 350.339 li
1201.69 352.9 1203.67 355.582 1205.53 358.308 cv
1204.17 359.234 li
cp
1215.43 379.087 mo
1214.07 376.142 1212.58 373.202 1211.01 370.352 cv
1212.45 369.559 li
1214.04 372.444 1215.54 375.417 1216.92 378.398 cv
1215.43 379.087 li
cp
1223.33 400.508 mo
1222.47 397.48 1221.51 394.458 1220.48 391.523 cv
1220.35 391.169 li
1221.9 390.631 li
1222.02 390.973 li
1223.07 393.945 1224.04 397 1224.91 400.059 cv
1223.33 400.508 li
cp
1228.04 422.868 mo
1227.58 419.615 1227.02 416.364 1226.39 413.207 cv
1228 412.885 li
1228.64 416.072 1229.2 419.353 1229.67 422.637 cv
1228.04 422.868 li
cp
1229.92 445.662 mo
1229.83 442.358 1229.67 439.063 1229.44 435.866 cv
1231.08 435.746 li
1231.31 438.968 1231.47 442.291 1231.56 445.621 cv
1229.92 445.662 li
cp
1230.96 468.666 mo
1229.32 468.544 li
1229.57 465.245 1229.75 461.948 1229.85 458.744 cv
1231.49 458.8 li
1231.38 462.025 1231.2 465.345 1230.96 468.666 cv
cp
1228.24 491.55 mo
1226.62 491.288 li
1227.14 488.052 1227.61 484.781 1228.01 481.569 cv
1229.64 481.772 li
1229.24 485.005 1228.76 488.294 1228.24 491.55 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 25.2.1%%For: (Chalermsuk Bootvises) ()%%Title: (Developper 01 [Converted].eps)%%CreationDate: 20/3/2564 BE 21:14%%Canvassize: 16383%AI9_DataStream%Gb"-6mBU$<E@(A_pDrZD77]QnGh:QM.SY76E%_4!48be6lu#TY3Z'OVbNL8R"ps"YH2>Xj<bC_[!%:\WHeOJk%LLpSGLuhoWiXF0%RB(f/UPF'N^A[uSgL!1XqgX'<s3l96pHMBMrQW+DleRVNoUk%=o(=s!j1&aj?@D_4laQ>4nb'LqYJ9nqn_G#M^Ad8-pQ*(7q=afk%?N/Z-oCDn\If75%n,E"ZiJX&+ro`*uT)M1Um)>GI?GCaZop7>hhk*[SaNA.3qKLh!)f(J++mu!$`KqqIea)tum69mT\E5GorifbT%KMUkqdQHoPZ]A;<ICfIK0E4/rG5q.u:VGOJr-<2I-e@qi^`dm^1$j[=*d0@c,F;H`U^]/[BTd\$-6nuKltA0$PYL^'X\#r[@TPS8%BJS2]qp>W%k,V)(N?rAg9!gS?36JTM8kl;F@Cja8(2,B_mV;T(,ok%-i!2AndZHZdJTLR7*STQ#2"7m(U%uLAf!0)p(N9*-Zp,QY%f0`c#_V;N:kO3cmrMt-LrPmU]oAb>qjm-9gq<%Y-0AjNip\)A^=&8kUe0t+Bl`XVeDB8b`HZl=co)@>.IsUqX([j4Dm]WDPa7hg/%kK3bd.gWjt,C>,\S,AH>/WD'4cVG5R]+4`5-iBM'bC/J`Idr>/\4"p::R_g<I[g<2oH!,p0l@V6rGQ%mq:-97hnS<lZH;a7h>^IS%lsKZmRk$V(AH'_@ao1E:5Gm+VbV]c8s3$n`s8')!s8;`TkHDYOA:+1Gqd7&4Ir/6>(d7Y\jM1WdMq;>9h:jmWm;8C*9tgM?HM@7$%0C7q(lPEp@jODqUNIU8E^O>qNY@#%'D=R%PDt37FG!FsnJ,Sc$J,/XoYFuMj0(:f,]mfjfn,=j+nY[\ZHOb+DF01K"<:Yjj3UoSB%0(TaN3?#q@mI>\u$e#W9oC\S[^No]49Z!Ds?+ka]o<7&!IOPc=aO";,pEsJJJ&_N"8UK=gmpEj&Rnidca1p=BONhINlLVKW5JI"-%n,+.%p0^8`Xm)W7hYgWm><h^<f)".)oE>*kfjDM#UYi`'.I[8)^DW[BieqaB=$Q`]h7$bi`S5lgGPC-qT>19DfD#=<orIiU^:+%<%r;LX6nUK2XTA9I63q<2f^OH"$:12u20i),iq<B?BolTnD?ba>,0<HP8`kT:#[7rp8g/i>eT>1>kf3c2fC-/PXqq^H4eSi2"a*1n'%q<#kCY$LUVQX@LWoBM7c^\Z26mpCR:Zb8]?I=;.bos`iVoDRR\HhYL%g7)HOqfFQh3<%gT21E@GDu\t%rUA.*\rn0)iK\5ZWm/<+%CTTLe\rQa[hodku?[hOaRpU[DnuI7hoBK8@q8DaRp%I;A52Bc7mOOdgDuM%pffbD,]'6g;fREM,a2@lIcek*^q2T7hemj1%Y:neJ%qWGV@o8hdVYH(erII[1$kMNAIlg+5`rmL4=ZL;eI04)A@q=P!%qj2[X02:8/-cLY?huEXn4!X1\TAI5gAb>t'hnFC9qWcp]?[`0r%q#4@pr:6o?e5LAJYLX$7B=806HN'g,r@JDm]RP1<rVG\a^\n"h/M03!s7*uChjS0QT4U,i5MGt!miOa.qhI7;4*s+\]0#FgM&l:G%J';KdFP77X`i&bho;jCueb^G:p@.b+P&$apnjg+#O-]Ofd]V5=0t%8::@P<r++<j<TA\[t5OdrfjL'9pLM*Z3i[oZV`W,kl(SBSL%qt?NRp?&QNm3G]8r]f58@@q8+VtPD?c_Gp\pG;h3?_8/!76^(%m"7P!]@a%$k:S^nSG)4F%0+t$jJVo<pug$gci!C)T,7;l3S#RC%FB>btm*FMfA[h"r86!js3D2$C5-m@'&*:&YZd876U)l2F-eD73D=t83YG9D>Zp)u0q`Lq*l\frA[:K#9)ZH8/\'\f7g)esXHe+dt%([]20n187&2Rj"T39U,0HoN4oBBSmX76g-k-S<%*f$Ctb],A*VBn,?-]]Bt&UJJ-jjsT\?i:HjM5Ompip3GFXGO*:^++14U4;CZ8%I`%)OO$,1ga?KRAGVSUWoYn_+LV"@`r&iW`VnD+9qkni6WW$VtF)IV!o,7)/4/RM!Ie7oqq)nN:g!/]jIpU(Vc5u?1a8YRoT3HM&%[m#4X^!G*%@;Cjo]s&%(O8_8qkJ9>Xm5+,cq!%LW%XhsFriG+#LOmC[M0ZnKi*4'Va#WeT_*1Z^1[R!be+p8RnRs-Q_sFYt@mg2)%dgD.JDu9cWR7H1ZM8JG!=-!k&%o4;0_g(AUk<jTp&&kD<H8r!=T%b8M5(.\Po]^`aT(])Fe+U.4/N0HRe&+6<q40[oj*[58NbQf0%CpQmc-T8f%nR=Via*\j;j6;q@N'9r4N+t-rRh@^WMuML<_4qInV`&dT%H=_'3ucVeL3Dk&M-E/1qjQg6hshSVr;="\fnZcKk$GMW%fPEHXS!Ab'PipU0O#CF=g;G!iJPVcZ:c,-m2P-OF%mAXBIqk1^Rj)OC&;hok<0"%=r4sA`R2nIUp,NcWUjQXog.,*%FrGc&kJN.?%5P;icI52(tfX^0dRurJKB=;][f"Iu(o<@Y3C>Jl&h>c9mlX9mifYD/Y5e7DhB`mM6#0o"D5VHr$,o]\"#$0JspUB"4IF<=gDZ89;%f*M.Z`fKLC\*:V&q@=tK2PnlBVobI=^nfs3B^qB`s)^Gg%H7U&A.3#XjquA^cl1=Ne/6aRe1n$0L@ma19nbgDZhaII[/)W8hG)&"%Z^Aa.k@**8REaas>8&h]T0N9+T83+6_tX,bnXi>Ns.(8)U],Xb5Q1<%`rkclLVfq\[=%479H%Zp[9u+1dGS1`D+tmmj]l5udd0Vt%06>HHh"_kdFm["PRgo>Zj14j6F6etO)S=QnL!(q]<a/bpe%*&)IH:fOT4_hK$eiF'cdr,n.r6c,G2V9aH"s,9EBLih*Vb6H17;/o%VB).KHFG-]Htn!!dIcVnrG@&9TATO:J,4#3THUJ["lhMc.4hlednD>qJu7#/j-4.r!-YC6^qXIdR?^=<g8r4Q9ec-LCB!b$U;;3#%G4nQ+e[-l'dnWj/36a/a.0ok,HZ!uG=iU9UVXV*5k`7okhiDKL7^Uhq1s_=\[Q[Tt+gR_P+m':.nnbEkaXQVdou!:rG6]W88%)SK%Z1+09T$X'tLu=KNN]H`Jo1:`2C3L6gckH=@0#HMZIJ`TYf:Ut#g-t/[R'Z92l/f2K-eVhJe[3hIV^(_rcGMG!$Am%oV(^20q`iHa%J*ou$-dB\m9urA3QS9k6P1q:lIId!g"n;'>I@nX\49&u*O>;1JC@%`N>%iX31d<'rE_`'l-]Q>:g[_"3q+Rf3=.iHbQP(mZrkaZ(%i')a`,i.[G;9\mSO=@WjEO=k<E9>i%2hK(.S2CC/cdF2Rj?Mo\RL<tO3cX*K9]hc)j<mLiEc[qCp/C>LiK#t?+#PG2VkukqSIl,"%IGl#*3FHFm4ODN%^1PU0o0kItq<a]_j.qgl]M0AiMne$>I88Pi=H9Ri?ZUV`kkWBqV<86DQ``!3hb*)+Edtt-V@1TS""2a(k>&7l%_0>O(jU'*HVDh1u(q+neV>FH+pLX5Qb;L.((U7r:ETJfX\[?VLX#JXKq`Mn-nHE/j3#6Kcj''O3PhTXWDs/(_MYSHnH1G8kXt<E;%X5Pu%K3P5!]uRu4/`(F23VD4@gU^0?8`1iH]<OC2+rFj:?O$#iI-XZ'l(*%!3qhiBFRFj!#hul9NTats1baq%I=8Rj*RX!4oW-`I%iu[E1F?[9#"osC.:_;S.p9*g'%+.UJA&1GC$jH_WJjsX56XH)6A]N'-bE0>8ES+#f5IImQN&@poDdr;`54#VfeSSO2D.qPd3M1a^%VKK^W(OYmppYFZGhUAjE-Kb53]m$qHmp)D2O@iI%qek`1Z?ks(\*9iVp"<Wp>BX0Af*,OSD;n#\h+l_gV:A)ZeG_h$bMR"UIqTdN%$>fQ`H2l5pfGr5L%m8-m%8^4Lk8Gd`\XVJ:<:73"Em=-[R5b'XRefB7]kQ`C)^X;uCi\Kt5!_O`9-9p!d@9>koHJVN3I21<'"VoO%Vr=sFVjI*Bhe^Z8BJ^uB66%g%I[A%Em'9d^5&IY<!..?%WtY(#hJh'%pVF0Uc?f>8!3Nm%LM2,"qV)C*T^NtoIgt<8c=YFEGQ49:%!,unWr`49dCj#'m:B=GTm_Yq%e45#RUHeG!&(3t;[r^[eQpHLKFQ"6g9VNGR*),nFli3%ES3O6k4<46N,NXoPnm?Z,+1X,@lc;<5%=)";t<SC5np>&f\]TpZI$&`Qm=$H$1hfpYqT5sIOa81!il_P,Xr_G-@hZG.6q\2Z,m"5"ZY.nBoHuL1:W82Zc+hn+l\GI+Tpuq<8%SDXX'+[5hq#Ft:=dWs/^[,^TKf6A,"I#BskGk9C<2h)+#eF*H4mP`#EMQ/ik"?J7#ET,7di[K+B5MReK/Rl^AdFZ:u8H=`_EFbp.%:1.*>hik#BfhWbJJ)knS.#i:s9&lF#)TT5)A.7ra9i=]\ACE+80J#UZ4[rs4%4=h\PUcK:Uk+!i_9W^God3HpUV"jXLpngpV5=UQ%no-IRXp4`kRTHg8Yq@p4NptZpQp!><RLPg*K4m"QoZ4Ne@ZB%cn.C(=m/>=$[f,cH>LOTD4RbNO'<j?_5;_[b!GhoGf7:VO9&gRL%-sH+N,[94djR<C9jnDngDl1JI3;/COp>])hIb]I*2ZAm(]OKS*nCTF;LqJ@1;`udM0IKec`B*F_[Xmjt5'lYQk$I>-nNI"a^=8FI%.?2m$eW%?<Cl1C:qT&sd2qX[0cE%hPAW!t*4.E"&f#.MF)j>:A_leZk\ukAGClNqK[=4RjgMQ%jjolR`"!+7QT:;1+*$S)P:JLUs%CW_^M:X441ee^/YT@:0$EVi9/(FJQKR^k+o#E<#V].eIKNF&!cKr-M^?[U'a4qsM4'PMpaTi/Ai=K*,No)DeNq\-ScZXuE^\A!G+%Nn]\r=dE%5ZQ.d3p*p8^V94j[(QmU]h&eMGkGQ>kr51efmg!k4?C:*R6Y([B#k@clLqgE1p:Kjtho!P3^2E&IQW*=qNEIaA?uXF`%:&X/:kGY[hi'q0%W;UE$'0gjg8G.V*mXM,fpYYuGc26,m;)MrD)/m7g.G".[-J$,S3,o*O>`kK<EHSEdP:P:<kArfH)Y\iA2>RQG%?-)EUG;c'7$0BfDZkm$=Y^SZ.78<)lXd-r!![dru""#tE/phJ6>Id=X,>Qo`O.RD3(iArke<Jc^)tnePC%b$&F\9*6lt\<Q.5(41%4>+OfnA9oGZ0q)3nIO400C2i!F`KE0nn=WL@611:k]ppsiJ#OdC?fRu4IX<V+.J7fVf4-2B+O^IW\(`Ap;2]H`CZ]i3<57-_:JY[%@I$H]rk4i$O78@F&,iJ'\l4(s$@`s$Ii8ZD)@H@<\@f&8>5sYRW_`Zgs%aa$pSgD'NI]1(<S_@QeUMl90<`Wei]m1F5ABhollkMT%ZN*""mE%JNH>hrq',r$I&,h`Bs8B^d5Mu%PGQWHq)h.`=p>c0,iP4*'mf2SO+9).Ws1+Trdf,)]`$t/i1uUq@])TrZ\o-^b[hF-e%GglYorVpM+^OH4Lbq$"6]_qUbpHQQ0n,Mb5h7G>U2rQFL1R5M"p0b&!]e&_/I.g2Kir;Man:00lrilF]>FsajTBC-GFhnVu)Y0:&%7\sFOP?FRA;%R5&34+[-iG2M'[t"Djk:,d)bglSsm4?Lh"b^J8h08bJVT(b%2R>.AQp;AT)(@83rY:mPnKa+N+O$U5)WU=NO!cg0%B``W=/PkG`K>lj_Xj6RWVG4fIkt+3NH)g%kOq'RuZu_kY0%QZegs5doSfDk]?-Iuq[PNUNJ=[&cDV>4RN?Q-:pg2*'[oN`fk%l<6%)qjL'BVe?U8tQ`\]Ul3U/-Y4>eW+DC8P7od31i%>jg.&eB%>baquiZ;T<"MYB!\IIZH7l?p7QQ`ci,2Z8ZV<W\82l@-`24f\TV[M%PM29_-#)]UP>nkt,oQ;hfl172o$'GHO-FchX'Lmc;k(MnB).:+<^IhCCcLS<1X'95FKuEOn):bLEiYY!eR"#R=TX(D4jgO*8#<!5%"W@Np_kl9,cR0`$/S]Oa36LsoNq(&p/quoFP%M1ha[U+J4bo#PF/5"_QE4_+q'aW85g#*JPJ83'S>O82Jl<rE,cmJhF@^/,H/WbE%D(o7S=pDa=Fd=<+-F$b:-f+\28lPG$`r"fjNi-]Liou7D9lJYNr(#>/e\d,q%@nm/lr:\.>:'P#PBVMP-_i"11H#L)`mh8)$p3um%p1ncn@1s?a3q0$:K=sTp1G9(!W06jZ:*/$ZPuD\tFJ7cS4#O!O$9t]`-sM;(:>YJ,+L.>08LlTB]C@-gQp0_PS_p$C+,*(V+/UO3%Q[XNt*TR)<p%/KrL,ETPVp:,UlP!Lp3WoP;4Bq]I0]6c%R=!9G6-)''_IN;bUN3hP1[R%dX&4CuB*,CFo$tr(9aJ?o43nB0QO3=@%q#.GeY4'o5D44'IVOU=n2M\ufC#(f:f'HFSXi?RX6OZ$uJ)O\"X_7HYE%NIgZNQj6bU`"q1(P%o;\T2dhB[eWE)"E)!Ps>NR_Yd&%Rb8$YIOYM6.c.8kF[9]E!T1M[Pc)?*VZ8@e(CL\7;mjn5WK5<G`bQQk;=,."obk?ihQJLD"8@brY6QkSLB1nrc]"+.7Qec;EfLG,%.Zj"PNn9cu=qKEbK91-_JqBT!28F+.;?2-$mq99CP9hbg&/K2,!<0Z8%9$2KYArE#rpmU!FQaNf+S>$RXKQFLaW2;R3j5"b$3<#l%*\HVk]k^U$Qo8elb,SrG3q.`;/NU#7D<>mda430&9P@V&kU<N7-K$Z$qn[P#fNK</nl,i9UhRfe0kGG6:aO64ep+E8qT'FkHWjHL%UhLJP6e\.(W#1G9@hmlWf(r3.2YAin]%aj6!aqc'MjtY@B8?2c?gsLrZWq5Q69CA_^O4N*c>,dd5kUT>VCc<[)"gOupMQ`E_D.62%^Kh5L0`8<kfMFHA6ifoY<\B:'mqG8*l,,khJ.3ta:F[G;6\e#0g+l@hJaPC*)+/CS?44[3A?WEO7;E^_k[duV\g]Hf`8*qB/Hf1E%Cr+<&EGA#j<Z@IU<ZJbs9Md>:-7nH1E_IO=bs#S1FXTWk**=n7";FlR$?Pu5JG,];M[n%gqN)h.@[^G/05Oq\R&4q@4Y[&:nDqK7%((C(hkaj/N@F&n]rMBh+2la]&6M./N0%O9[TjaXIfnLAZ`ncJ_pJi&SG^tfG5BmakYjTZm,Ei\@re]4gZWR,]mG')YS7F@CcmI+m%YZ3:@))K1Eia7.!cGW1pk%.#t>Cqs*JV#+4kIHEP!@Lj0:0'/LD$*GUn<NL])M1JaIrj0Bn"ul`YM>;mOr?jD46:8$9c>rJ1\o8o%].`m9aVQL')6=QOGCn41P:'k68VI?]J&ll'j=g<k2!.IK-H?-E]R@7$I^2h.<>CfR(:>,?OU2A,?H+Q-ffZfgT!jsIo@==./hdI<%hrHQ?@'nn>Gg#W*W9;#[*M>$d0Iel;b/#RIq_D$-RVD.go<%ODCh/5?<ckhXNs<eJ"=F\7TQ!Z[j?2dOU7!ICeSL[%6D6F34DH)/%_us&1Ckh@,<=>KAc0i^)>j.1M4TiMWQ$.*G\ou3D(RWFNc'EP3/;3\K)%M3XB+U#YBmISZ*F(8\)(l)G\9"-]r[:o"*!D8@Ye@,@%FMtHNm]M+P\juV9*i[er[UIj_\i?*din7%u(a4rXXn+D/GCRi?Z?^0%)L`rS=bS%W*Ed7)R.KIbCgk4cV,L3d:R\g<:`T]bMl,*3%$,@hRhJG])!b<<IB&?=(kb*[8Dh>n2o8qQ:XU]\&>^]dipC]aKRZWqE]qQBFP^_iDUs5&,5?@o5CXp[fAfesB6YBnhD[8.<QI'5%%!8=MX+/+FjQ/CR\i8E:]Dp8JR#^@qjc!98Z;.^nL/5jt_6P_CH8D>[_3:>=O`k?L(V[/LgQLrmYnOlt(Cr"c<Q`s4-m+G?EocAj<%Af(XjNX=Fq?CqNRN4*CX0p,/.SqZ)ZD93THoblrW;Z`?8C?C7P4*7YTA_nug"I*YULBr(@.[@s(B_J4sr!b<Kjl3r;Nb.!/?*ee:%ZX\\qg<kSd(keE?H"_VX?sj;`E8pc^1(G1Jg<Q7.;&tlMa;KDee(BOE_2.i!\s%FL@i%ld](UgKB;:nrbU'JZEQ7"LKYq(\4#uIM%HrT=QEk!-emi')]0Wej?;$dd4&nIJn`V!4:JORr[/kMtDnEmID`+UtRgTdu`bKSIdm8ab"bjYuPRtR)uaW98i[0l@)]qNh5j<L.u%K_n3)!s4hj*7^f_3Uk9^ZdSM]@JfZ./V`U$R'dXX;eFla="27e[:R&lllrbKC,S6Dh@[REbWGkRW2+q8Y3$-GYe)coZ?\`<(c>f>%8eDa[lk1,P4NjTMJ@e(55sT5l!h,jfpue?/iK9ng!Bgg!7^#*sg+Y9JR8q<I]<?=I0-75+Z\klkW82HWV8L/`%[^cl8Tp:U!gc'2%cB]L._a[:NH0dt!+;#>(UFdS]05jM[$EF?%[tMJMQF*JC3tR+>=#!_!HC8mpO6.t?Hl<uc7GVD0Hc:n3/""<o<o#K3.iMVKW%bGp%<P5ISkQ]$e##lrEi/1V@5VCIuWA`Rg4oNT,Ke'rh`[1Ud)C0tRc6+eE/4=_qah*M8#IeFY=os7/+\.Y$lUc^haY$?EPpHRsK.c%2%>&!ZICkOZGPD6.F[,b]h4#+=Y/1<B.Ka)We/lf1X:<emY#Inc&dZViFs'kBF,d\NTD%PuaHWG]ed?)SfFk6<VDr=5na1s@4p#ZQI%h/e!'h+UPA2D/d^$/eAa0%SJVfS;A,R+U(-5N4o,BV^&JTloCGAW]_s5e4_"f'ohE:brgk'Ihq&]Hmhpd)3SP_k*p(-(+7UL1YMI%5E?3/KCm(`_)[Pm"c4*#P&p]HO<EFJP/A@]dL=IkVIbcfVk$1,g&G;-@Tr7.KHKS%Sac/)"u!2%/:1XLZ;'ZA*HpTI^rJ"9'T[=-%UE](<;_&ZX>M56/9c1+E/Y%]bKJ%gYVFRk1!D-&:-"QWugVQF5:b@))U_J&5-(IhW9_:Ion8u#_T%>:QHXI#1@`Mo_j*7m:Vm=>k%Y`^]t`f-B]S&o)2h^4>*.OGK:0ojRVEj-5%Vm9_Hcj2!`T.+P4Am;gE\T&8c3HB>_Dn:=iT,D7XUoHEX]:4:_WXDb<*3sC%_8si*%*U2GF<Y#F6+beX'6pN5n!]D)GjC1l)e>"0=5"HXJ@@i@JD8Ej"C4e#<Z(T#>ZeoP@0>1m"(_DAbDN=e^cBoGNbOD).m,S/b1m,#2%&0V1@"jen[%2lrg1q(i3d)RZW`2!_`4\m-LBXeVfCL%S0..B;l\nG3d+Xp8A*g_FS&[BNj,/ZC%E%2!<Uu!uZ0MrgAHYr]'.@67%%2OF_c08Q\+A?_h'?eMI_?P)"=@*sTOBI9A?GkrYhHD$bXKeP;*&9\L.O,NL$Jg@n,cTYDt\%GF-o6._8`+9oZ/1%qeXRd=q'ga,F%knp)/_\2t7Va;6u(%BVng6dLBfQA2U*ZEJ`*MEIV,U[,1^4=Xf[+b*bqc`b5=G%a?5k5OFm">V2r&ZZ5k9)&>b#-(0!EknTTK:(a%#lR([5T?(5+X/XH4_Uo;6:kgR]oZZi<s;b]>qgcm>d@jI'(F"`ek1Z%+Z>"I9NQE>coCMe%Oq7Bjeg#Y3q+U)':0Vj8Sn)qGIf1&%=DEGB<A^/8!%&9!Jfi)*^q_]k3GY==0K97#RRj2"2TrmJn8K?le"^p06hD)[Y%M`r"g\mai]J31c%i1R32F^e9'i#&VjlgpP@nJo%kT5+AMAX)QE!680-4jQ77P":k7;p#T'0usG&M"8@*+=jO";`+rMIi1.K]",HF6H6Ofl3#UHC6;+/98YYB/]O(0jp>elS92Y(V3b<%<huTC7B?P'>QI0YjZ-"Hgu.6p7b7)+>cpOQ/0JbAj\^[M9s?5QCoa%VQXd-$_LqYZlkgrXee1JPTl$F\?pT"]+qp<FJ6l4Jk^Z/.%!>Un,LhK]5&10E[8?3?9UKJ?,j&ob,R"0o/Y6?$t!^URUhqApT_32(_islC$&]QK2A-hg;G]eeKbjhu?@fq"JMG@`mFR5OV##MY2%_DotC4BE=$_VD'l>!l8B1&o'4'uNF!J7Ej3ia/`@q[b[I6@j3=U^.g()G!V4L5[pjB1j:52^u$Tq(TlDU"2N^5/US]IB!jCLX';Q%&bA2DY;!*Bb0ZhMnP'8@o%N2`&HLhpcQ)]\D@CRu0U>b?6gu<H&RN^>L)6Won!]IH/^MCl!jihP%^&B>&s@B3?l$C6\n%2^eP-3G%gDUBL&'c=d;8ul4q!m<,$ej.&]6h"D+M1"%YiA5eAV@=Bgt6uToRN&])1>4ZiS&[j(IaO.qEbF$)`4\&Jju/q-A0`L7L&7#QrK1>%(]k<BLQE*&8s8'7_c@isoZP[<d]VQgg'FRPNtiaH_aa3JI8h=;J@1i8CA,_RN)/@FBB\\-]*rqR1jdZP5]#TTAmCEm+)0-hJE6f?%noY)'Xus7BbJQ\HkN/S6)-mD21K\K*OlIRa<L+APD[:g-1-[!GlH!a`eWL*^RQcuW_20*4)?V4:BtIV?or<4U*q[MbjWZP5&9/3$%&jl1>+QRK/,fg/s5r=NNKLVU?3C(p@L20+;*5s]7+Yu?=nMFnbS9/<IF@6>WNW>aq@9tKg<S0-jV?(>NoRMFXKi;NJ`%_q:LM6*<%cKdRi\TeW.8kQ6Xe(7su*,))i6r2UW^['trR3L6K=id`<#m3gn:]^@:ou\SuC(<C9O)PMN)F=T5Hui3:\\aesiC-,`4?-*4LNltb%CD_B0F`*9KK^cXPj#b-lCp4O\/4%'+%D`+3LFil936]kP_^ch.$/9"=9F#_A(Z*%Co_Xc"1p)OJ3,')b*f!FEe8]D=;]n:/X-,N2%`0q.P6+=l;"Gok'&6VfbT+Q[ZTHIdH27lN0Vo!.QN0<UK![0k1,@3NBGXl=)jqMRYps.hH&q1jV![]Uh0U3`.$s&;j1TjJYlju>`%5DY40J9b?upd-1BJ[.Z](K%V-jN%K"jF\HSW?@R0/$@O?\qr9eglJ*i%VkhI#R>"U@Wa%LM@#A<=:uh*"#$u1gr#K$NeV`r;)dRZ%@&7=+LhMls8MFrDHJi[[X4;%V&Ju5NaG(ERRcRLJR:_L#jXEMpnK&,.:ra8ZYqk'#/fOpI6RrCOh9XQ[XQaI@]0g6B:+[N@ELu3Z%qhM)_*-,`I'@"2>)".#RGK`TcP!IL1b0=-\R<(djCEV".OUg#-E/=pe<F#rdGY=/fa7$G<f]s3(1d.eQjYap$'.IsH\OCu*o^''h%ZiVa0XBXod6BaWU):7Krq6i!fjRS`K$roOp-j5@/o^K@W2E`FLrXV_;7sAc,d!Fca;X;As82@8gF:B5&DZ1`<ndoe@2@cBJ=IA'6%0E`\($t#F55]dTh<J6EtTlgMhZ03Yh/52<CH&u=3Sq=g:a9M*hAm)&eJ.mJ?"\&*SN'ah;0P#+'+?nW8HEtp9pJ_tI1Sa4XFr:pL%ADS&tYfJOj$<ffQ`=E#1>4*mqrs2pSNlYXV!cWhePr36"'NH;a&S<J'cRhP\)P*g=LMY7V83Q-l17>hqJanj_oB:ACJ,$XfgQY]:%B-f8Coft;)\1Pln/3S2nb(Yop6JY=6`=[5gnKh->.h>K?(^49$OFbF#1Qr+%,p"?l(oSF5e.@:s8+hkc7mLYP8Y02YJfT[K;7RZ-%Z3'WsaS_]<Zs:h@e]Y19#ufCq+uLOqXpStFrcI\oBO/\f'qe]Ri33Q_0c@52Sf?('#RL;tgmit9JUblF_mu1gPn<8t1':Voju!35%YkcF@rnO8E!*WP[(2ub`JP(mZ3e?fD$u.t/qJ[6[dGT5am7<cZA9hhg1RB;`eVY50fjPa(kaXm<,FegK%)@qnN*eScTVRA(k6-/:%N3O'?3p7YH;)\;LA-N#DZQBKT_EgRf-&s^`?:[g)FG?$A"b\(>MrntuUE'7Ke,]PQc%\S,"S5[ZL%f]ChSPL;6O6E^jQ?P3mLFr+%="C/4GrfJV0GX&:ap$DVN&q/[lP:jhG4@21qs]lTDGgIE)j)^0M;(ChB&et,T+P\WD"8$UF,(8#&oW#p+1[P/4DJLN12MZ_:Q3_L%.KL,>g12O,\R7<$7jj1&mhKLc1(MXQprm8VDI?XeO9ff`Ae!PU=h"UKUJ-<tWDF`dQ!M:o*3B]lNnC=!^6-Z":$%W#NoPZ#=.,%7%"oT:_i0BNHg:u)l0$2Rs];'\>MatBWmJKX*F4Il)L7$Lrc+7,)d-i4'+pd][OD8pZ94>cI\:T9^coD7AMX$`Z+i:R=U^$l^e,?/n%PTt!Fs6L$N+.?Sb/u2-+s5R(c[G)j)O4Z@"lNi+t>)aLZ-j<oc6C8Y3;e+_d_(sqG9SKQ_L3\d]@),2]`r@3Xg"KiUFlc4N('Xeu%BBDg@7G>?DR9EI6)"Y^S\%pTC!WhK1dh+RQok6^4)#,KN#9p.M@HGb*k5uM@$/Sa(<YhWX-;Qs_?qR(S(Z_5SiB]/,>VQu?]R1A*%mn1gg6Z22?N#IR$?E&s_k.CGGS2i@tOeEAs9^c/*Rqo)qG6iH$<o%(K3[Ohn6j"<44I]Sjj8c[YAKgD6()G><qP&X*?s6()aEa5Z%KpQe?d#k4gG'p3I^JZ=#kXo+jUOX[No9ho0NDO:1ZI+K6d:X=`"POPD+g]SV$)`E6:r7lTOOB$E/[KBs:KD%E86n*P'5/!_cAnd&%6f2:m5X7FMJj=_pjAXcKKT'Tmi>=XO6gU<]?e9le);:=+6"G6QW=OM$(fNE2b[a%**KMi'Gga[7a8m^s$S[A;`t'j=(D;\,2Qrc1%bWUrRJ@lCQQRaXIH[Q+T4VlpV*Yk=uH[8]s<r)p_-kOJt.u[0\HR/&G7^!@i/jUg,@#3bCm$iU,o*,3"c?-'?"kTmW.o*%WW`U4f%g@Gm2.Lc5[UI3TdUUQG>+j7OeHG+0Rm*fE2quK-U]Q!+Mm^dmYpB@/^M'AuBrtJ&7ankl^pODn;pKt[\qs4,$5<M&Vp$19bJ,/Lq%p[l.uY#9j%D$6^p,VLqJd\TP9J5iCEQS1o:P=c>27j;7XBfa2QQl2"ri<PU;IKa>R;K@$0$_plUk/V^0_HV]GGtgaZi=/P;p?8l;%6tXB:m#p\=a`3?ndOBC^UJIf1SK>J0]L3GBdCXqH`/(ot;M$#Z+B8u.S;SA9<q9cF]Y$V_Qgu@D81md!oPMK5lQr@NR\>B<00Ld/%P,^>]TiMLJ9k?sbis[kB1Bl`-k0s*L,a(NSKOr=1#4WXY#g(P-&-Qe*LBJ;f[M#_qK_/,S=2H!]"K`h<hPEnm5r0A1d>[&PfbIqj%J9>>pCrf2DT^t5]=ZmWb3.#ec"'_1MJ>Ns*^s#VOd&U9G<n>:LAV\?LAI6H:p+fZ-9QCKe*d(2.RF$&oNC0XQmCDj[I\m!k-k(\0%@SrnaMY3WfRWhh0%i#/Y2KV>bn;=:!A,*-MBg>$&?-QM`&d):Q(o7Xlg:3W-I+N%$:MG&IJR/d_C;pT:17t4Ac=6scMl.5\L[2k;%&MP3D/nFmR0NjK\H2(OleQC:&%*F7b`^M!E),Glbr:K)RXU]j0c$bXD!UE;VK..-H)D;A(+KR%UfFT7L<Hh'e$(RU(h/i82'*:T`%\t\HT.'04Hq920%bSG@-`WoE<_gKSmFgE$;X!;rBBdb)lan<"UJP`EnM[+$('ff_U_Ed.Wl5k;,M[W*eFH+"J7UltM1fljHi3nZK%<Jo%'BQVDrO'j-U\WO7jj>Q+poY\#mWX3X9ZP1mK>==^8REP;/B2MomJT;V"!,42"8X'=m$7Ok1fA[UI8e6YA[80e[K`[XlYROVo%:%e!,r"WiCn>JnZqi3&$MQ&oUe>uNHR4^75Up4D1;o=3"`5]Q],tQKiD-Z4Z*Zfr?CJQ^+1\7]5qn,NmO:F](C`QNE@U7frB.q)c%UTJ,\*)0ou1G3&_B5AV65K4o,&$n_>'Ud=hT1GPgFfN1N*i:"e\DSu)^X/;TV1Xk6OfbK@N//E8()%6UA)%JN&m`4s25:\9F7Bg%%Irn-11dI'*\ngOZ9Q&M(Lnr%L&nlWFo+!PZ*B+:75C+^+BYm()8K1,39PtP[Ejf@22+=q5<C"ggM%TdM':9i\TZ),D[B(@j][3[H%c?+[Q%VO-$hmq07=_8@%lsAd!`+.2;5h.."*+Emr;:tHB,VS5IZ\AKmEEb,[k9==pB,1rX17F^+JdOhLct-I!!D:7+OJ\J*T$?6c%)/3:^4eks[n$RCC.72?jR6CV4=P3eU7UoD*,]1^N$.JATN"-qhk@7pLN%64E%1NnApl*0B<[bNLj:nOUL8.RaAXG4=ohEYd_m=D=%O,T&2=[epG_).A8`Ph&VijHTr1lU4,82[''@O2^"btjA@Yosd-!)])J]A`N.o<g:+nEMB<_!79t'&o9MQ*p`HB)^36VkLn;ZVj^E%%\7/.kK#dT3epg.Q-9_+NK8bb2<NL6"n33sV(-9t/-&@(ms`dFq$Dn'GBK7f(RX6_??GGrAZ6Mj8RZ_#^Q4?@+4?fp*^/hD4=J<T%[?Qo-!o'$O#"Tsc0'%0k*fHHjYJ#^<(H#:<Kg<Caa'k>@_?-!$X1jh2"%4"to0hg':jND/1(<A5<*o]gg#%_DTWD`.YHDL*&B2a;%@#S^NJ@l^tqP@nn,fp>LoJ)2=$GuaEJ/Osf\`ENs=,7iI#Jcf2_jsAfT%m=.Y/<o;88dF9%K\aD)[',=33Q=PaH1A7;\Xp#/`KPt%7Qnm*(jjC4DrWoV/hAP`],4B0`mmBQ'<i.R>9(ds^goT6(Z8`4hBP19g$Vl%qb\_rd[%`NTZftb)FA#5<t$2d"*:nJf465U'<B;E%-_ckNM-sS%/4Ie*,!00Dj.\DFZB?qN<N9%pVEgli>VG0MPIJ!E<K+^Jbjaqu^kWW)(1XT%cS'=`;sBk'5q!:*f2^i8W!ooV:Ci+&%&ZU?oN^8=r6!dRb]_>Qeq14,hKN3l/Yo_;VQ_Wmeq(%S7SQL1J^ajpgPiFJ?e1EQcE/VO"Hb,Y[`4%7-9Y3KB)Bs9WI-";EHi[U@%bT70,=ccDL)C7M#Q70SJ64g3;HHs7A_oKWH,OnS)p*%G;S2Z[L*(m)^OKiaM,(Koc7nj::;JG`/(B>Un)0/dF&-\''Ms%>)4S0F(%bRi'#AKq:tf38b9EdGQ1o7@G'`fJtjK%G`iCsbEi#Yr<o0l=EE-!uZb,Nr5q+Cks;j6VIsPcd=^f@)#R3*9!"1?1u-p#%=_/cin6%VfaCV?C1L>$(WZGr4f96\*2[J"3Fpr%6m$ZFj$Q`;[OXF\CX.l,oJq?WQUA:(Y@Y.02Z,+\cGpg-0#Sn.Ngm[c[Iah;H]mK(nY-?%!<EiN:o"Kk[s1;U!ST5hb4P&.k&s2`-m)*r0e5q]&L1;RH0C?25)HLt1Tbri3`6+nh.p>bWB#CLF_elLQ[1+hU^a._6\$:Ro-2Lo%,r]j4l-2fVJYlNd^LB':c3^16>r<SGdtCk\_h<n<+KWl$:n6c;?'\Jj=B0R^K<Qs?:kdUSNk`$:!U^5n^aHr=;5G!<nO(*D-3t/f%JKV0M#ceGuV-2T<DZ.-`eQ2"Y'R]##+J$G3'`1;3KLXK7GmO!KnNb&b("`j?R$XLdJP+&5rl]m$4l;qm;A@BcP")Pn"]55t<)Kf1%+c_<Gf>Y<l!(t%Y6t2GC,ubFIboFSf\X5-WM?%k=l;>S&o1oa8M5o*iC">fn$35c,)piAR:K\/;A^>@f4[oSULNJ]Y'$U[jTEMHE%K`l;tL3_<n7c''T]?+q^)M@N0A6:b9pW:\oPZ:TrZ*1CQaGdtcS=uB>l=ebs<6p1[R'aRZ0ZY52(5IZp+<VqoHsNG=X-@M&A/*J$%.Mnu%1]k>^<"@4mapqdsP7<4IFg!XDBXC:@$7i<\1a>K%9X7S!)eHQje\LJhF>)DVL%WOfL<qupr94g,iM!tbHo^JN"(-.8F#0![%D@YL^+lmc*cdYp[$jDU)C>)*,-4Z[iM<6Jp(%jmZmI[+BrI\;I:r>kR1Vd9N\Co6G-lU(n+=OaG$_"*5'2=s0#c-Gj4TWnkAjlh"%K9:O^0Cq6<P`^&`rF2S^Ck9q^*Jj+BgarX;U:&1N_7Agb+h12_*>B<G%KHg1Z&8#n![^IXO(8nn(/M3+nTb]UbYX[>PRdd87CHY2%'Pfd2A62:GmVbKnU'SaN3'_mZEtC/_V1"GeNQVV<_AEJ0LU]/2i%_o7')3-"\==$^2Ir>=0Us4R!Ak-Y':B46R_ea^mNACk\Wttq%\S4%!gipJs5%r-@K?tUs+_KY@#_ug;]p/tf_nbf%>AKLh1n>qL"&VO'*s,S^6W7eA2%O-41K)Mbi4(PLQ>iA.%KR$XTGpbc24Q+*%j=M((hid$>W?s#YB'@=1j.HCA.ZYO,["r:+Gj82d,\T;4`I57"c^-oA\oLRh7/e-`]Wf0rQ%3*K8GrX.9+B"J#RVag63UfAoZTHp%n^4UN+jqXQ\2%8:`8!^%;(#)KA_fii^=0VK_7:oUoXt"fnLNZRiq`)7<><n4^2TO[RcH@4U--Ba5UJtH"_\a>]]lbfQq?Au@5KHs%O*I2HK/!R_Z-+EoYi.#2S7nk(Q_`Sp0B[-U%0YH+Ns#L.^Z!_jd>[N267gKb)oKAI4KL]i.MW9\[Qn>)h$L5:<=i3aJll2JQG>F0%Lr(qUoPi(f#-!!>)4hQg!6J4?`j4Imb(S>oU!&6t$q8+&ksPj0,o5])RP@kDb_Kk@A1]9"U>BuR934eh>orN6A/h*Y:.c6I\<ek>%&->"$EpQ-sgRNb<R4+hp"bV)d0OR6lXjGm`=N;S$6B+E5E-TC2dg)tc)CBV@IKU)`^#pFEk,P!>j/Ng-19&;o/1_kEqWr14$lM=d%WrdRj9!@K2\CD+3M8e59]gOoqVlbCj7%$"B1T=pnpp2Y7)0J`VYe^b0lU9ro/'[#_$H[4VRY#?I60SAKZ]?W#a6U79ru/&%=;e/k%W$KT\"sEJ>gM4iZ>C!khkYN"SPH"$_.Q8VI[,j`&`WWMM<=>EtY9-c8>`+puV..e'Gs3YsO%Bl&9hq0-/WoNF_To6OV+<$YDi^8:%L<?56T`K,B:I^q,iiF.oo27q@"@q0P4:5.hcea*02IA]d2%Plhq'2eh&^o_PnX?&Wo:[o2p]DF<bhr@B:@oRiq#hB!?[VIu0405%%qW7V+T7:G^FI#]EpK'$*]`%3eh,hAem+jmg620PL^\d`*S*SAs+91F$n,M.ua5jd\"E!Q3KYr=Gk?2[nF>62tO>P9(LL/3@QjZ"_%quEC(g)+o>ba3<%!o91?][!,W_\?f-)gs>$kY]?/c\3TYf3RIJn=(7MgUM<eTM'#_Vp<8*ghJP+i]BkiNB*>B[)Nd*_KgLTjE>)9%cWet*A0I[4.S+W3XF_ltS@K*.=dYs#AM-lT;_<n^(M/\`Z7_O(_6QV0]j6<%]9%EE'ikUI7F:/IibY_Y>AalshdFX0Ycr2ZaDu&n%jk(#HDY8rf-d)[^g2MfkbAFt>mUWk!RhX80F6,1"?.6cX$^=,EI\Y$h=HQ7jQuZ&B8sDM+1lT*1EQaQ(5^R8+U<.7]TNibQr-mL#%jAIo!`K6"aO<GeREcJ4)em!UYLA2N!]BF6si)no\"[+L90sN!?m'r2P\]AbdB8p6Q\EE?\V2Z?/Q@AAJ,VGLu/$CdSEO#.^/aP6X%\3Q\X,/rqjUE@JYMZU%#<nsWEE`-/,JIUe`,q!R@B!%U:(KRX^S^*&GLO3c%LtesH<H!8ph=6>p__qIH:eItN:9R1Ba`(*.3L"5G%XN/$gH3u-,Hr&dW#T$3;^apP^krJ?1K+#R'p@cd`4&/3cK*3!3)")!Ti8Vc8-L;GVaM`[o&.H(MH%e!Z#$e<YjC[/WKFbO]K)q<S%T6&\K!I#iKm0pMK(F/C>=&L)C]N6?[hjL<#FulX%5%tSdik5F:%0BdU(`6-,pi!&XN<K3^jtShbSc4r@1(^RYr`6m=(JQIaZj"ao%QZ]7lD!/Rp?i^u#oX?YZc>h<hGiR(u3uuo]nllY]0`/o>9Tc%+q@3&`<#'KDhM0bu[("NSURh&n1/+Pf]`jQ!A32bhE>Qk+;klpN%Q0O=;)#3ST,I8+fED0NKphhILhprS!/Otg1>\C[f=p[!/-bBQR.%I6o\ntC$YebJ:S>B_n\o"&!(K@jd-,>`RVH\!PJBE?h\o!IO%"j\bMG]B;4\]+;1<0`@`%tTRge6Q^tANG)SMrYZI!poQ=j-EYABe5.r;rPM7\-:6=6*h6[Z=`gS_/G80,9Q\afY$KXB=G!LWY=a-%TJ#P&gLmYk8aXfC_efe*^5=5'\d/K<B<-sD(>la&Or*0ljESLVbI@`hj[<lgX4V64<nlX!0h?/45M'o[V_-,kB"DNN[&#]<9/,(3%?Zq%Jp-\-sE(Hi&@XT<n]V2Z#m/p726tQff#R9PA8oIdgaMqd1j:=OfbE/5Re+hA=-L:E,34=)FB^j[63i%FQK%br/F=]NnM_46<%k!aF9!aS]UW>lJcBfHSAKe7&]9:q-Y(5:Ff92$6la=/>WE20URmO1/$/T0Y/ZA$8#77t1jCI(`)n1g;Gnbja3QX"ueB*%/7>Dp9X%W(2KKQ4jrY+!Rgk?T6D:<5`3&$I2grQUj1QPdLtiSSBSi@kAnY=Sm`T(1aqQLhE"%hc/(=e()<uJ`R_b[Ep4Y=ZBP9IZIgf\S@U9%$%f,l!A`<b5ucT81mH`(:G$+kAl0T-4-Y)re3\T5)i@gd>\*bSL0CD1@5\6S/U14Pdd6n=#W1OQSXpUbLbn/3:0W.QJt8EtaU:UE%gpBTuE.1Do+gB'T4n$V%i(-6>B+WP?qT#^!05W^s*cJEmKtF&A78$9+ajq4X/\\,cDFeL5'K'*6dUqHe_+9J2V;:XgQD2dnFL6i:%S*F*l[&)u?lt!I/Q"A?fF4d'6LL2=5Vch\rZ(6^eZ%lSM#X0O4]&98Ff`,O>o$H*8,qF^`BX,^ZMgVqAV7+rZ%U.?n[!km!_Y?@l%`B\buC3`03$Pp/,0E,+eS9hHd*`R2BpFOlAi))d'M`aM2'8q1Fdc0/@B>G[JARY,S*\,E=['N]<5rYmOLmT32Oj9]pV(Td@m"or`%MMfb,qD&=hGtc<rhs==jjUL$^QSM`\Z`%)\h\B\.nU9Sh%9ZNP:3lHV+q$k9GhF%`/BT;P=^8>Lqhek7b_B<Y2jW-Y"j&<QH>qHS%1$c_nVjO$6'A(2WM]-l.-p]P6cjA9.>tKo(R4&>QOjq41k9--TQlfAK%DaT-Vauo?@J6V/W0gDP@eO2$Caq@XZRGBTc:BY5_Q558%&^1k3DXE0c(7^*:$$(>p)_=s>Md;WDFL`]a[CM,C&4BY$F;SElDHUWYJfm.a/D_[iO[uoFaQ]d.4,qL;0Z>WOXI-<A`@Q?q6!OuE%!bNnAL0#-u0c3!(<Yie37k;D*$b^W6aOj'qZ(N4*-obeS*5MED.#n=1<6>ZFD"c,BS5>NJbH/cdHl_*QKC3iefu%(2-Au!3G_/%P%ZO,F?\7B$&U"2'1AFY\Fjt&&&M1pIgFsbn("d(?66H2QS8<to^oGUeG37<[<<e<dV#lr>'_'4fpP6Pf4OY)TE"c7'c6LE]m7:_rL%86;?"q4/+UE!BI0^JFE18.Js0g2@p[/?B?FR\5^qAcpe,:r>29rb/pka3n9IQ].X"NBT87n+<kXk4GnfMaO%n4n_7$2=+K(_G7\M%Z,^UkMm:?5;t\#,`?'pGKW1c2M`is5&)T#5=<'f;51jAM<L3>qf\'a`A\rS/^d=c/8?g,]QN!HNQ9?!T&+"qLiT[[#aC?[Xc0XMr%W<@3^ON34`eG6Zi).DM-17!+S=>GU]9h49LBW0QOON3Lu[0IZ=8mR'KI%j@WM][ZYF_IH;#6pK;mT<?+eoGcNo&5r='\otk<H>\,%`DVtV=3:\j/E9JqRhp9"H\Ug+kDhuQ83nZeNl>d3kT[NHeaj2pD;;CTLb\AIWFO%R8gMHV@nA:KluK"a`VGdo*7V7'+%=2$3gSqS%!5!<mVAp"f_&^]=-h<i5G:Y$[ju[i>>:SIPa^Zc.b$L1M6GiSQ)tI)DYBnfa3u2c]MjtQ0/>5:_k;Mm5#0&K^S3</TO+L_&'5-pl%e"&W;]F)UkW8J):jH-@+_&\FSW3cZ\7NFQp<094_/<B)`,*'Wf=AQ0K`WEPV^BSI)JLQj]3,pL@6W(.[3-J&HgVFgjP@k.(D(MC`%af3o/CFjEkD%,Q,hSZ[%(25<&A2)n$@n64q[\/S55cfI\(`W"')o>^A@CL^5`=b?b^'C6>lCRQk6Pmp9AeJqL`Nnfa,Au3[X9b-I%l!c"J&"P3d=;?B?kDI6&(r.(j/4;o@YJd*\Sd;;/`KEjbBK&&Yl#<5ui/&aVcG:2<@B=l$8_f,2WPM-2*(7&Zj[>6%.$j<.^Y+HQ%M5^0SG[gIh(1?XM;W.2QM^MOKR+<'LXJ-sr0:l:c;*ZtBo>KXKC!ZuY/?<Qj7L)^?*^ab6)c&$Z/-(\A7'TSSS178Jb?)R7\;_r'%67h!='['s!^sBh2$NYkc4&[\`_(U.M_K@G#_%]NCG8o;(@[ZE#9H%Q$jX)'DR'P-I:jnDt@&Jl^k+c36W+(#dCEB#r2?d=1c5$d2%UC4mR)u5U?MbW9o))kg*O>3Rc\7-o&WZ>?L'QC[NN@YhP>7A#:(+Y.=Gm7D&@b0%04'=+f2#W%X(':dr"Bd8Z/D&bB@O8Cj&9P0>%&*jUo/f"LhI-bs[gt)O%&9P1WN^.Qg\nZF=r1,H@]4IOEdD]Q")D9Z.(Q3+miZ,.[/s[s5U52k$7!7KqB8bkqNp)HSQ9rQ97+o^F%l68K#G!ldSpmis:M:5U)#NfW;-Qao05o.(qU3EnFRWP!ac5)=^jNbNH`?K/*5O<3kO=FlmfO?#oouYlr.A9PPZc/fL.tNo'nl4[*%%'iuG_9_Ar?Ag?M%k.l:aC;[o.luu1Cp7^mT\J./RGNTjOW]QN4-cuQ=Y*m4#Rkm^=CeNq!NqX*@U(?00Z[^%o6ha"aC89p',jD5%`rHg=c/N9=[)5IkZB<+(8FnFS@O:Q6O<+(X!P_<T.+:QZiJT9gHjI87[TI3E-5emLX?(j&2f,`5_A!Bd=Ibk+bJ=r%!LKXR/XCDI%TsB$-],XR>*c/(ooQnCjMlSRs*,MmM'k3#q-&'mcWQ%u5)Bs!ra9\qN"t"Cp9X%>^j"*-2Yu"mN>,2S>2s9Nn(4/Bk*9Do*(:(h\%?&&nuLdb"BaNK:b\.Q]#T/g>l`7dt!TCPA=FnTpp&ps>+m?9Q7441,#^LA#3G#?9-VK'U'(Ek^KG$?Z=`qPH9G);_4G5/ongooX(%AT?!b&DOlJGTA#tia@Q7Y8]E:8=URKDOai9c3ucErj2.3%PJb3?J'7B^qq>a_\l?q<nQAb]tk&6ZQa3$Up/n+aPAjb]5MBsPd&uM%A:kI0e,cAagB_4Z'3`T=KB;i,(EG'bBBXr<%2L^XnfWS(G79\nJd"P:ZIk-D((bU(D%NIY!2U9`$78l,e2c=r_4GNi":m&\)^oWW%#I_Zr!#l@uR%_f.((2\%YsAXI879cFi;LXr99FI>))F_qCi^F%Yi,4hg9N9X(.!:IcF3LT&^3q^3rLQWYBk(Fm'"VE7#@q-^EPM8%4mU&26(#FZ)sUMm<6DLE0u"p%IXk)FM-k6=)*=1&]W\s]&8F5mlfnCTYeH:u$i*10kpu)2TSK'/Q,R)I>>G!?S`=1,>oQR#iG7fO%I&qTE\lUR_&?'T/s0QdXNn=\Kj*F-TQg,amQmnXVQsQ?2C?Kjg8HfC[Um1BaQ>"XX#1LQ:niE:;2HX:Jld!p)-[>l,/N!.GnN)Bm%/rEa*SD;'!.tQaX7e!uWcL2)i(\4#$8`I\/2fdO71bcc5$>7R5kFEuW3R?C^C2pjPW-i'J<_Vpp(UkoC%;0Ok2PL?S&W7REYX$W:%(.G<<]Q")':,d&l/7VYo_<hTIZA:&n21rf!i&e7qr$;L1K%ZDJFQak)cRGpcAnQ:`d=>j=AlfiYiktG2.c1YXB6IQ-6SQ,=^]7=f%]2HG]jc.rY-5UUUR9dq(^b*Bmg%?T=j72Pe.C1OE1h_Z8fp+nDeXbAni*,B'aH`,18_c7:=$e.9@"R'soF=!oQsHU+q!Z/(G[Pj^%60u0F_Pk`_qF-`g-[+%;L9au&i:HfT\mW3M`^&?W4f>1`@b3lrK%H86ICQ\Uf9Q+DL1B_a&da*''tg]&0c74QG[6Yake+&<J!a!I%l[%rKYjo<m6K(Rt!sGeXaW+L!TljqXGuY,O$kq^Oc$e!N?=XciXXc12YtPD)X'!0k=L>6p6+T->XXgD-i(F9X.uK3T?`$`PWLYhg%;HKY@3I<Rt*6cj4+GrsIls%nSPcb-P=E<AjY0&cT[`>C*J=t^r\k5H#=XEb21a;"<!lXGP.;kZY!pWkkioNKsm)(,I=5ln6h6=Hl%NIg7)UoqUX=E(jWE$EUI8lt2.E^&)=JuqLGW2i*tB63ISds[=gG-;Sh0%]M)@Ae-7DAn@l"<)CF`!djA*kQ$$4KdN7C'bg1hS&p<%LBrDGEft>dY1Sp=$8jeJ:KWKE=ra^+S=JaOKe&OF8>P2YY+Qu=XXs`Y;A8^BrmilK<tKfG8^Jcn>>L=GmF88^n.;-@j6,'k,-,0Y%>89"m_!K"Agf>7h1?WLcKln;l[^CFUeBZdj@/K;KZkZdF,#KRE>JX%enh"K)]LRX_K!Me)YP>XF>OfCfIRDa+qiqCn.lY@;A'q]9%A@134[A*($OisD4D5`n.4KZ\?5r/41dgB5rk@/-o2G@n7Z)o3S"tn$CdFsENbXKq5Zqoc6`9qs,n?\hpS@RD";F(C):7\_tU6^JS%bSrPmW$Ss[LNBd[hnM%I=]#;(#3)2A'f+]P_9<8H3%=edC>*fjNL(AOi5gFk>#kb>]<el]#QY5sdC(K^QN`F2B3h=7n80jYK9LHQ%(@aI4lZD#2(g3bT_@qU(8E_@jgIB8APYhGD_8hH"A,+qIa,94o+E/8=CEtV>)=)A]41JD_4Y@CQXMj5jCr+(/&:.0X%aSqJR93=U%8)Md`=Jp66"VL'B5^2C"77_rC<bEPt?DegsWf+N(k@(1uP<=(l'+$Jd>Wf++Za9LV&[?B.C;><b`/4_h=BlEBVV$N/,@\>]F[j?=%X1htNAHG)Hd%-#YZiPhLS;EN);!s/,9WX,pep>6P8s>1f47oStNJg9\p:@oAe,lcKiOE!fUB<GSX>BS:Fs9reYJl&_RM]/NP7t:*%A<uJmA;c.acIfhP8QaB!!L0.-Q,SPZ+<;n5V\c'3Z`;A-2\Qu.X(h`?hN#LN9FRX""mZoUff3)JJ%KEg1,ud(grQ](a'3M_lpRjA%nKRM:4$GT\LfG7!-`X9ZgM&=3+CJ2<bY7bhJX$kre*ILECk)g(%'4hg(l$>O]"[VAX@./5V!e_n.`i]P0sEE^<CMdk&^q`f7KrrF%"@tsb%'6g\7BLmd'HW$'^*$eerm'mN,P;fW'X>>(!`n/TWJc6``@_2-^WP&S.++T8PsWd\eIdRP'^&i"0#LB:q,_:mM/BZDE-Hpj%kZ8qcXmQ%eF<tqa:;G#J#'bV`^e3-2ndYUK4\NGni*XHjk.2E-X,8HoH,IBh&d`Z+n?4=QS^V%U"ZXi[\MLIQ_Lq+OcG0bfICETl%'rKm6)[9??0E<@*#$)(g(fud`OaqVm^PX/&hK4ZhpQVuur2VfOGo?G;?U_+"EPC@<AZ-&^(sK!NJghW\X'u<$U$6\2/-h=h3;k>d%*ZQ4_r@3JZT?5jmr==nOi*Sp#L;;0]^IkX`31@[u$3B,)i*W;\-HOKI8lD61n5tMMAEgqqn,05&`^6#OIl/rn\X(4LMTXN87YKFT%\J[=;`f#=HJZGOsr`.fsP:</!Ef/=mmJO!rl=/&RRS*2*)s:S)!5@.3^Bu,_e:N188+?aBs!gg7S6L*_dNDhT&@,5ITkBc9)@W]?%YZ%c46K_aqab`@f]4teqE@EgdXGE8WcrrqNpK`B'ob)'\X@jBMX=:*YJqGr#j%dFZlFGPK=Xjh%-J2B;`"Kc^[8T.t;l5t[0-XNf%7Y6#QEMt'`EE+u;QrgusVA`uqC/2LchniFLfiLaXL"R7.X,P&4O3I+"ZWC"0m&OXs4LbraI21d6Gn7a*b.6T<j)#<`9!c=t=7MPd%F[<bL!KEV?IMG33O9Y_7"hrB_&s4;E,^\QYja2_:kPV@hXp4$e7D>;+p[QPDMB3P/'`>#5h!`t^;b9:.X7:B4<FuPJOe$8SBBPF`%"KWG]gtCqHJ/-KJ$\VFBM?h`K!@oH)614rX4<OA/K7K5tEXY5=!@oG<!aGT'Zn30mFT,9DT;4%Fr`*QqZ$cN0?X9tV^WNBdqVJ"4%5eJReNpZbFOD7<Hs!e/1?7u4W*[7?)NIR3kp/(7^MXbIA,HJm%ZLlr^!@uX^(iKib<[<0NVC=d4'EpNV%'0SGq9FVDQ.:ph5]UaB%%XL>5`kY3%-!deo'FDVN[feekl6UOm*H"^4)kDiepI"QK#IWJmM*urPMgSM>j_8_<_G\timnUP'oG4CscFeH1CfnWVVt-i(n*3aF%q@2hlagt#D2*-gV_17?*Y)_.BE8t2W%sRG93fAoJE7GUbD[9EA"GlUKcX=Q^)'U0mXb*i&M`]`EP-%SemrYU\]ML1!<2Le#j`[47%fd^ORi=<"jJ9/b59WQ748"%Rr[#2N__N"T6Z\n48>Pa1h(#Mk\[F;4?Wn&L`YcK&7*;L!.erX01=5dU!@fV/g\_>$joGV[%l2hRR%,`VCaZ&615O<mJj('"pp.s$0iEcSeXNEd4\6\_MsgoB.1m3mlr'f:+,(q7_hV'lj^&Z[)^*2WM4('4Qq7lS)\&0gHW[&Q(pEkE3j%C+7jcoS-ARJ<iBW;\]=0e31c)6'0cYar<h#b$dLNTdo$)=VdVZ4EVG#Dfi"p-0dprMD>hs]E794#_%k%jC5]Q$ksAkUl%'oHm+M%%*873/k>=ZF,!4"_<*A8m^Vj8SOm@O;[?7C3gE^iM(mTFm%g"Fb:oM5bj<i_&?PNQ;`jD7$("Jk54LKN]hp.dM\@4kJ._;rE"E>o[%OG73h:.9b-p8uJ>KSYU&cQ9Hm8AWI.(1"#@GWHJE3b^(8T!QFV8H=N;Hcdql'Sr5l&IHoB5[DDS9P)k(Zl?_YaC)%O?#%jm#?r[1%l.AC?,>7.$#,NrTe5bbt<2mk&Oa!g)V!;O=.OqCtHh+N^7&`FYTicN1<"_`t\S+mOPlm1@gi:4*2T?1t.V,Km%?=EW8YE^A-rP&U%jHQWP=p%&[r&k<`@6s!P(-a9`T'@mh.ME8QUYt43+R$VBEGeag!+\poe>SH0mgj#0E%M,I%q8Mb7e`KlLf&dj-$W;W*@rJ]Mi+]/%5hKdJnM4Ko"tOFK4lO2U6r6iJ"heoMU==t;?7Mhf+h?^RLl+MCbe'DWQ&5N+bBn('TnN*36Ub,Jlo/IRL`Sm:#8o#*K.A4W;"5R6%,s)iVY,XQi9W6K3NJLCM(!S<@.`**11?CXSM+2QjTOOuX[pUFH2&SQe.-\USaP`jmTE5m\IC<(I:=b9"MZL5kbjlrCL"71&QN+=K%j^uo4-=8?qr=hVmVAo*T_/6F*i]\A&^DHPl(.:@S`dA,>"S/6JnL8FpTK2,2]r-WC0@Ed1bUh&gm[5\&H()DTk_AZX"r8U6(?;CW%MCubEQK3P2GKN&^lU?#tKk$79g/mDZlt!$0SEIn7MP82[!M&G>\ME94l*SNL$)5o8X)d^"ZBhuM)k']9;k/8uSAKJ`g5AuOV^VR*%dK^bip?l^%'W6q[2PskA`JV\S^n'HV!)X5??C]sgd%Tp%XB^m?orYMG(W@gWF>6.Di,VVKHm7b7q8gMQ+mioU9haB6iY4ra(c0!I%)N76RE/L==B_@,;'M^X3V4]b9SMP*1?oMq/@CMGi646M!;0p@aA9cBM7I\"Vf?8#E=VO.fCl4;sOsPb4Pe8/P]qI<#?E4nC0rU5-%oRa4[4<GW3>+DH7M'=3Un<78e327o.Bfs^V&Xl%@'d3iWV_dU"T.-]]Tc82:;aAuS!eSZ2eM"kJdb=/E8E8!,3eg7mK$/8GG8Mm-%h'78.P:;U$WO`8U:8f3RlU7W?IHN<o=jWOZVqhc1ddF1_4,GCa.g^[7Ca<..6".@=D[`Kd$NefFTMk9GG%XS&kt@.?>"*-T]X>lP%#kHF3H*BASC%m$fK=\F:E_?t/@W3-k=cb<#5Ihf1o9Kl!mge&L,e!qOB+UC2<\)lHLd2*XMq^cahGbd\mB!/%fk#cBFSN:*6!?<s%2s6a<FLZ8TPbfV1*M'Gl_OhcUBe]5`?g/EAmn;#m%Srq2@4N?>L^^Rem+RJf(L3eE7a8f-(KDnq\LaUU[Ma?&Q(g/?F(4;]S_).p%6j:^4g<X.UAViop2^G4B#6G5H*2V+We.tJ%hkP+*Z5?2ho.L;4.A@BRAor>sg^/2Xh:YAPI<La:ieCPA(u1pc3FNZZc:nXNOR1Jb%Db=RI_+]0G@O!3?&OCMFd\.4FOH@KShFU;$lmU"TOck`\7g.FWY>.?k;j)b&K9UO&7%e*tI&+t*mdla)'Ef8nR4^Bq11IV1Ocaf_%_:Z:h4*'5l_H+<an::AFQq0polF3=?oE<n&dmZY3=-I0?_*kj;)\qT`',Tote1?LiZffE1g6bF!X2:Xe(I2-FR@IZTUc24o,WADm%82P6tm%"8hHogkidu_EKac7%;L`q@3WVEH;mLcgQ:8e0ol[3md;@k]07qPV[,,@Y>BkJRU_0rpOO<T(nD7,maPWhsr5q!-fs'ZMK%=X6k;+K5(Q1E3E-V(XFs;)fSJb;T(A$H+UZlW$;KZJI`W,R!KK+rP\5HeT.h$L1LZ8'J9+7mF@X*e-HPk>0<shh-3=].PhZ#*!B/%<p?p/3?boY3jf#I@lf#KF^S5)Le0:uk=d=l'P*0X`gpAG7pKHCf)iRelD1=*qT1O5Xs!3dpSL)DPj-KD%-e2V?Zpm;k0I>,3F\kJ%T26^F@6+o2-,V1Ki>Z)4SH<$rEEQO&76,-7r"Jn=UODZsXQSUI^o!<IVBp4m@hD$_<;+S/6.4f-V!f^n8M5n06'C0Bc(.kMfc4hE%^9uQnp6RTDdn.gM-m<""4N";Vm08`:Y*P'Z^h-Y]-qhs2'lZsR*&_Y4#S_Rf++Nm!UUd!Ir*Sm:5.+C-3Jb)<\5F9Yjp8_SdYAki%JjCrVB*jcFTlou=:+/'`4]g/HG7]PGKmeX_p#G:A@+]dm<285gLTVt+I)91;`]W/mbK^ns3b&_p6%X*rms)nK@(fo('3>LQ6g"@-%6mpDtOW`CfM]Zi4#K^,OmGEa467RQkoJKqt"[JO@$g$dc,:"&t*o*O&(@=317(.-ij?S,C.RA=J5eMm$8R\@pjsmZpi/D*B!?1ac%8XIBoT]0U-38Pc>=ojBGHUd&/C.#!2W"aJ-k@^/fPbbfhfR2I30`iGY#k>aq).8%A%s;"^_>qe\3n3A3^VZsr1(4I-pE3AsU57Y&%Xuqj*ka(o[`iP%A?#DD[\Sncl",5u+Z4m@8aQ6j1n)6rhPk;-=^f<fh@qPD5aN\I%q!1jJ6B:Vb8c\hO_`+re,c\MT=*I!2X>j+G%Z9e0SE'+[jRUf0RpEaa.l-G.JpN'\1D(5NsS@/*u;PO$]C+3^_#El/C=u^=8U4_(AIJH/(5d#/JF#XfKc*!Hqh??@<30F$s$J_84%1_<Z"?eU,O2)FMY!]6_3OOQ:@_m)4Rd[Irb!6(VO/D@%`4"d12!tBD.E;DM:/,+RF0,$S^V3M3@;tH(QJjE\<46SbIh!d2?gGu.R%;\BC\]p\.pUR>35Y7n\Ara="RV\JuOD?#,*7J^q3)*!3q@g_,F'.1I:**eXcJJM]Ahp.3()>b8G"&=$!E#b\/R]_9jqTu1j@YYpX%m-2@@ijh,"NL.P'.o#*n:s,F;nkPSl!==j28;;9kaCN-XQJ$O>OG62=$ogF](^=1r"66K1V^*]l.CB?%,X+Ti=<3=d#1ZrZ-3kQp%0J'5:QG/!9i?JtYj/_SJ$OLNE:/C__Ur9j'P""kf98^!%MJ/A),"BX"A84iu=qZ^\]\eRs12N0,7ZMi"i0;,V,`G`$5uR<IS:It2%E+_1X8>(=0a"p)"8=JWOa=:ZNEo)44OZo=_!9As]\e[c4Q8C#H,?B&W&F_^0haDH-:bjUJL_4W^2jOh;dctCPM>a(F%@7&-DBOH;%+Es:fOsFGbj]*Yr8bWNJ\-ro!i7S-BFn=@#BilRfj\L^qHjuY-X;f]r_"fl"&>=NnFNi]4cEG*F'MVX$X^d9mN/?e!Z1$k8"WAM^%;KunQE8+XcP^E6RXCoHd+U+?83eMti-llV>"L;<qT=u0k#pgUVP+M^eQ@OOdJgM<[1j4eegq73_DpiJtg3ZEX0BQAX@n,nYF?'44%-*jA9n'eP%",NtiL$Fn'Z#q5#"^2F`&M1kuaKqf]\3U<jagoAlp._Mg+,GpCc`$"orZd1F1<eB>B2I+EP/N4'QEc%*Up965gm!s`%;$jc]Wf#so;!PQ?qOFbE\eS($..^YeEWc#^F8F0V1;jG7G-Q9A0RpUF[+Lld%WgaWM8_D-!melB*3h<n,Jg83PP\r,h^>5r<_0UD%q!uce-5,W\i#T^.9iDLh(]k#e>hG,Ya8K.N="N,F`fi=/?jc'nFp.OjQ%mGQQIn@'\hoWumniM@'"Z>9W4mo]ChcnK+o`fkl4HQ+%Icq+gA`QlF6T]C)b9oj7ZN#8f&p&ef$LZ4]%/`p)[*28U1d/G5+QaQ%Yc@Xj6r&B*<2^SC_5=gr#HVRG4I"[B;2BaS>UHPKgl3#Y%8;sfb/P'N4/A^=fm+<JH\RC;>1,O,b=p?8dnrW%W</]R2L-ss`:kp,Z>1f"k<IhF-9W9JbK$ta0l?)HNoj;\<CA(_PB'O6t`SrsV%EA?T<nf0r/8qs(%@HC_$\jSi_Wn?KW*-T*W;V5Ij*c%Ouc!juC@&Zkm:r&3,9JF;G]Ksan&3if]C4r+=]1iVI`/R@NVMSD\-)UaH%8A)50B#>;OaP+Kn57_dS+DD4?&^G0WdBAjE!\tk:'?BmT?ooL_9D/EX$k'Y)I'LoT.Y8!uM9jpX8hk?kLYtRt@F@bMRMO6q0*u?6%%Q<Fq_KZ&X[7Kia#I[!+]DS8SpIp?R8]EbYX&h\YjN186H+J$,;LjqqPbcJjFl($!'N$TbiKAM@*2-F8(SKqe<D/M0KeCbT&'O?$%c@%5^:Ml%rUAPW]$t42mB<pOe!gr=rHImrV9aT#Mojq3.MK[=refOc01)\[::J+'o$Yug6h.td?dS:$Qh/o.1'Z/40(+^_Rn\qGG%M'ne,)3X\c7LsY!:dZ90H?/73E.--pAet8?SUbVa2Ot6ji"bE(G\CmZhNjoB$TVde>JiBT.J+`b-GcY_7b`X$?qrIiQ1/Au,E`,a%P^#jPdBR8B*Eh?p:h/+[U.IsPN%pP`1(t-L#q_9WABh5%nk`1`&V_?#G`X@tGh>B1/q]uHS.B3IMq%##F"qrd33rB"'ju4Y6m+iC%9&+q;1U.jfhamVHVT,,M743^*7>Z>d;&h*[]ncZX;@QacOHK]b,ZuF/QSo&IUSUQf@+LI3Z2"*f3Cn+m3,/[)\kQ@62"94c[jhiW%8I(ag-V:7h@$?=3.%_e3@0(F@R0_qrV8Wh#GY\jK"oLA#Arn(JVn*/8Qn8W8",U+@dm8qInkrRH%;eXrZr7U>mAugcb29YL%u3-n%J\/s;:t2NI!Org27>Tk%aX4hBLE4CQ:jIkM"]Ithr)>!&@A2/Ei.>pm@ZNB29!iRfr1Pk4![RB^1G$Z[<Y%lDQ\qLcOiH<L<do8o%q%RmH7VX!!U,L%Q7"LK,H\0r(__TdHB'iU%28^SBSa!L_B6)27'1$[3I;^kk6%FsI8E'-3b?2P,KW"#fTSEL\,3=b'c:+`?!g`UY%;#T>r-!kcDOSS'%J(")8PS]D)7m""FAEFunar&R*G0ej49KWGfQbZ/&K^]kqL"1Gg=E!t&LPio'PEp14iZ!jJ*i^SZ67UOi4os>%%\jC.r!53qOeELN6O6sW<PH=A''E<BDB;X(q1Ror^j^U3p']CA6FJW\7^i=hjTR*S0Xhs*23)W,ICI=/(;ilt7(Si#/LI(oR'UFSZ%@#?G&/]g<'4%^EP3EIS)5e^VH3gXeN&rX`c!>,[`bW5rCQ@6*;9X8E)<-2LZN9VR7#_aNk3qukg8!1'k$6B9N[&;?>Bsj^%#q6HP%SdCu5,^OoE&@K99GR@J`=t1jep!&t^UGj9*,j4SFNQ-;l?64W(bTh#a,*3;].#GeI9bjrX6I9B7l8uNbKEF\#,V2[L@I2%PpGRff%b]PdR$5A-ro6;*-F!)&DqV`;:PQ^f34r/')dJa7W<H*+p1Qga6&\GN!3Zg'=1ZA`m$0B1DKJl,hKHsI`"j4q^VW6<F+DD&ua:P`>%?FQ^JJqRns;LqA>";A<KIkm1<OH,H;EYBmEWs]Q$3-hMD,j3kbMTd;f$MS1LJpb#R?chQ>E76AXaJ"7^P^)o!L>4,;h3e-ed0Sb"%WCIOS9428gKH)&gdL=9NHb(]pF!<DGqp&4CWbkI@83=ZaTk[>o8kA]Lrb!X\%Q2HbEk'L!7`Ebc<Ucha%l?SgE+hq+(q%8f4`Y]q%1PV?KBAj:RJKLdN\1(-5>ht$#AVQYkk&lNbX0^,aDJt;EI)s't!2X+O9?AWX-lka3*H4/eWmPr/_</s9n4%Rm^8;W*b4qDnYqe^\%N8kbO`&JO-c-aHDYF_8uMsYVN),Vs9h2U[a*Ufm5h5#TG"jl$8"Ql,#!imGhGRc#I/,-Yf#$l$N!$3_;Vd@&uZgUN(.khJNa,js7%4#S]"*m*HDAY65u$5-aVkI73Gd(-&thC.*95^bYXU^LFnG!IA`GB`8ZG:crlf3@d7inUM"Y49qM1C$MZ\Zrd[JWe*_KiAi/:ej\r%R^TuLFZm`FOKWiIWf0pEjr6l*?-"_(L@;iMY9>jfSYU/(27?Y,qKkiVk6'EK"h]_k8LVsuB-bMjetiP<&]lh[If^7MFM)#);P!Ej%?r_A%!`J[VEN;J7+fR4*I*Xb,4HGVe1pkdk6O>;hBK>cZ)/_@?T\"aE'(?@+A7)3u$Q_E)9o%s62&rBB5DAR0QJ/`XMPhf)4gC"r%7NG#p;&W.Ds/MpY<^Q)`7X8#H<>H;ZGPRa@Y4IGoN'Wal+I/BG'Yk;a7F3<9A)oGUQ7rd>g+^am>q"6@XP$Z:XKpUhj7MD\8@B61%/GPMc@#STe$U^QVCMepeaZbrjCGmi<8%;C=:3B2Sp.*60#8Qn^:fNj8:<.rDJZ]Q$'rl"dD*q6iPXr=B,(.\\F$$(^$31WrZ\`um%8/UR9Vn6S<`l/<h+Cr2;m8P\YKOjV)H'h6h,+^r[-sA*7!d-ODAuG5B;VTg+9A]FGb>EemYKN?BYtRrE"\si7,An,!M/p#M0_Q&n%-eQdAPlaQh-f;tNT=uWtVha]S9+*"Md!/+MF#?(c#P2);_)4N0c;WRa,mrCtQbS0=^;WprEeU)iSB4B<?j7H1iTeB2Z>+d50>Zo^%Xu8c9[#mFnn75^L88)<P@i"%olaU9]h-f95U8X>Y9d4m*BIfnR!i^505b-!X4EAI^P,P)r.6q;g5Uot0dq]I.!\<q)Ne&_s1S9GK%;D"@caW^8G=;4>9*Hi5/2Hl?@N=@P1:)8*q2k.l_ORl>;hr=dBeYHSZ>=']H`NhsE`gZIiPlr6qa9?mncL8.]Q5tmd;:)fu`6*]d%i0%-;Cm*)Qn\.OML#l-eBcC,Y=RjWeiUkn-Oi1YQ-:Xu*i"4!"Ka&"D//N9rl%^^s$1'jOEupp_.7p2p"0APVLo,@W@F1M5#\j>M%L?jTr;?37*Rj%QWfSB0u#p=s8^KK,q0o"$4%(@RE5rTN)B!7K"HiRU4aOJ$MPh(l-/@>kc:N"sg_\?qkNsC;tV"-"H=-WdE<&H(f%Y_sdS,K-ELhTt+o';e5YGoR=HPMa_/Yph7CkYp%9&!;5ng;(L8pO;;K)*+S7iG]53Y7F*P%o:ZoicIkfk<dW?.9fHC\4?1+n1Z.H%i)GS!+"Bj7A;b5pZ;UdV$1Qr?b!`PJ<&UjANNj!b%\i@YOU4SW3;;5W6-1j"9.A%a>^CCr18>t'#RsTg[07g,iBHGD7FS!i)%?9G%HVd!o;PL7b"*Qn/]&'OW2p&2&F4VO2e;FN#g=8\apm@!rS_BAUl+$*M9epuLH,TNCQUD2!3HMCaAh^KcXqDW7a"Y&W$rLkU/8*$W%$6N/4Xp"Z\(GI)F'$GSX/C**%HN.,W$^p@dBB88tOl8$gZ`n-E>ljXiGH3QsfVE-rJ,qQO%,[l0'0NhQaE0,'!@8;90Y)`LWa:X=%Pt^6O5i-gN>t=1g<$Dbu/ZOD$87d$Eg/#b_4U@SN^c-%_KXM5KWE1.*G#Q[p1-n6i?Z&9O7(LB/a<3,,G&+FX*iMUAFW-roY+a)>%i_Bd[EdWKf4<q0MC\?II3.cP(7"(I\ke!>UFVWf1S'pQ231&>mf$NB=7"?O3I84I%fYap(alH;UTI?1fKld!68siISS?,TtO4`dW%M#H*Q&-n"(hV1OYf&PTd;DqnAO!Icbp7on76)apmVl,[iPt\+=knF@F)/BaSGc46-6Gi!'eB8h55]UfWEhuV7b*VJ,,h&bDD?t7D%]DQ3DTa+Jpm2k#B!#I<Z@>&T_ZQTCoD1SJ4.FQoZ3*M#'1!tf(!TFG[Ma.HKQrSd9"HrAd0MZ3NYr"J_lkL0SlI]=+0;nG(pj7'F%B:-`E>HS1/Vl!;Xjm;k/-^JnQZ,VhtLXmbD(hZ,1$=0e#"_();.=JT<&P@$kMHRLF@=qh&6Oo=P$qnc6=NiR!:6Hq7o,,FkQ,WVc%W/MIsJ3kIs,BK?!Ks9e##"op,_AQ62RPX-$)\rX:'KcPlZ9&ciM5`jE-[uC:U'IKYU@U^B%[I'5"!(,`D(t)jK839_O\U7.#aka;%LM+FM8!=f3*mH?/SIS4%Q]Z!g3^<.1,&/[MK`i;.D]q2$cN<YI\RlCf,JiV$fQ\"Ns-YJ47e:J5\58ooOSif=2OD8:nO`7bR4PEI%n?#_,ka9HEeKmAH]L<IZl>N*<9U<hpa2jKaY(kG>lAVHp"_'*s!#>*EY_.j+>KeVJSIP!TH$UCiA5W-\R7'U?,US2W+jX+S48Mu8%H'UF1Dju?%8gNj8F(2j;9.Co'SZ?M_1>%mBb/7Pt>UI'mLg2NPfOp:dRH/PSmV=9C[+6pB,%(f#$4h<BCbSQ(FGo+'lj.;Tk)P&6%5*^W=q8e=ZWZ*1G\0Tl3\3QQsbq&eh""d]$CG"l`86PQ>I5>%r(5^+T03<`n>AtAJcUL9u>;0\E/+VT)%;5C=+nIq96!UDAE&Uba%?'ONmbWd"=UjIm;ctd0C3#RYrF83b0n?1um`9-Ybnn0!^'!FjEeC3RYS3bj8MDjUs6S_rAr$0u,eL'kdF,[`[)&4T;:"a77Nbr^6%NGj+9Q/:f%f84Wg;j[&;RHt5<h9-s?lqd08?Au%D`($'^+W$K\BibbT^^pPQ9I144.nG$]/9+c1B<6C&&hcjQnl(N"DLZtd(\?O7%;K/UIrl3*>4]VNuPD9`:ImL(&:h`@2OI:oH@qH[1Sh;h.79QuQ?tY!LNk.QP/%YjVS;HI%kj4\K*k!>)9Z<O9rsf,C]EL&u*<P:b%<)cj+'.pU<'=IoaY]b8aK#]SG_)4Uil-P/k<ZqScA;32j<0E%A&m$0T6tTWS)(B3oi6m-mX8l@,(F%*O1WU22rAdoo+',:XV7^7A%LW]:n]^b>'5O=H^_dLX4f%W]2Bj7)1&m["L['8DKLI>SuKIROcPcGaB6uq;G!o-#-,S,@p"hS$;CLTUX7Ylq>%et#NAJN2F3L-bD%-pj.m5Y<i'!HO3kThL`qX^e\M9!'iRR#fIE7:nQ`:p_pJN_t1?L^*;B_m's*,iP?<+Me%ko;,*8$@?A%DI&hg-"lnF$uOudY8f$D%LXkcGD<_N9&Tg:]c-&+\33u_eXhko&85X$+.&%(k5t$LP3s7bc,RoThPuHF.?\bV>S^h%ekp!cqID0;qSYmiWY]c"J,?7u%F9/X?%&>hTmWm\;[rIS_o5'g9C4)_3ul&mS*:qI@q[QH[4R65hQOsXGh$Z(tBs*uqD70-VW`c\+@o!d=Gi=Kh:,V0Q"Zrf.!rs,9,FBapk%/ho1D]dLFLL:RqokXiA8XI-"j_,6>"6.3Da=`_oTj%QL"8[0[<c,6Q]9E\Y1/m5hfMG(B!Z8cJ>9KbOLE9rPakFoqpLS7'Z;22W"%8ODPm/+RaB7Q_FFd0>F=jR[+7Z:'5dbl^AfEtAsF!JbTV8H,e*rDCP.M:?#"[Nr.8K'TuOmeJpJ`%q2f(d9j!a6+Vo2&rNo)cZ=%%KLE(Xk\>'$UL56KC6KG"E5ZEik2*7tSG252A>N/p!3KJ!JJ&:NOA^9<h^js(p+2su7@57AEP`Gi@4BbrbQ\?aj*\cUGq,9?.,A7*%]H$J8X8>8h)a(HfJLE9:L+`tC[YM2D+pCC,N`>XB9$ng\WEP9dK,m'"$6AflV(.Km*/?&CR2:aN_oUfp+`GAp*R)741EmS7/TED3%+K3rOo%]a2,&rZoGYHU_d.NtbGJSO$.G-d&!5%qYjVbZ>j9X!hhl$TS/YS8f56EtP_BiS_e[V/j7j9c?q[mfK]Uq+<Fi)^NYa5oA%'bs5''l;m!D(R6]Yd$_tjADE7Jto'(<j$`t$#GG>p]X8'FNLPg?6l61cD'kFP3V.mCL^pJ3=J`"O$;`8;Z];c4L`g='fMe@9q*Cq%OeJ-a?%.*n2T'"o*JL=9<rXJ);GXecLR1W\J]c3KpE]N6V1eId=aTHo&2L;dY,Z_^PG%J+]\Om)9`^9ur<J`j0NG$aL+B$4V+'a]%MNnFg)+orO&)Tlc%PK.s7#ot-0.1d()<rbj(i%oK]9fVqa@#>c28\fZKuE4@7iZ/oLR_LpdW?gR+@8Xts'3,FV&2nAJ=.30OLR3d%P=-L#iabipiZ*::!C3)W`ANiW-HX3GKp>REZ`eYO6+e0s2DdX[p;N1^!bG@sRI'4fl%D2WCp&OeNg2ANSq?2tnsn,88N@A_Z0up,%7G!rFN=.ImO]AiiN4nLE3lH<]?""3dbn_H%9F4(TBBieN8QNsmot2+U1e=G.VJj,s>mGm\9rS+]V19DN$@62t\n,@dhcUB9VX`rF%=="1d-&=>'T]CXY=%fA"_2;/hk0VbS'ph'NP]._*M/C(CeV[_9#LMVfJDn=I<lZIUVM3E,#fX-GajXpj-<.#&)`s7OZ,DXFQ,fMT%V^3glPfo$k^PSpfj0I%7.%bOb,uDae65n]gNp+<A%=o/)!.Zdk/oT9mbic(d->5-::ZR*QKc6?oE4X"^%ldU&;'Q)'i\Qu_7OJ_F%0R%JFdTH%H<([q9GK`e(`#**HE'Z_S-GbE`2#u6$H?qk7P&-9o'f6[j1@K]`(P7>U+s\'Ff;t1s2De-..AC/Lo,[SIJ7loI,1<cr%H>lOb=#3p5<Tkk5:!([+LcCcgd[Y2H,[VPTM3A1sG;N>L/!JOeUl^jC_Z1*.^U/'-+:,l5p9'^dHV@[1&s$Z/%*V@"+I&B6(MRJo%<>eS6V1Q`QP!D8r,6B&q.A<78A=]9rB-38Aie`$9N&dofW`L,1m^"B8\9!pY].45'WD"o;F]Q[$;7l1GkL)J%\&_11[UnS7p.-CH%,mi-MmX0_`7*`J`FEl@C-M"For=?C(OAV3rMVAE\jJ^J-Ve94a-%6RsTaX9cktXt\ae<6phc#e%2%YNG+]H-j&el3V;8e!rOjbPY%@U,l]LsMV<6nKY\"]@\#!;0bqJZ#eA[0m4"EkTn$^aH/siBor435:ZTMnZ(bNa3([Y4+!pC.PmhCc15%-tZB$dmk35lu$)^HC83!%deG*1/64,n8?/iT-'-]:M=Kn>m!e&`UG26Y-lt9jMu??K5PErU\W5]@)nlC1_ti<ua^J"OHdsPB6\K90kCo5KnrCGOQr$$J,[u^d%0*k19YPtS-T'SKt!3qUuS)bI5G^'kWe[9#NqBUhh0njsIn`qgOD[N^.W?gu^Md;pA\0.):7HL=I:PU'RS?Tj6(bAu6Xd!kG^?q`*%)kU+k94B'(H6.Y^OKdu7c$8<+&fX&9Q,;e1E_$M,I"I3Dj>"b'k2L\"0>]I>9X%b6U9^8W_,E3U['<120Y#n;&VGP&:fi>a9/T^Q%PE^i3*LcemOP?PSHrh+_ns\bJ$,D,C5)O+HjcBO%CI^U)j^L>`Dl=HWMaTY*o8,W9&sg?k*k[k%bf\%Xs,=B$jU74SA:RoRYtgZA%miSJ$BEJ2+)U+nCj'Is/8]n0@7-$hq;+<,C_(:/TF/\(%qa)aJhe>Een9dj[N?c4K(O]-lKoG"1;7/iAKS+D-EYN(qfEMe<!lgLu%p8&<o;]H`K/a(noVHDdfbt]F^F&?FL(]kt_a-9rhK1'E4)-Ho>A!NfUK7Fo__9B].T^Yd$Uh<;]1G4hjXeb#':@jEI@s0h;M&%P?%4,[E]!4t+].\]Q3<Yg(GXI_g,89oe2VA"6[.*r9Sep4&B1<W4=Ar=AJTu88*!b<l[UEXEt&jM`5?P,./R1FNpKCaX6RB.SEQ/g'i%i[^t2*9kE)RY1'd\.J.AeAih/4eTRsPqA.0En1`\4_;7n'N\4p1+'1n186=q"RqK^N4E4nHkCgklq`f<=>Z2^C&/+])riS2KUtT>%J`0>&7tN!\#t@NRd7!%<7F!=PFoGoKn-b,2VX;NLk=IH0-P^kQCig03'i?EYl[e@RE@fb<Q[]E7Y0IZT:HiHZK=J2k>OREk+9uF'%Q1Nq`[HA5NLbH0X#+8?(aU)K2[oLs5)$oq)d\pGP$?Ac&QKKAE8j"SHT-T8)&aV*Q$%$V266HtU+\qQBP*O9?X;l^VgRE(lG&jn^%KStb+@CGD'36V)'f(<I\`sP7Q$^ZUd>,fcd.S5m5>rFmG&<&5!+oEjH%0g;VToDZ>YfA+Vio"?&K+WpV?E<33#cL3*X>s&GAi*9F%e.fJ>R$ELaUtCH?="G^4"T\i?O"!M80ff<25d52gWPZ\2WC^c6g9"P0R\S54P*_Q3.`)Nk-HSO!(@#Ji)k6me8Hq(?FUK+#&^%[_%n6/g%%aJ#W^IVr`]3KW.;'[(S!LS)lL/UXQ$.6gkTJtrCR-#N%adX[M#Su.)mSsfOQe[Ec1!g1m,@NTgW'E8'ni>3#;fjs@5K6k%%U+]%_"W=L'/1>6G0@bS**#RrT+H>Y.+rZ8CZrp62X0P%;%$sTKO[)>p'HF6T"E@=7E16)kKQJ`.UWL\qX5Zt!2Ml;Pn"s3\-bZ&6%1#Co#HfX[NVO54o0hI#_9f`^a(Z]XXP_uG;T4857+_i%F,<Q&JGbGHr%96Yf<FLSd7Cg2p!Y$m2EuZ7]$I>6cdkpF,-nUH4B&omb%$Je'ofh"?-;Qka3&c3&(&ZN$mVdOt6:&7FD.k-LnV`DoFW'"1rf-m;]"0j8gP%D33oU+bG#Bp?]$rJGaJLPu!2M-abP!?oG,;f.I%A/nPu+;8tMk6,k#C#KR$B(5slhF&qHU68DJ)2Kh0OO_u6:1`Ej`P)K3W_J[7fH/7u9*TZ85anbVdOo-D`Gk%N^"MI>VkQ)0^m3.s%lPL?9;F4KA?jE+i1th?S`0AAbaj*hZ1^RKRp`Xs'`[HJDe#FPgcp._GcN,u)l,iX(NrW$;A@bR,UJ^0T78A$d9I.Y__ne+/DF+)q%;mEj3[(pU#/.I$_92d$]2GNPYMrLBWpHiSW6R;aO>cCiS"?A>r)c(a&Y'N"`;$BojH&Vl36cL>T#SH:KL;67^r8g2F`$r;eQ*7&7%+=D7Y[eDf(bTdc:6Kb1\j9=Vm/PRE!(]o=3$eu'7WHoUCR.);,nO2JpBVo`l&li,@6rGjA0sRmtq&Cc9eS4<%j$[GorP1XV,,96r%bi*)KIZ.#NQ[>Y.65Gaj1S4OqTEtQG$Bf/Md07FRI1er#+s=1[aI.Y:0^bBsR5eE4?e!4.S1(=5.%9(#`h<2iB=Wpe6d1VId9IV[%iu]Q@44GG1WJG\((8OL@$CdslSC:BS=Z7_(JEA+TQ,E"B$1)af*35Y4;S,i7!$DK)@1P2i04h=8THXdj9q,Z4X_VugPsQ$M"Z@OC%9V>@[PiiTCSefkfS"77WP@e.]"+o\#'jHJ9nXR$0"?[&.ZInK6((Od^+O7MFnVOGiNae3F7n^@2$?OARRMsU#gU0U:\cD,DamHDO%*``q1Eede>-Qjp7o2at7_(nP1k"!Ps9XdSC5L*3"-@dfb4iBpE>r`Gs>`Ns=//Do-p@&9,\g9kd>nO/]?_buVKuLb./2jd>ekiWn%0Lj08#)Z,5Ci9m;>XqT6*$Z_PB]AbD6u9_dQaRV?S"s:YCE2lK.J^7R&]k:g)c`^C%@^<RnK8;GF@nh3GY?#mAf-n5<sF@Q";*Kq%-u=@W8M1?Sii)BVYh)liSi-EM\i]DIJV$VY+LZt*"In\lefZo)@:5kmN'UiAog9Q!G1:c_2$E96W2[k>=`^gTia3A_+="X[nCIeC%6uh]#IiSXV(TE7Fb()K":Dj"Pe@8sT^F"@nE@2M"3oQMJd'"nJPnWq$f&cs`../uO]Q+3AP_^LDgF'KN!I[\Ad-NOnnhnH>pppr_%c'?jXST1j4Cmkl"^#i[I%J-#[Xj)sZe-*[\!:cLA`3D]Ti,qq^5f:2\UJo6O`k*RgY:)5Y_8!;M2nBmo3\*,$JR.H=O^S@A2&3D'%)@+7u.Y5lcbt7tAe'1"sCmdi5f6:7l"g/`qAiOc7UdJJH)U((Eg'm)3Tn=)HK0aj?d.D)X`(YGdipp**CQ=,A'%,$VSL"=<?i[\h%C)esUl`SC7\'*^3=kHLO7r@J@Ua9!Z#j-Y\;C2N#6a3]W[iu"q1-u*,$\5@YC#4*M[;K.qGR`68B(a%CeX@$l8?4UECDm>BmM[g^%>Er[:#&2>]AO06"fW<8M,6ZqD6joWo</X%GF86(BVH-6'U52TTKX>nR4$/+UP*.P6q%k/W1I8lIl\O,X<W*)q2<i?oWsqI4dWX:+%3!*8B/O"&sel63J*WqukQapLVgPBJo</-6/fP.'N7"8'9\Ohu'7mLja1<^0rXL\$pY2`_q+W]OCS&2NORPeg^!R-uf16SZsJ?l',%K"_@1CM6Y$A)/Vde-6b*,-oB*.+VqP.%8Q.)DcL_!Tb0/b#GfPN&:rN:">(<//45fXf0-G"L'3^Q^p.PYHCId;[gC/135HnDFC\R%>(F`1X&FY0V;Tmi1-K)J-]PuBltSlB@(R&EWsNc5au9aMeHlF?!*:PeIPp%u+oih7YU@O%,H7sU>E*Zp5cs1Y7SX[=5c`QciAAB7%9W)$AV*M+/M`YjW&[@dp5TIfT^hSc&Z886*0u^IZ_Gs*:Foea,WhIM\W[[0eBk4)l<Kg?*3lID0IR],.;W^6<WejQ&Nt+5_\&F1G%$<58Vh^mrJ6[Um-L<UGh9Ju'U]LG/c-3p9@"=Zl!a_QiU4^qCf4JrKWd"l"?L/>Q,%)R`K;;63WF0bFo:JGOW<Eu9r7m]KR+/Yc2%diHc)EWi9Eie_)BZbOq(c57?FL!ss.VC#;uO^\>b9j_B^%sZQ.UMicjYghb2i#MnDB-oM+)_rg!C;d8`;Nn;<9;2EL3f3oJJCNY3%j62R:O#j8WDW'!nV%K;f"Q$'odtU;^'["UlW/3cCXW^OT5r.g4+DQd58;d/c0b-$>[ZCTGH6s%Ke4=g@&F'BS,VZ/qP#.`-#jR'u%<'[*'M!M-%dVL.%>3TqCTB<Kj`hcZ0C!m(%>GLE2N9Ar+p'lD<\s3+$4\b,PSE(4AknMZJ2$-Pe&U,H)>SFq&6j)1,M$_;cCm`\1%38t[/RYMIi,p%lkKJ4[E#Qs!Aq.7+k^mgA"RK_JgF?hH#d&&&)?N;uY%PRpD<NPG8CNbB"-I4ckciRoBC+-Ol9a;f%O#YSh!@>OL%VXgHUY8;q]k'Ed@Cg\[?T!D(\]I*D);M<@=VWf\G3%\9lFuXDgi(K9U-Z_&._Fr?iDOO*)FD8mSpV?Uf*-Y&L"D2bA;Tik&dTQNS%TM;LtHF^UI>&E9tTd:.[?tiZgdYo]IOfTq/dZaOlej-&hqfKiBT%"?`OOB=RHe/h*-\:TQ!Mq00@qRc8'!0kLQo&*"P/*kqdZI2*%9!GoQ2b%f@N_%T`mEZE#/jRjKk(4M3FAm\3)N8c:k9!Nr=bW7eV!0632N67tf8so<OQNGTk="\7:#]d:nY=W0BCO;OEl;V_BHrJo%d7+7^FAq3&+JIIXkfQTW4si/"g/BI=)fG:AQslbL#1R=)\X`_[``='6UDl;NisLmqUb$LR)%`Pj[RDZ(ZpgE]$PIG*Ls^fC&H.P)%4`T7kW9]8e'4W_:`.pZKmuXkMEJtVgRR"@CMB+FH8bU5oi%@l6$4gR$d2j^c,@E>Wg?bX9??B[s<<A3Ed',AMXObdn.Hb:E1pg`q%">)VBY\;/i(Z^ko/=M59;-X):4Y``o_AE=j'JABZ+0hOBUK^>%S?N]r.]4GIP8jXa0OFp>p'Nff371]BSt`=q-CWSQ";2.ld1e"G%nQQ!M%UNGf^ka<sDMaGp+JM"Kc2f*BCMdD\LaE1]aWj!V=)T5>Tuf6c&P'W6\4J8T,<.MOL(Z;AcmbIe?=g4.m`0"D\ZXMVToB=g%BF9FNZsb(Eo+\/LAk<&_AKmC+`I/FW#K^AIkm>oS7TejS$Qr9>.0+qjT`GKp^"8nkb@G.:pZc?]kg5Pm!"mpog'0fUMF(fR"[$J@%P@/WT+?^BI&.`p%K4YiC%)`Rm!+:p-@DmeiM2DP/RMsBN#JD9Z6f]R0UaUHi*4/]$WA>GL#KLhA*oN\O.Zfi$7Q>'BW-kHN%[rt&%Qq"kWdqVOHXoT$$M&^IF<+jn@N")l0opf`brAkoTm4a(kZ1kQRqbT+_r`p7aGa]5oMhIcB)DhU^H6DF.8XI>VJg>mc)DjfCE;g'g%TK/$q>rFs#B'>h\i7;tJ.T$?l=OEdeIFR!tktk^&dau:-3D>.#EYT"O,?/EY1Dhr5iY4M%#)At0HHsS7(c9:219@L-5u[E8TG!8m%clC4]:qm>Am23C#;[O3IReEO"gQ#[g*6dcmN!2oY7QN4SBYcojD&j#<3A$h5=O7b),X+S'6$%-%>G"D>BVGj2,f$'5d#=ZW'b$N;%]Zir'BRZ("97R5k'J_'R)Dk=Dp:c7c9nQorAq30GE&K)a)&tKR+gKpF5_J3f\N!*RhimG"I"D\19h#GD1EGDHa`,7#>bFBl,gi^u%##4d^UmC&""l0g>PnaXp+"CtoJu3.K>K;;4^p=4R1`P6&p^8?\)@"6.XW]u/rXU(Q!'sPGG)"<G%Q*51.WdRVTZJB-oaMW?\nXNW%6\4C(QQVP+%0W+LE-$%P0VF7F(n:p69s6uSM)GKM1>4&EENmU'7R7N"!<+cUmhQbe!WSQXm+&-[:8ph.58aGXV7>[K=)7TW/P$)5%Jd[al9b:A@r0`IgB6h@uT8=C!Z'd0Ue;>)r"o4R%Hn,1+J=dk&,WJB?d_[bi3!JlZg`oDg-&2=K88gePN,g4#7T<4.*^L;[?j,WY%,P!Wf-.Q.LT:%sp>6+TF"<^/Qn2"!''a_\%gchLd"8J94;Wi''IO9+lMa%FDbfL9`Wt4-$)NUWT%`$D\5J_oo5^oT+"9I]fnh\UQ%A5s,dcV,o/OsHn2=#?'Td*J6-^s^.,rQNq?"r]&p5g]]Y5X.%n$7680cQ%B`Yt5<$b[lACGn/KQF?rKG`eaRE!NG]c?pF7(8Pq%H%::U.Af&30'Ulc"=$NFpnX$D.]6<"M/"+MYl7!U9W1D;b>"Q7U"O`F>%qD4W""Q)6?cP*9i5_!AZ'6CSorL"BF%LW=61JsmVK,"9P%.=r`ti'.U7,Bae$RG3mH<Pa/3JeVo9nXmAM$-+Uts&g$97>+]4Ub^u*)ud1.pWH`4;GqakhXeO4An;-jc%c8BU"RRu)#fqu\)gF7%r%h8^q[`2B9NBtP'%:-K=B7e=jt@'Z_1;M9U$uBO7Fa4cc9+O`Q\^(n\Z_\kZU?5"mgB(g1F>tPJ:A>%L?<m/d6_BgOAsp<E8dbi%)rR@-\<.N$"7XX^Wg"q.ZPZ.uR*hPZR*ku^@@uo('F>64cRf*QB,euCh6!3?3l4+F+s=Fo."jtAO(<VnqD2Wa3VDhZqD4UgV0moi%5LV5pMl!+3]7_B<"8Xf$9Q?R3d%@l0T7dJ!qD1e7%"^^<5;SS$5G14KAP+cTo;;G(RK9\N#snQ@IjQ81,guenfeLVQ(XRe^7sKNB%kVg:B1Gs/a::?WX,0^/g9GE=Q+5riKR]Bm`#[YoSPmRs!=X`Y.)W77PP>Z9*nB^0a'PiDs5Ee#:i-Yb.baqAN:'12HTbK2m"L'[:%3k3!7s-YEiif[:cJNHHcPbLD*LbtY'r0`A)>,_4>+bDuE..hS@F.fuKpK=%>#5k"-K^_rA!2_X+kH&6s%J?,sdjDJIZOMgbAu?4E%RK]Ub`@aHX75CJEo%=9njRZ&EaQKRi\j8=iA<UPA%>`=VBd/3n,p;:RpPduSfX&s.lFCF73sF+i@7^1#=p'(_`+t'LA?R9sSlm':%c8-'.*8LVd9Ws:7;dl8sD,,idb&a+q[uVZX"XUL*nP"0Z;@?;ESdD,Z^aBA?B*S*i@Uin`$5;(;VteQV.:V9:mn>Q%Kg9i/!Xc9?%iLVU6^je7Yk;(::F6o>@3#$Pf!SWqI*2#574(f9s%+psVTT!Lm@-<,/46&@8C)R1T"4fK-r%1a9#mlj&!(Kdt-7TE^qrI!!Y3H?b%k=uTSf8/X\+lOrE1Ke7b<gUZa(n1+'kKK'Y>g,piSB9_Ab.E6ce%B_;^(JPV900O?6TJd)q#\[+]#,CE,EO_UM3oN,S8"#ZkQAhm%#V;\\.*_gj1D"3E+,jdNE#tK'#\P['$O#Vo7hXaKN>7EIc%M'))8$=6>dUAYTe][`5od_1CXum8H`DpsB@+m;d?huoE&.T!,5[/k%7mudOi\jlVOc6Nh'faTkD5Jihp<NcIR?4EDC)B7+gS>TN?oF4cbe@kHCpr4G@e38m^h*Xg5lkE>g8\n'):=llOHBOo9F@Uf,*F(b%JaHX:cG5m*.XDLSD]F@m#-_]?P(:Dc"aVW1M%QZdekD=f(&(i\!73O(KFt;RDGdqe!7jj*gDPD>=O!Ysn;\?ZRem(&;8f,r\Q:o,%J844GrX*=M9-PPTObXCEB$TMAMK^Wu"!%_aO&4*6R%,V!:sHX%fNSTZAu5h>m/Y\\jW?2Y0mJo+-cHJtWd.Mag3rV*68c)hOKkoW%W+MoITECjU`F]t0%*Zr85cG&E5W,mm.VP5pL*NFXeLr=M1BB0"()`7'C#kF_#c-TcXT_V/*9sCI#L#0n2$2BkR[M%K:M./]&7X6B%QO:N;8BjO7$rR7Dk1ihr+!XT<NDbAX!7X]s:6:nEe4fG(`0H<Ic*JO.E=9-:=]Yi)Z_1/pED[TMo0?<KAhM<N4uNBu'8>Jb7\")1%H!kb536dK2ZScr5debJrQJ'H;dnC]]_MWlmbgC^!ql2X#[(MQ[4Q81rDAo9p!N;DA[0.=PZ`BQpnQA4nVB@Ypag9VqP-e<jOrbGn%HHM&kb]Y%>f)TMs3tFhI!2Q#3kmBnd&<jcJZ(0S`-V+?8RD10#A-\3.YuYVEGtBub-F![l8oq%`d@Od8.@Gq88O.!m7FYWGC$+Ip%05/Rad7bin`'MN>$jBG4]*JD]7?d^?G\3[)B*:8:6/"*0R1%<bJB^cVNR[8pb=DY_/WcA,.uu@1&X^+B>q*[&/d3-?$Hl,Y?u2p4%;44C?9[ugLp?H[/`M=gk=tM?-hZWqs0UW6:MkLo:ad`HL%1:5$BO9[82F-D@eQilMR@5#/Qo!Nl,8N(fG:5^4LF[>JT7S_8:*bfB%:4eI58Bb>O4iiIl1DG-"fKK?Vk(p7N&Vc]^cC+n+Z%nIg".8lcKK0f"EBf%/;r!Vu]IF+A7D3at1E`&0_@8s;Ar?@l$kWInF"K'4%,`?Yq&KKE=QRVN,n/2pe3=2htJ<rhXi[iLiGF=8MpnX>='Xkrg1LMS/@$BN5%%td8o.^Yp3GI=)i@W&m>Q\6>OupH`At=Jf<eXbT%W"O8+NbHTm!%C40@*8ikY^s2UBiS'oBRj8]!*0*L1(!Ns,C6oH"SG:=)1\%;/n#t/E0fbf.13`3!M)fgcIQBh8T*_&]0KMr^@A')%a>-1D<Q=Bm0pWbX1dEV$K\Ca0YhZP(bmk$&'MZe;Y5hZOoL62M!+2,p)?U8qie/>mmJpP'W@u'&Q&1$P)7VI!3>h_ri6$".(q)2R%Gd1OnKN>5Z"VVSR\H,D<aN=sXn,ZXZr%+!3S]rDjU]H-)ZfVq.`fL3O1R0O+!*49%GcLjh.Q']7/fBe:M:sr6+3;T`$,t7.5ZW&/%l"!1_*njP+AYKH6';1V]dr`&VBP#3'i&(VD14,Lc@LbsAE!A"PE?/5N"[JA!!3OIO?G=\bY.Q2E_Q*A,^m.KOR'`Zi@4Sh,\-dtl%9Zcj11`*sM,W7VN>.-sHo#Iu\#dDH>n="[@W64`N4/bVFAPS%]q^H#)2ap1?<3k-i@p2B%AdjI1acq%1O<,8a(mrHukA1,uAt:'q%),lr'1%O3(;ONN780BctA@?Re^9g3VF3d1C&X?M=N`mlOm7$OT!`>@7JkfI1i8HQ`A:RYAC^qm+X,tIdlG>D,'iN^5,G[*.-tjrX%<2L>N&H2m59_)/IS<X+QRAa#a(Qcd-Tl@9%5q95!X[pQTDX0,.4sCQ'$(F6Gi<l555J\j.+t@ZSR)peMZEoE5!*&)K&8&KUTJ@1U%(0V9B/YXrJ;*\^TH(9aI!\1Ne$1qcU,Fg#o)kJf^,]$ik<+a+99-=74fl7p8OJ#qE"#5i$f)_.>'D=0,JBF\%8dYh(Q,TTCFf5L0%A[[pZ49kkO=YZ(k&.5D\BP:6rdb3DN_#fcOU6*NVL/se:EQQ@Li-pZIarF$jQ8+(mAjT;ojX^S^P+XiHJBHrVeCdngAI8U'b"Me7%VIsGR7R1NS;IhQg!0u6@a^#'H1.gV:6s(4;9\%?*H]5*[!>86lA^V?*mu2M6Cg7`X=iF;dnPZ0.!%O2O5g3R[TX%rC2*V0mF53B-%5Qt,!$7B8AJBAKn=i(TG/@\^hSsrSe-0^F1!L;>#%Tr,<kqu5D)uqIpr[92R"/)sp#,a-W.Wb=fH9hRsa`+)T(B^<c;>$+SW6Fre%l'VT&1PP3],G6eh"l<#UQ2*/&$jBVm[[j,p)k\r:2M0!O85"ifX'/kn>tmd*0pN!DJh#4S`4,lQA@<,-"+L;N-65sBGP7P^<Wu=]%JMMa*cW#EEZT9K%H3I<gQ<hC-G)F*ZnR[sUc63:?;eFXTf#=jY8L??\"6IUfl]AM"5uVCiT;4d_BZ^s_Y"PHJN_01b5Z?fX=OS;L%PU.$39#(L'=Y(LqhEVJQA=]`(cIq-?)5VC`O0?DLZgWZh*WW+^LCXmnTjCG-T`]P^7*+^a"eIK=ZPZPL`)C8p&46p-:mibQLC'V/%'-te0!*&+FB7Dc=Q.aV<`JG=+R1'(Y_`7cJ1R_<C>[ba%+\uq%=t67[Gg.L>"'"E]%Z_e?bQL$nU4K8e[M#aj4X)?hPnCe@;4/lG%8jH?f$ATsgLs"Koa5d4tR11KJaVouXCf?bE3hS7OZ<f%NW'O+NFpq38]a'/;0E<TK;ueE>rRQ"Y!L7rQ\8(pIW(^1DBE2!YMF:#:%:mms7n>?jpRAmhu!)s_1^$92tAI]iIEZINM)[Af,M@LZf2U90<$rWLA10t,qK2cGU2).%B<9D\9%Qsqo1'nU&)7p*PbZ^2LL^h0;%^u.&dLo3?K'n(rihe5l$hME0QrG0q$Ge0f[>!l3u4Lo?@@*5jn>W^$2Pd;,=>D#i!C*,/UjfC@L"&c9/e$+S%>h'm/@*"e55,0N-%m(!]r\ZuNZHqQ/4%7.O>@`]O?11cA`i0,?5o+">5!6Q!4_Udr`58h8FL7_.j>KkNG9'eG*F[T"PRK,AuGVV:-VE.'lZhLDPFl[):%3AUl09SB9s9a07&KP`T!)u^^b;3M2/YfTl@JlA5BK+2SaJ=9.\$]G/qct#Bc)/+%U)<VSfRDPiB4oiN3%La]3!eACGR'_m>*"kY1%"\T?(\-oBKp*i^Y*@dKTcf1$aUh!($i;1JZ8e)3X0`iX7NLd)b8Ic$s"&:V^Tt'I[#a7qB0[7odalH\<fj=C`-(Ak1kn,+"2FZU0%68BMP>*o>R1P.PUHt79N_uUmH!`'ZZ%H,<,*.YX\@O#M#lO=c#?=TX<+<sgsCm>rjOXZ0].AjVjF&9lED_iq""lJjQ)c;`sIN@lt%J0IqM$=AM&6me6VMjbk9194N@UnWt19D-\65XVCj>`*+r6RIL_Baf^>$6Ym2+<f3<>kDPp67+dPV*&^WCt'jsi#ks7S_*G9#(oT:%(#WXl60>\A,W9a&:iY,V';/d_UGYik+HSTW+GsBY*M"1i:uquc5UI]<0EV:,Eo$hHS,n=&U*"HAPT]5nCQigoZ=4m\Uth$``tY>k%[iM-&$'1E-qga'a'_l8C5%]<[dQJ<=3!#-KYfB-Sj3AS.0bHF<*2(?*]##dS?lme+S:Mf04"b!s!TGh*BFK.n^gm(<?\(9c^BGS:%J9FUo2LNRGFrX=UIDe/V<g-=QN[ZPIE&/6nR)-s*'Pfrp2@Lc0*>:_V4a"^UJR_);SDsSLH,(C5PT1cmTH"oTpBYe5M.Dc[W/3M+%']2F_EU:$'eIgcm,NK=7a5hqKqNTLnb6#=:U)T;/Q>Zr")\[e=ncdh$UZUZoD;9&Saf.44j+pF+aMs&seJ2KP`8#=I25\!:h7\=r%VCg&1_@b<X;0pt2k?L@5RH"0F9Ok@XZ'fsW1iD[YF=Vu#N`r44&<2V/IBEYjpUd_2;%pkui:KJCS?W9cY+Z_7etA6u=-c82V3PI,%=%;_n!bG%R,$[bA8B+YP38bXk4MHhbXJ&Do@U)`n5V\3\P0DK2N3f<\bRhc4MeEC9D#:sS@*Hn+Ua"5aeiV"#MeQ6P9ij.C@`ea^%1^/CGdsb=46r"&p51*sN\i?Y("QX$Qq]EVmS=$Hmc+kp./@R/ZQ7O;D5*NA5\";Wo:0Na(!%lc(DI=5-2@d57Z?YB5qWQNSMqP,M%R.c%]-GufNTE;Ed,<.&I&Eh"%Tm2T=#DaQ]nUOcT.=/a(_4I$tJ9B/)`DQSJ#$D@j1.*Tf?9u"i^gaSi#iqc?'beT@<!673ie0_G%&ZqFN/m'q2=><*DLo41VMMY1%$.E^R=.?Q@'pF]DK;&?F9\r@jVm0?kKIg<7R8]=u1JPh1VV8oVkQ.Kh3^qb")FM@g5=6,`V0e4;%*>+0ca9`MF-uLH`!J"WGDWM"a&YHQnXVM1e@S4KM]:D,SIpbLr#YnX*eiO'qERg9["!&^Z$H<;fTo"]E2Ae/aNhmm4)drjr#17CH%aZn'^+TXMq_7QfFNi9l1FXpK4-!$pWUk20#ru</<5r:u=7T42I"sbfd',g=r.0;L2UmQ%nOu+3gBZ*;(A\D4n73-;S&Jp*F!I2+"%F^C)!`.U)r20/qW\,te735foX$u6YM`&27,%Y0A'&FtcIbbf0BemX@b+Ij."\8(7]TFc0Qn=8&qL^AZ14O]0R9S&St@T3VB$G#5#%*"du9/.2HrN4-g!0Z>-:MKlc<5>5c`;C/\Pg72+l"o'ck(9aTV_]EEa%l<i3^K/#k%hk<dj+NE-_egrS8?@d?SJbd9@>?ktcDPg7%@05V$',Noha`fC`)N$Q!oBO1RjD\*9<<*MmKj)oC'lTJNPB'cX)[=$`Taaq]3,o[@__"EPmMa_3*B?l["4hEY.L_u)a*%l*\AB6o%T]%B'.0C:h.p,.VVANBc0ijNI64K](2"9E9'f'aH(ae-)_bbqU*pY]a%!/e$C$YQ2j?I+l:k]^_hi-Bike^mtV76P2R(Q<s'>jt\%EDf%O5RWd*Mr>READs%(L!>^58NCC590`k(@DiqQM$bl*("UG+DFpgMQ8bVd_M!Op"`IBmTnK<0gl*g)S&B`X5mn?<<75Jk:Dg&o%50paUU^qaYKpq=m<%8O'$s&`0YG<K.pm_qIV8!UAQk3=:`"\TU">M1#nd6gNJ8%/6$>0g41.5R%d#+;)Kc.?VKQTOg(<W/:nV!U^%)P/Wu]Xb,]$'T8Na=<SDW/4@U-;4Q^pE$Sm#s4#[EWSn$+[fM$TnKVl41h[nQ?k>`_Y8WfrpJ1k*rY>eItSpCG'9g$d-jB;J,&%$%m&T!RbML")*?dX-qRO(!r8H$>cfd#^rpo.0`Ug!@kC`6KcLt%p%TiJD8(6aerdWi*qWLBJcPi2?[//,JO8nUC?WV7?q<G`pB3H>(%ZX5rN$&'q?/,asqSWI!8E>c-s/$qktWU,W5?:U3'caYc<4sIaH-G'NY;'L:;fYu:X$4?A7'8>UG3Q*OD:me`XLH./<10]%<hq(U+%C71aB3`EE2P,p!@ndZ"hFi-tM^o>VHf8%-S"%fCWmLhh7B4F0Ag-FuU!4NmC2HjsHIeV5cr'#CU)ZLt:+6F8J1=5R_NCpAC4HfNR%ZB^"s2Fu!D]=sCjBq6qN8r`V`'W#sCPiTpmRA5FgkiqqR+pWV=#:hNH-Mklqq*H]Ef9:ZZ/jQ1YWHUaVh3jX31246@[p8I6ij6'5%kQ8?(^H,)b6V^?gT/XWdP!+Y/1Ab&V65e.lQ@rY1R)fbeBgAgt,psS&'6?3j'uZes'%)5B[8k;Nmi.@Hf4V]\fKdY'?5^UB[OWr%%lIo5NB(YnLZ-<@\`1:8h[4>eSMF^;3q?IcK0q#[d9]k954XIRndh%CcP-Te24r])sNpt5Dp:+I0;>\b;hh35kWTHMU(%]H=JnmHV%CHYF')3P(Z@>;j'R$>b0>'hCTW+XBNL(:Ot.`<d<Y%r/dO@K/(]@"^/J'7$M@-D%>9R,Pk9M7+okXs2Xm9H3[Ve]5RJqCJrEJ,11%A$?tqV-e;!Mg]K;\2l0SStZI2RgQSIl(IUX^'73j1El^n#&FOp8UD&+$gHe#5S`NP9mLku%sEp7M1Lmo%B2#=5`K<*:8T_$)N@[[%=RgJOa>J8)=06.#8=5UkUCd/6<nDd1rQ)m=N$P?m.bQnF]-&S%P[t-;5U["6M:q-rlFR7!PiRR\B?;U2Vdp:GPatL"T([_99b&EP%JR$s7\]7c8L`UcV"?-X@<:/Z/f%dp)Pnqc!,7iE9j01>*0_Z5l;IC.qmBi4eA*j%s-?/6!"=%8f"?`SQ9Th06JGCSS3pK[?Us/3T%\P,b223j8^I&.F^cDW>k4D1ph.bQa#(t\HZPn8#$$)A\3+-joL/$gq8WsocVh<?-54-;gKZkpAPLrb/>@#/\-ej/gA4Wk:>D:N2&%5++^L1'F[O)udXbk#BHR`!tP5V.hU8FX)l6^!:NZ)FKQn1/#G;3;Pr[+F3n=*phUT:9J&Y2<u/l18\Nn<q^g$F"R\D)j)@>jHp4?%[uanI!7@s=G6L@F.lh.IRu7A'\^e).RsWppW0"pV]FAfS@$na`*I0PrfFJ_L3!G$bZ1C[9Z5F:9[Y@;;!E5Xu!O6r-HDOt)(BDeU%'$U\7_!/<!?)46e+>iYfDjUko)]S4"Q*lH4,i`$/^5n:#Z"`_M8-qCY.L-B<W2JB599+kMOH[c<jM[Y*-oaj5lnkQ9SDKTCcSgTg%'0U]upCD)WWgc7$c>.5PTOY(\Jo+t4;m8gshb9Sb.EeL=6%*dr8rS>IkI$r:Rhr6N:&;[i.FsQ>kOn)lZlb]:C%(mfAqjAjdA<GU%L'WOcPj!Mq9Aj2&+VJk30s=E#,XE?=,&$.+;Q6fshLt<]cl..:Y39e;A`f=>@Dd<R*mZ/pTj7p/n]Cjo'AAoB=0g"XA<X-Pl]Sh;%1APn^I'FtHid=J>]#M4MFKGp[.sqcOH=(=E=q@uUN0.iF'IE7>Jir"JpaQ=b3S"BLE$eVhK*Y<X5c/E_=O76/jGIATEk(r4jXYbJ%G=\'WFFkaZ9UNlQ*$eJRmKkU)a:s$r.+*dgVI.PWoFZ[EcF1XtP8d[60Ae!ZX?o-PnSBr2'q5f=$t6j_S&n>TFQ#i.;q65pH+VJ(%__@r:J65e;;cFt-s3`%b[8:gC=q5j_Zc[T2%sDgDg!LuqPKUnQY=[/@;SL/mMRjh*=H&VW!HF2hS1>F\19&5Q'?+2$X)!'$CY,(*%"K]eHj:k5'_.`)p4/1V7\2SO0F4W*((fjs`1m='N'Q%k7%fB#4G%_9e.u,MZT>8RMWanR*q%dF5U:P(`XUqDmnRQVhLeu*5E;HXC%m,[HW"h.A!iT2HAQiMbb?7"`snNO!-Ec8O'DBPq$),(L8`9o%#M(faI!Cj/!@OZ;/&+!F+U,c49bLr@YbTVR?<"u*(iY:Mr["&@N%#T=DXjb%;d:;tGMVCj4H>j!/5=bAl!$!NY:3)pYQen$'L1'5J'CPtVoBQhT[IH+;Kd6$G.XK_0Pl'C[Nb#,("Z1E+%aU+aH<h#bG%9?J#K[lGHeQ`uh`f9cs=-&e9$QGt-IfWFg4lktj7+dnoCB!Is;rus\gLgbN=.0`[O1MMkm8XrpgMH'h]!/h_KOEsph-M#ChO^D&?%"72Ki0hc\&Z\IBc#\//B]Gqfh6ORf"5qQ\k;0L@R:_F9f:g@n";E/N)r?eH7/n5^>62%jGc!,+alHoT2:+o(;SX="b[PeX>2f!WG%?ArET>m&L("iA(-,f[CJm#;NVb[O>eSk1fUJea(iH#196>R-GuI;;eV0Ne3MDLRri1i))I)pX8;95JZn\p7br3/+2chY'7<3"GqR%mjg!D*h)a.k6L"SZSt*0q0DHY>dG]FX*QS^nCE"'PCtn1E"h*_f,iV]PbW8Q7\i?e^n"4IdK8OJd4,G7i^O]9U"i!EbaB[VPOd9a%CKhOd3EEh<2``Ye/Eg&Rm,-U)TN;O>/JC/GANe>%'Ie5T.8dqgG$$hYeVM\LC_RpQIo%h;(u"&6%`<HqP0@e==NtI)WjiQ7:9h>9%Ai$6FRDPl]CQM`n6C\ca*ubp.fbWi+1q/rS*$da9`?8'4MHdn^2s,8t`,Mc`Zj]7%T3`?kVZ\$%U<6^^Y&GVpU/)R<T0R"%2!Kkn%UAuGjIEpO<V"J%&C/0Hu35LtEBK8iC^UV<sp&mV,7LOO?ERfZo#bTL$f@JHKMhC\V"H&T>*cA>7He13NXV7R)((RKE!N/Q8g,d3K%<:)Y2_PF!gWQC;8;*=u7nEf0"g3.V5W4813EjBrKMC,VI(cfE2-\\:]<.8562r;q.R3/8mdquEsr?13b7PjNZVl,f;=.$b.<09ka%\gK<K57&tj@Q$kcJeou#N99LoK\qgE[4?63BK'MOVb$Nl[U\%O9T`%<Gt&s-YZ$Y6ck+1O.`BiP%]^C%%hT0PoA29G5S@5E!DsK<%Kc!g/M]uX:0sm@jemJs*ijE8f[=CADYI308[6p>%#2^ha!9nqWfKo1k:ulfF17=OSP!qX0#k*SpFm5S+;&T.@ZhcgO5V:V=dG.V6%2lMJ8+qjaDP!eq4((OTW!"TaL>#704eITYk>h*9=h@VcC,i\Y7DF2]>'<IXd:JlsbeC>!2[4#buUU7)r!.E'b*Y9JRHS?O)plG@2%cCmXQ;kB`k9+4Y_o\!23Z=>:1oTuti?*nBjeZ;(?&Hh+*jI-\4H[o7?K;Xi?Al"[3ZK\OW"dPM]3-[l^LQnmg-BhSilCq6J_*`)E%X.XPG1J[G!qpK1s.UI-L4F5pbA7R:oift\.fZI.smm22t;`?h&@l7T8G9R\LfMdTK-E?"H3Vd]p10L#FJIR3f):,>LG>/UTCNQR#%$t3l_iY,GPi@U(l-:Ds!AMMQD&1<?4(#l%dJ]XciW3X\XR-?Vh?Z"j#C6#/:CN#Q,;thZ)/P9t*Z("W5<D"%)ou>1ef/AK?Q*U@^%n`:>SFs+*Ek(lrl'8))EG4qZmRDARuE1WL1K4)%uF&M@A]pU<_=kLgXkB.+[j!&,Ib<321+;Ygu15HK@D*-$\BI3)@JRAqc`l>rO%B8bOrRm#E3eX=C$:0Osb0u]?iV*ah"fH,u3adiCr%*'!+ZY3(U0rS+$cA#B'oO.*UZZ$N%;*rk]>tmbo<T6un"bL"/%&+!+TX.j@%bLn(!7TH??57>#p#4ZqSp0d;lZM9eVE<YQ0S9[s;R%R7ekL#H1Zl<X0;!bPQ.hY`N(3MpF](Y]I;=%.u*JbKF_NChLN^3=gQY-op%-:o"KPoMWD,"YP"&tS5Rai6tA?U8d1B,ITnX7/'I6(`sJ7\b<'0%.uc5kmtROj$U6F,Veu8g)=TE7IsV*stCOlR<EE6N\\4dA+[3%l5UkqLonl-S4_6A%mnWWD16uJ>KVs="n.>W7qp4o%8pI_<O0^k-eg<!g*-j]&lNcApKEia8i[2PV<a,E;(qqHK(!f5MlF3V8?+aO%1)*N=-rDFa&?TIR<=.7h@T00r1#k>QX+DY:.dgXC.3`f:Ym*UN4;4WE.s$=*]+g9;'JeFkpQSo0gj6\F1f:p;B1!;K\1"5*&0kZ#%$Dg+8]o6//OfNFm'qJe!=>h*0Bh0rKZP&KXQFT>fJjk3ag!`[LP);o@f=;YIPbNGunoof/iUF.=C0mbAncU.s4K1rQg^uM5c.;4j%.bNg_m<':bZqs5D,#aa[9#5\]la'0<d>S=JKFuX(5m'kKD^7,2T8X??arE:*`R1rgA-SpYm4WZ!Ig_05A$f#XD7-a4XP'71A]d,O%GW'5+6^A9X+qinkU`7uW>k%qE?EibJUTgY,f`%pB4@8ZH>F`/V&NQ7VcU+Q91>qH\,%OcSZQTdB#T^huEN3uY%dOs>P,%q,k8e_t%a=`G4=g8X/P$g;p;Mtn>LHE'X=!%h['J@BR7(A[VlOS(*=h>!;/BP!'U&PO-TgYH%,5*r=VOY#geP'2d=WARE`s$l,%O_Z1dCnf*%2]"03G:/=*do,l0DUb=U0%_Pi8YYs3R2aKQX="_D/1tunQ8(DU_G-FR6%dHV=TC76>eBF^oOsL6qL=!\isU"#.c+7sThsuWBCD1%%N5SLgO/pspZUg-LeF9MT&fqW0FQV9&PR0YpcXr.?TP$F]"_A,M%2Wgr="N4kbp`<YP+=n\dgjid:p6Am)I48`#noZp0(l_c@:VB&%kUcBu[Q5!J&=Y]6#U6p3AapfVU+a$^;\Zbn'0+dC,"AD-[JP!V6df?n^=9JIJY8uQ`hD],*C;A*I4)E(OccBSWs>e!edN9^\4G!%%5g\=UdH4SMg.]_0;G1RO%L*Lte%nbogMsP+-`A(V_7^-q6c`<8&/K#g^mN?R7F8gai3>u'iE<*k;*;,;Wi?u%PZVNJ<&E4&S*`XA%rOXPFn%?l'KtDukFn=C7?(B\<U*HD;F-[Qg5]nE@2W4mDWs&dV2b[[]SOV)Icp1Xt1,[E4#A(b8277sP_)tGY(KVbWEm=t]bUda*%=XRA8D&&f1rZiCLTZ_CY[@Vd#*Y!-9k6D8Q$o0VO4pfo3pGtqSJIoN[8p'UH69)Tk)!i/GadHRr<&]4\337DRX+H-KU'\/%HX32c%al:"?+"VjZh3#gZe1sM4AWqcUIuB'U.T,Z7/7rlF`f+W20$N46BU0l8pHU>b,o-pqUELn)/#i?)^c!0gFY[RtUkjP;RRtOgI^5hl%i,Dmo_Fp.C_:;.gp#p&!G_G:n#?Psf`2'@S=mV't5_5=E!OSh/<37Y(6:?K6)K&cZb\R-[9ldL\@\,id"P0QjLiH-1OZ,k<CP@?)%,SD;E_BJBJZWA?KdjYMkrWAE?EY4X7SlE:q!Y#=M>YmkZWdJH8K$7n]LcD?O)61<Kn`6'[&s?<`4C(;##,<ZJ.9fnQ(0CQM;R'cb%J.a'J$*;'3@A;K<$.gjt^%1$p>bQfc.BC.<0G&<BmS^T`corDGL%AO<qRdK:18L-cAgWqRScK\50Msh[USi`;nNAPD3c"#,]Vpp_%.Oke`M$=M'3m5e?Cc%teY<+@O"F`80>#]HZ_R%?QHT".OM^>#rNdT??LeAlp8HY)pAN9T#g$Z1q%K[,'RuME4LQ<URKNA/UH8RNj%1L_!t6o,%0PnYSokW(uB9&=q]=X8C)LtZB03=1mB:=-9-ZGUKm).4WMPg&g]e^$kuP(I=LT@H@EYq&[RNeae`5UT3g72HN"W-J*:%Jn9`fEb(.FNPlr%ifH;)F"!0[=X5c8re-B/2G]Wjp[lkdNBX=$Q6qe>'['I31IFn@f/8i([,]8:K0kM7U+]^XZrI>ph^mQM.P#2p%?Ep^qC=SRG#So@U;ced^1XJC*9ZaX9:#o@+"aC*.;BD/NRmi16'@K'p[llXmjstK2UY2dcH/*0ZaoEh^Ua?O'Lg4O.&lo,+NJoiW%93?&.>V3s=63AZ&r%?9"*boYV-^C#e/uf%?\Te[,Xo@VRU3[H\m:UEkiK,Ap2i=Z!17-OZ6T:!"@[=m@Z4S95<WXqsOS0?(f@d6o%AY-$W`_tk=5m+*:V^%'R1+\].gKGl4MlLhd6p,FJ&2\n?]K-!I-Ar@l@U']n$ds&==M,)Q.:^=D]u;5\(c]fU[@g!+$3Hbp]Uq;#%5mQ"AOq^9O6NR6cid=rH7%t:#PDA5@huRKk6;th"V5jg@Y-0DmQZ/4Qb/mdB0aJ^p_ki0a$Cd$ta$^-1O;b+<MD`29V@k8?W-s@)%U8;!PJUo(91GL/5!/f!T<8BjUI@RY3U*NUO#N@;S"A(^DS=mqHF7_L8#a$R5.qo)S"V-.!;OO*l=kFF6$;H)=W_K3,::$"U8s0EW%,nord;sg>r;NrVsm&G`oc0RuW3EP"E[D>(dD+mT=T:[Yf+B^T=GrdekNGd*VXZCDR2Sbu:UgYt!lksdY>E^B&L,k\VM81HELLpaQ%.&M+RXld:AMB*/75TaFXOj-/u]&#tg,gWqUiCm`B6BgV\3O9/A'e3IROJIjm-,Qa!\F!JH=P>)m7)C&dXsLsOd,"sUegIRT.U/!r%Adt=aAeafF$'tieBs<!SWXbs_B[Wo0Kjq%>;1RfV!VdK\8D%!l[Kc5l8Mf-'j+Q@uXt<i[`UZS&JtZj_Wh0qUO0F*8:/b:JRO+HM%:t=8<`<;*eFVDKD>h?bW6J=[kE^hh!6'A<B\>3S'S-gNKEdpdsHD#)C?!94pZ]TmoSKMr,N7"5[+U8PdC%.!Sk._oVE);IE"LFlZ%8]*oIKc*eeZ"R"uZ%*+@9b7k3p^pY!P-$Pe9R3uVs"L(8B_"A,TSjFCmouD8WX9D1>XJTZN&h+4WU>g-:m-oHe_1]?!+5Rkd+f2g%3-/M(aY>#WV5^+-\.U(hN6?ksFSKgfi/((<?;M^F]1A,f(q;7:-B)"rLe[>'Ko\J$Yb-13GLPVV9Lc"uI<`9CO=?Jc:K&4k*bFDN%SZY!M>gk/i['U!+25o(k(F%3k[^DM*d&5sOXda^YeH3V;eNl:=><l;uj"NotU2^\B]^$PHOhL/[.9jB^h>u7(`UPL2ES6/P^6cN8%R[#i[Pu)#*2,GhO3m[fs@bLH)On'&=)Mi[+"%u8W+^l+#6,5aA[PTic`$cte886/f[Z$)mbVPFK\mu-!GF`fVUWl)j3-$>jD2:hP%+KM:uF-G41F?C%Y7KZ2-%q;s""$%QA.'%!934h]O*hr>l8]u:F9W2N]/!')Vo?;oNEUG)07>Ps'fDlF5[de'aif7YB.Duc3Ui'/R%'@;`B]7sg!/Rf;N/74Lkj5/-^Ln#(Hc-*i!(OENJO'T\MTmN<Ok#<b@0iBN)rj2>/cdiCM+s`G_Ba\(dD(q6>6/4.)\BUa,qn-DT%[n(XM!rN$RpBX)eUG7U*[96NuPk-/$iuO9A/`Abrfst&e6:E1J68Si5^89so%d8pU5_+RTPA)$I7r$2Di3XqA*Jt;mTKSFhc++$T%ZB/Wt9uB:c(gAG^qB<T)Za:%X%=5$5O#^p2[YTm?/As5N1XCnR"QqWcQt0$!&KXKaOq.>8Z&HcfbmlW@K1.V3E]2`[Yj-o*lu%[j%64o>)!reoE#erf1],(K_B?dmELDY>d(9,%KMrB`UapK&57RYFu@#<Ws1M'<jp#mud1Kle]kP>0dI5Y;!1.$\gc[%s2+_%\E\++T6%OCU=;+XT;2;58dm<-ccrZZPc-".O)DQ@XN1c$<o-I'H;N=BEciJMdl0,q![A6C_NhK>oPl%<,2\N16'([5@BIYKp("!(`d:mMX,*%rU-4`NulF,8?!t=ed53!>_I?Wc$n#Mr/_+POPU-aX]9Wdfd#l"6S^ctiE91_$gFm9c9No$i[$C[,o4?B7o-.D6qRh>ihZFNO=,fr%o2H/K+Mpq`lR`oiS9rTk#_bDO0OI<`=1OtcaMhX+>]N5gI;Jt0PnSs&iI4N2!AFYEYC]fZ4DfsfZF#%drFHA.$3QY*O^g:$%>&<:%jtn*5>V(bkK_>Nm6s)n2P]l6Z+tj&T&J'_i`uq'k46"Mi39E>J=FflPF=T*j^1"rnJm9ACdN#X73;DFR`D,i"EO^eJ@C"4sCW!-G%gAgM6!S;f-&W>tnjKlb<^H$t9H2]F$JoT(,fA6^'?s=;nLtM3rWL3F=$t+h2U%2\';P-I+ld.-:\1/.5BEQp#=IO+[l;dr.$_.]P%7UL2qPVGsU6ul"m*Q`BXHCfQD:o].5et<'"6N"udqINmI<>CU"J8#IU6&<m=.3N=1armBj#2h!lNCXrbbp5?Y3]@Ui34Q?RNW_"'%m#3+a!>4!i0+SQB/9U.K@hIZ5W>QODDBM8D%YN@ZPBRR@f`@\e@b44+,:Q"[j1kg3g)+*;r.sh=4XJG**<c'IRW=ckGZ7j?pf9!Q%6-;!b%n0D?&hUR9H],9mH'WNl65a2,W*61^AUBKpEb//PAP^QSjl"r;&KDGcJWf-8+U,0]+X9Yo!p*QiG<m>T&b:Ub[:i_[Kfg71%$*$]tb`q@45/9uuoN^Xkd@`4,q$?RD>b"2D$.1!nRNo?ujBP]RVuaNK_"ikscsAA&:"DSLm2FMM=B+&_)E3X!!&28!q1Jm<4[K+W%b`FM(JKXocbQ/h3#@NIVB[Oq.Z3>qAkDs\WU(EM8:=J?]Es$9n5W%)_C2PEBAQ8t?ahsr^X2?4F5s)*qO9bqtd@GM\G"`sq%\tZj%`b^C*:5H#=$jKtP"g=bR@L``?6'5g7!$'qIe4E&\?7P)1-U;].G>uc5-*ehnZ2YX$=s8>==-G>rNNKW;(N+@2i"LdubNI[=,53"I%>+PI;88=70NJP^)i[]Zr.TToZJj!)9.s#:E$%Uh%<G)\MeIjM*YmIE\j_Qq^"7VC-r,jd:>cb/g:i;GfYra/!dS`JO,arEu3)>fT%^5ggO]K`=+"D!d!/ukWna(rI_XVU9>ORr62K`U2QL`&6\-&cd#<FfZAQ)dn(@Y]2n#dIX*Sl%i7cu)eB8E@o:r+qQnF)D^Y::1r`%BFqBSCEVR[@8)qL-.ckFp]SBd._U-:!pH=GSA:R2mYKUDSGC8\(/uG(r,gDaP+$Dp1tg,HfhQ6(%[a:*jMW&XZ4MWGH\!0CI86P)%>*<hD=^VPWC<?%kFjYE\XN)@cFsI*kj-&"JAKiuO*7fr-ok^>*ZSFmrRVe<g7A&Ku-E&/Z4=ZX5mFdlh@C9QIG6+\[/IueXE_9Oo%bpc1m\e%NMH(H#*.Dhc;XW/-1Q%!RHrIC,#:E!G0@<d9R<>)@RNa[Q#OqU=[p2c]-`Rh&%&-Q2m@I,EXZ!p!s.R@sTR04g*fN':]%;V4dOY;PqLnl]@7Pq&.^fG-5'UeGjF63$uj&Smp'H;i^BR:`cj!$VIV&Kh]35_Oq="Fth&KW5[<9u%iOHTi#h&$-eslP<q\(%;81%f-<%[o=W/L6k"7"Vu]SJ>RElr(()l_Rq?'!8Y1p:XtJ]6&Ym2@UhDn6j"<0q.$lYQgEsPB;cI5*[PR%,AAJJ/2^$r&iocLGhn4'1%=Ko"GPXfG<9-Ij$+>N/f`MD<]+EdM%!dBM,/eFjVcBrF\KR6<DG!^J_P\;7fFLkhJ^cKQ!d72kuL6<YlU<T]l6F?98L,\.0<LkqA%!tV29Q);BY]d?r]J;$:I\V:<Oam^SDB`f'[LbWVhZU>4,PO=hCJO/*Hr+q%<m.@q%dFfCf1K^Db$r9\%LEoq9RS48Y6un,83E:IF%PUJ8%;MrU>c^"]HR7F:l*0\F\+]!FU:22C('/`[+#X=C^;KM(q(lO(F,4.Zr1%Vs!e;'?+^:Zg8RgTPK+u__2,(L^(ISP]er7lfK%%SX`M-(Y7Q<JVe)AZ-O"_;I<$5a4o75*g>#8:j/.S.f,=>Zs\t;5dh&S3SK"%FNp*`1GA<Ps$Fk@*t6G[uq[C&!Gk%$.?4MdD>1i%J?^.-!1LX<.Zm6:A59_NSCk2Z`KE\<o#EN&T;uX7FI_LG$4\[),.naq5hGC^2Y7c+43cJi(:d>!_'(k%N<3e/>P^\V)E#\#]NL=,%`A3(></30(."3`lAkRYOLCb,AA4:At0IjRf\QWb!B488"Jhh^@AiMbU;KA!u5[g^\ng8=.bWh"3ml=IO!Mo*p@6f1^JoP(!hBan"%TMQBno&0eXfnCf:aKRI4M1OH/KF=jF(9(aZ/R0p__E>/F;6l<Qg\NMSh$=d\V)lqoP364YN>Net*)kR1l[,tmA@Y4W/c\tZga%43%2[a'eGTR8n(?5^s#2C&;VDOk$8W9VY9G6tFB8PG9HrAD.A5Z;@q/]?R=[`I6U)"JK?mJ>W+\3k[&MlU,<g%e:U,S"Zb[.:WO8,W=%n:'k/!Y-pudB/h5[TLC=Qa#EDSYHr>!VRY6YS^7N$#'E;`'r_2=rYoKO<`AW3M36OL`rO+oe*$W'T\=6oHsYmdN0f<)e1Fu#7[q1%6$9_-LI!l.\q4-EF%[:(Q3k;40qLsr`D"4ad$pE!hghei6.I+'Mo^Cjlr<r")Wgg%6?KX<$TJdb"P"i7JuVZfBR7-#&QhK?I=^V3%ZCr"E0m&kaOYL&GIjGQ(@U=1X.:'ugh(l:-8;g,sAB^L@:WetlnoL8[cLi(46CoaVenIem[5oHf::UIBL)-RG`u_M&Lq=BnrA4M4%puWJ(Wb_ili\TLUH;HbVNIe'!6YOJ^1]k36EDXfA',RLc&1e8]%0DN1CFt3B8P"<S;UtsQJ<?!nm]\BU/4[]4_TSp]QDGGN/dqq>%SHi4+(Zb_P#j82S.6/\Z@9HN'>-J&_<+8a!K[&8J<!Hl#.O6p'(Bh_7DVi#IapmH(hnY125Z&HhP.W$?X/-r-(NV@@MR]?LE^3T5%/8t\J.eJ95,Z-h*!Pi=^K2$8(RUl6bYckGPm^!`Q%9GNjg&UVgg?b@_K>!/BX/TC'i54X]AgeKjM.kA"`lhMRBE/*>R8<fM"\Fdq%Uo8-I1+e*&KV*VL/-<>>g9<,J'g9K4/)F>T%a;E'H*#8`CR$".C'2lS74R_*2BrBE.TWi@G(-$)6Y2]0NO'Hse<FO-WQ'PAC5$AZ%r!V()QZ/[\'1PGI$ZAN0&f'*$OM%(eJ^bRcIZBI9_]9A0e/-n3DE^i.DVnXAK16aYibG1pHN?Ap*\@GdOqn'16M)E7[p)i0WF@WW%!<k2T"m@[>SP+_BD"&W2XVTr]7C9lO2GdFSr/3gN_eod!.G#WV`t4qD/.RbR^_mj(K`,%Fpb@WG!]$a4B1+G"d4J,>cKQAgo0\hm%A4LGooO^[5PGusNpR3\hNQt(K7CJXq5<JCk>`nM1@4tQL-l<$4+K8Qd*"<3<C_4kuM[3_eROeSO50n@Pd#(p_Ka:%!XW@<d<81;H%Bsm$o3r;#%]P=`dBCJlRTFfMHqVVEkjhXCij!7dMB3^"F5bQ8^DdZlY#ZU!@0h&kkGM%S@1cV`GXt4r#c>F"b>D6tr#S0liF+S0M%)c-f<'$(FmOY^/L`g1ufQH,#U;/4Y67aUYC3f2NY2LW$94;g*[oiH;FUQU.QZ*dSf\1r-(M`7M1_QM"`L35i_Kr&K+?GSKB:`?h>%<'=`1^1;et4&p<g2fqkI2@]<gA,[)a69$7O1jB93IDQItS.'fic=f/*"Lm%b+S5hqbXuo$T.7BdMBNudc-.1a1eP,CBM<CYi(O7^%1t?n3ob%9-24MsR*8let!(3_VQrFW$GZ.EW-Guo#[.M]V85B^aNA<+RckojBg=6C:0YlG1&6B_N%!193?iN<4Cm#MB1RtEGhOT77%@3J1$A0RO=6)>nP-4<@#JWe(`:,7A":t2F6-'Ds1=,Z_/C+FPDHB;'=Gd`tM(;PKj,8`=T.mj`LPqF6Q-6p$GFtGTf&TrK:]4ObA%.g!3I7^Ma/5C\G[V9k&JR9j4+6".XM4stA*&a=q<CVTHr#QVd\dN)lE[`PiGis[KChLbi3dU6M9)LQ:1h!5rFVo/_B&N*MEbdpO6%K?q9W;)&6TI2r=L[CoIK.E_1$:`$F.SOb[V,]2lX+u[UZe33\lN3m9OM@,YF%9-FciBuJg!KM;aKWDmc!`lHOKHZqY;Z`&F:o_(D%<RrIj08Qo&T"oZ*Ol`L&?O*EuWn-;?@43c49Vp!obp`EB?UiFh$q9%sj<OPTdKdUo:3*<^7h@$.$t_#*7q</1/DFA;mlhKhmEkY*%aT-.PAOC?YCn>-TeLk"m`uN!]XD4@=OaA/Q$XlP'3AOi>F79R"/T*4V2%:auIkrNb%^TDi4.rebdf)5B`+#ZM!qAn_0edP)mm4T>%J4E(D;6\C^b#6V(o.]cFDqRU%Ub$A8R4X!o!;>VFP`TMYQFG7o)=jt7,d'oIp]h?5DihCqC^BA\HL2AC%Hm0LS@"Oi-,bX39f][_%%7hPN*,AoR2Zh?4UDse\"IFXrc>bU!CbpHaZ;Pb5NU4pBOLEhjRF*i'DkkFY8:(C<<Knb8,s'6&eC6h)cGX]?P,X?3%Ia_[!@5Xh%LZ#aMmEXX^A$bB8kIU`T;43.PXH6<A6T*k.d3Dek82Sdp[!6e02<(u(E.O!W)*]r7HffHQ,5C-]C]g2uF3<DBB"RQhoo3@9RK;%i%9`:rRTfWlB)Ii-OCt4N62GP]lQ5",6HqiV4KP1oOoW\Viq2"[1-F/tc.Ok\\kS@d*RQ@?#(8jcJ#)n27I72T-"\C0p#SEL(Bu$PQ%eZ^&N4aHMmccu'9N,D'$_Rp&YA0MF+ba"3oJ\ZsWCIMeE9[O96JoJ4RK*/"h>BHVF]6:ZmL1JppK>f0o@q0O:F%Tt]VK0LVTUTdV%!_c4DY!n(.#EJpO4a7gGL/a-M3t*#j,q>_DOp,,D\\V0HMLhmRD?_&ehE@+:i1Rl]m,nSQ2lJ^D_)$bV\X4(hEcVLB3;f&-0t(cp%)39nK'+PJ16u2B$EK2Yq-A5s@;NtkASB9YF0#;*O6[g2VO.Ii33>C.\Z^Z=plnQ,T2Oi@J[emd_-C_("_GmSnjsbfthK"NZb]C&Z%3=;nsfA_+Qdq$ikPPO=l56W0MDkIUDEJP6p7+T#P,2S/>ONhcJ25-ml;qX3/.7mf676lfUYQ*0Yq4LbjK@q%I1iu8<72!d@q#EZ0%71qfXY&?^4YEL,]<lr3=<AOK=<V!#?#jVMnJf-g]D5i[ZZ2:g2OCgT/gGaIEZiAjV[eeq"ebB*Op+J%@s0o>P[6jVYR#(OT([#F<%>o]JB*hWDDZQnNY7mA)fNIQ3F`A@@KS)dB&r85j"IXKS5H1[6tF7gW955P9M]e@YAO8;(*pkahLY!2^EZFBAql@XSWSt,JgmEg?R%m@PGJ\GFCDli6h)rlGQIZWhkMO0d%&5@4?_N;rV!-PmTr^Kpg%dC1b]IXH-UFEVWq#CQC.q<nPaO&$6=Nm@FgT,o(Z*hT(l?X3!U%O8I7ardJkZs'G=-rcUp>59TU&)kO<PqUa<CiM!tO/rkF/EI%2H*p\<cdd=fNNTp9#n`@U9Di[]XnX#=#m/.fOGT!8[lhL=DjC9hb%biN\'m117u[5a-*iop2rPKURsA/SlBJ(I21p>Y_fK?O4#DVniN)8d:Qr0Na5q3NVeC\Rc!g%k7"b=+1ij0RL;s-rTr(C*I&?0je&%H@2rUV)UZN\sn`+DV?BE4:p<$p&:RJ41a(Z4MU8u]m70fi$$>C^#^ZtHUIdYI!Bqc?"2:@VWgn"QjE*IqJ-#q<[hE"^&Q^(3BFgT%l_"+8LJL[:4l-.S/Ro(9j1ehDUjdN2I!P&.ErP,!*Z\KL3Ic$lfH5E[Iac14_.-Xf_><)]*Zb:Yo[_383TgMC>p%&Q@e)jss4]+6%m\<R=ITh04<LA52KkV]hAudRj1ROdep:F"Go#:Fpo<$$>(l]ss@i/F0Br`t*25[Lq[+1O3@p0.BhJ,`B4s+!gktPhbTC'C<rqq$@%m)dA-5N:_tB(F8$%mN5Rj`mEsqNcqelWnsq7/l5kMm3PEr2ub:Zi=SF6j1>QaPpS+o[EE,gK*U!*/VR;Knb:$KYn7miUBlk^6Gd=%=?>knEmK$_]S)]e-0KJ4*9c5apR>ec#;8jG0D7r,ke7#6YLKc$O3]HQmN?nj&ao2XgQm</:]5d/Z2"@5\%]55(=W'gmWU2QgMtE)%qV1)a#:Srb07Q'oeZsLqa*-Y(r8de85CS$,ZT7@_Qg;0Y<t+"?/q2M=3;VcFs7W-<,QMSmb7D/FSp(tIjboTLgKnm'CnuH]GM(gP%p$DVCkj/d_r%^aIg$e7I[<mArr,VfIj'($<k&.pqB)VJf`%Pj:&+WCF:p#1r*#*>=U&O5W4)#k.oq*2XkFX\9!+q/X6Fn3s\pi,(%0!=MXU[-lUfeDAn,4!A@j]D?"2bG'.aURsHGh<gU'0l7%gV5_^I!U*\\Wk'Xi*H'PdDaF]`'&:g=6\l\Dp[7bimLN6pGS8Mjn$5<%Ndcc:J(8K8DBUcT.6dBZKuiWUV=adr5r)5rIQ9Ibk3;m(q6.t90">CJa^V^,"/AGRZ^9OsG`pD!0:k<i5<8c>[]+^3`if9Xito2E%HF_'(8\IN9+/86U`'EsT"cti78N8grfjBUICK(l5G>Tr')%Q*cj_bsa1)SG+6L#Z8OI!3PhfC]_OBlsH2RMC]_V9e([lc)-a+\2,%%usUk7ea*ko\P%%(Gb[X5-OES-LjEuLM\C.21p1@15UKca@:O,4Q;%tlE04]ht,,q$KHQUV6Q,!FRMl_e)TW;:A,3Y:63[Q5Mpt!%`1,f_>ln#E$3p:#3U=R-<.A/o&0<Cn/bf%smbM6oq;$/ZhgtSSAERd?@/dS2FT:^okiA5.PG<al./[F*@j%8s^>b?ekHI-Q`iqA5%IF%E!POj^Yp\R=eq)@3P28RPp.ORq@r+EG-:Ug&DAZQb=Fakk=oOTQGp;lD)1#tIl<a5uMIY^h4OL`-8;#:JB"H4G[5<D'Bfk11P%)<BoT>G=M`8$=K.`VJb&'(%2T?17dOXkW>tFOSM-7iSO:Ce-YbLPNp:a1pDUiERA--Fo(TbalI'(d.QsGPd\nhqO8UroddmGCP$W%5>l3G>6U[RCc(PGQ#hD%EcSebn`]2o$e]+>h^^eTi8DT=MjHCU#G^eA6H1bRGsb39gqU?^FQ_`:rSJBrZ`M@9,<=C@3V`OMf$N@d%:6*Y\p(n>a4nndF-aqnQUhCo1lY?JL>)7_#?tEdr!r53JM1s1Pq\9<4QSI_8%>-WB#jZaH_]Y7#p$[)A`3o`tmjh7Oiui<r(ZGFA%eMrA]^rj;^+N._kmmF7;L$YT/2@s=@'&P2B66%PpAb&ZkDo'Kgp-=GQSDT))67c^2C]bhu(tLSViX`OG*Z,1A[Xf!J(=3k,qg7h7%\.mft&>=7jF2.?4LohKQ:+(<12Ot)FjJAB$LRdFZbl.K]_RFbk=1`[3S[t'95't@c^V06Q(gl0I2XcPrpj_s]L"@:6E&V/Z[hLNm%#6Kg[Klm?'\73)5k9j%@']6=#^N\KOH0Z'k(,LIm@bMb'-sDEeid,jDG6CtBD9)Ht]`Q9GDST%n.XkL@m^uOoh(kqdNBuZ;Ck40j%g+oUB(t:lqkE\DN-)`DJHM#&$`VGK_X7qN:rJbDu.mIn(dm@rN/UQ3WV[`@,OM1IuZDVmqXC39toW)C0Dr>;fX89_#VIb*@hY[[/%bLd.p4!>!"QFHI=//Y8IDW/3FjZ`Ceb,,*pe#NH*a8Ooos*ri(YZf&l\3=Br%Tk]..2X@80UslPOjE:D2f?kl'$_SYKQD-TH@FmL%g`k]nO`4V=$0V+?_STHq:du_#oi69\["%o9m?bucg#:=Sa(I>45QAXQ`]F+UL@d,eKRF<F6Am:lq[OFG]*$("@[?!0nbp)_VpEY\%hoqYJXMOjQGqBlM@`kK2(q+';qrf1`gl$7p4LeetNQ\_/a2(u%YlB"7?<TnNh*3j,cTc?R&C:4/6Fn3s\pi,(0!=MXU['j!eebf(%_S[Y0nIf'I:`c.)\[_P3'lL?H8Z!$4bP!TL0;"gW>qY5BIc-d*9h'P%1@"Eib;'b(DDO,qR/,2\/``cKqKuYHoojn'nC@'DN_[;L%g&LGpV/2*75OWITZ$^E$mqs1>5-<nPo[Chg3k8HJjjm*#4-"%@V;-AG[pI57dn@7$H6$3Cjjm)8ohsXkjL8I<"n_fn+PB!Xo]#\o%*l2adc>Q]*FR<rqcu2E%-g/6nr:@nTdFlQg)]X:]q>Kj0k9'_EI"$*Xq=2GOiQ(*tqe%i+fA7G%BNrc$J\'6c*o!4f!\ds%^pXTu%<^GFh86Z8^4]@G+4mm*3G.Df%^pQ*FclAVK0AJuXapYK7%NW:#^A`P.qVi"+O*)TJZ2VK*'XQsU/q3'ebr9jG,-qg\fC^b'&OSu'%ff_R[POt0ZV/5dMI8G,#dB;[Hb8Am^SmQ-'\C9#5a?m$%p`\3(?0NYpB#@[>G"9F+C2$i#'&;6oo$+M9K.b#ICoo9"ZaQfL7BA(U%H=<Slf%RF;[VW&t>AMD$+2laaZF.,WXY!ambLYCQ"Dc3ZFGl?Lm%rfX(;HoTaLqc.UAGg/\n\I.+l1,;EnaunWueg=1n]'?(kG9X%gV9>&Z0Vt_aJGDpNIG5!Xui+U(W+c_qu,qnmCm5RIW5I8n'`,_.J^a9iP%H$Ij#g*4\Nn(Lg0-f.JZW)o`qATT,_3e[=<S!kjato%@Z(A#H,)SO/>(XCT8NZ7hdoI>WpePF[Zmr0J+,5'b8)jlLL+T9\rn.WO"F2/I,FCu/Zd.u?tC+n;7;QA97rJ>M%abMAR<gu]sWqW%moGnN6MC459m`#2mX'g8?iK]Ho:na/MB(KkqeYsB;EB^s\j!6O[oJVs9\4c@fZ?;>>slj.iok>Ig](Q!\8QMHhcH.HlMc4alG($u%YZP8Kde(+4WC#K)h*4%%FUP>Iqi,<j#;&IW>"EMhXWFk"KAN[N<0o?&&(-#qde0^`ZnP7^eUt;VcrLZ\p(G"=4m:MX_`Qpa`T^1A%Qpg?0qJO">52U?o+oU<.dI3ic0#UQU*pB<Xi1;"G+ntR1(RB)0d,4LngaY99kD]?4G$4s]I<"f;Mj'pB)ke\:6b&E)o32;(+"maB%S%<p"X'M6fhVS3bAE-6oY@rj'Vs/-i?XE1\?46bUO8I7ardJkZs'BeZEYI>:')]og4QR#(aqd*N$_FXTn<A8m#^>6MbI_VpoQkqR%T3iXH*^'DppuM.AdBiF_pu,eCC9?O^A!2ndHn[cjllTL#T6tX-]TaZpC[p8)k_"TQg=P)McX*,jfr+\5gGdb_5S_9[hq*U3YS@-7%B!TL[`g`gkUO,@a/il)`%XVe:o=bBU=N1p?S60n5c$1TDmcFFWEie+"qsDs\pj*hG4f.db/#N?,UO#?`rURCfp=9N61m2F/iDmkh%Kgb=09Bko+[()Wc[$;HbH$Spt&JrnogrU(b\6)Al*u8cL$Y)EV"=pdCfbY3@Z'[oL^mL%VFFP6Ln`FtkKd<m?<MjO9o.G;HQ6Y_0%Wm\89'=1]-hXh.kQ):\3Zn-Ll4]e'f@fG159oD1\>GZ&'Yl8ADlO/gT[gD@.::Rpn4gpl7\9Gm:gRN5tOFt1L*a=R]oWBIphiI`+%^[)@^SH8]fjS\qa&\]ENij[Z8&cP23QXY7?n`.aj_*:.j$0hB@rk\-dDu['Z'<Mc-+fB`S"f6,si3u5+/nYIY<`&2\H!`+:4$CN@%\^^:sa/k^'j&+,?Y@2W@>O0"nl;O\4[&6?'s)9L-[d<^'h>sfbFuq7nW;C=@\!N6nnqQIJ04ZYA<d%]J`SJ(Nn1mJ?dHgHkh63.>%Y>5su!IU5KichHu^5VT`p%T]!e=qg<^7WE.74l?h-*2$lMV(tJg59#$P_c`+0l//;>:$@p=r=eM7:041a*7%`a!C]P?dI$DNp\%.%08,O-pA=]+]k,@.B"-YVlh*>\l5)C@D%,h6Xk)s`iP)uDr'E#rpT,;26LM7:<.eQ#XG;RfYKJDjrb_rMhL:M;b7aL)=+c"Gn$8d/%ebAA^>>!KhE0i.f_n=TFfs4*;TPJ@p9',r!Q#2Fu4WlP+\M8(7=oGgR*L=bZ?elrKO7djT!(s\eNkanY[K%U3Q<OmE+p>dW$\EeX%LAH8O"A[5q52Yf>h3O#p7X-XHJ,<8M:&:LJrah=*/.mVYIr9H+Z=S>tpt05m#L?`i.^B=<G5KZo)EY\-akm.@/.h;YH-4g@q(NR@%OF&(2[i%/5B-AY^+ij[G$dkmo$6AWt6Hq%l4itkdaTJ?o"aduO[]='IZkD7K#%$emqe9I?i.G8990M>(DkP[n,gNute8p"[JTbR.%$V<+%.,S2L#Cb;g8<MZa?L4:Is61!.m/?n%ftl954J.u;5Frknh`I6qr+[CPbI'Okhk%ci04Z?^i]ZujmA/(bnt#E_XJXN7<oAD`%92FF<^#ZV<l&BMUhbiA0^0f9;5JC7@CqN[Rhtq%L&<#o0^R^[70O>pECLKO.n#Q+h)c-6Z34:+gQ.HbqG(1:NMttK:aYN!eB!/=]%0()bZ,V>i0_8?V?m'rnas'[3Drp0L[nE5`.V=<P_]obaUOU'GV=jA2$A&XQpII[n-rU@;&6`W=9UdUFh^,S@SWfMe[;g*iljQPde%ZgeQe^3HMln=RGjmI\HjP=H]WH#\+TIeM`qC%Y't^[HZ#o]"8j?h?GUe,J[V7rog,pV6ACs4RGB^Rb#_b"\q_=9&4`e*<%OqRZ^Y%c]<6Ab5QBr/ZhX:r9BLq6%81n+5+'\LNefmPMc"jT:6o!WSqK)Fg_)P5AJ^"pkO3$R_1#MUcLZ1-F_EaoUl%2J"D,UXn?S/9YDIE%Pl<a%2"'Lu;4?Jd]h<_I0m@hZ7n0gK&%dmOlLXVHHqtYCSU^FT+hGfL\c0oO\-K)-m^dBpDOsQ!iMX^V'ed8PM=;SRLH>Hq3i@EJ%NW*V)M%j!#CO)LLqWI:ZU@-0gc4l4(hN^rYgH!KmX0sloAY8nQ2r+_rS^@I$>]oaiG^S#e?N#t0hbKr;k_@I*-U7>ch<>s;a`SnF%=(JnW5NTYU.t@)#p#P&.GFi(:%W.+&%^"TO-]e9)h4qEI*nN6@LoV2.\iE!m&"CS`+'0h;@mU$;*;k%$XtK9&)Z`$3pZf1igJCt#%N19:sd<448lLpd'_h(nFHZ\'Z\@P,K3BXfc.o=1W9D:dQ^RTH>W\gT"+^Fi$O4Xil]^t4<GA,@p?MNs9T75u_^uZJus3hLg0KP[4%?ZeP]FE'cX6Pl*HlE0TS+6'<H7\?p+4oaa3U\tj_?g`DJHa/!?E\%c/SU#^.EI@P2Ndd0=]#++#r;:+(1M:6Ar9VDmTj/OdqB9_L%jm14eT3kp/5BQ<j^KQ*M48XX@=5X&0E6H?$E6XBioqihW8Wjt[N#-kId.o)6].eDAY<3lPc2<bap>iCPC"lQ-^@A+N>j4@YX&aXo%hQ3C6G1E5;YkU4s=_gmDm+g:MS+^X0ICo>()ltm'L(2me?i@%':X7^<oA(cQ^:V+)f.Q`)/:N!fr;&JLl^$YTU2Bh@3bt5VC(ih7%K/0q%f'VbFg;<;rmK:%nf7(;HIno<Vk_>`/Z#@njKo20>.Y*$Y26Ceq8`mtp"uN7K_E@!?DPoSOKKeXp=0smCKie8^FrP>5pZ.)'%eo/LqN,A4G\`-iVQ]FMYSXIqkMT^_QiVPGX:R!u,5!b\<pjSh^WQC+.T_ktQ-Vn1"eS9+Dbn':9mQ@!]pK9%c2a@<(B`I)Mko)L(%X&#<A6[![=hf2<Pp,M24#6?^Fa/t*;HQYGRV3:b<j5ZG0=n0'3^CU*Ee]5t;OWgXHD<Z!;g4;gN`BA)fZICWge%`Ng2>j?'L/&2=%ER3gVf#PcC#1@7X4MCHqjUWpTa$#HrF7Q[')R8n9cp.<X`KF9T`V?s]jQIG8M<#MAnX[BY]D*-(.AF$?hY!Y?a62/.];@Ni55O::%o'<''o8CNC3SnOqlcdn-]_ff851?3RqpYA[.8m$f^\'a8GlHaN&"icprQmXu%2C)`@ID.>.qq&Y5J/b"rg)f\b,Y<ZZgM^o)L/0_%>tB8+;jA]c+Hp`<0+kaj5,0p%`7_<fKj'/n\gXOG+0%LB9(=D-dWQn=;<$UuW;u;u]bZ<*?-FfBqS][W8WTcQ$AbBU+bgW8lrtZ\%<Xq2OVhSj?jHC.EpX7[mJ]@P%aaJ)_+Pl>W:m^cTbjc[4"h.Fs>Y`AVAN:E0gR[uaaIA+UPSSND/+#T?^)Y;8P<gY3(9]!MVBEf+%B>$c=H5q@[X1(P'(/,D"Z]K6II!'S+$_f6GCH>JBo^/XMIi[b-/k9UD?&d8JCWSn91/7]>"r/HfYDQ!9#CXn(0'X-*:UQ8@@0:bG%rOu38NGX*AD!n=Z4"u9YiG+,qWIM+tBr#>/qmEW,gXt8`Y?qT^rp`@ekZq0m8GD2\"TI3&5ef*Rl5PqqEcOA0n]k(s4,6e\=JigK%SD9=6ik442EHBOll(I3K)9BAuGfP#3D%gSS9I?T3B\uNdo$W,k=W_Ie(%9kP/T/G"jf$AgC2ue-h:gJnAT+]rg1ZDYl*J?U-.XMQ%)q>KB;b^SZCgXQK"C9hgJf61RJICeES_Sp^X:$$EVj6IMfN<8CU>6Mngj$:&J-Jp@9!#R:%uT[?!&*Sb0#BMMlr)Z2P3XAP)/XTS%j[AH5NY59PUJ)+.]4,6+_&G09:)9QW:EF%HmmI]R.nN2a+\jlfX%U1@4*D_ESaC]<J#hVTThiZbOHh7PVpC[C8kSIERhoP&WZ!.M%"4e`F/^ae5cIuo+8(a[MPVG(_FkS2$6Cl\o^'W3MR^H9Z!Y,&k_M6^(Mp-.CZr%eY8_0hH\+4Zijei`p5$RntX$3#Z*SWPJ;2?gB%CjWa7A$n<TZD[%T+SECBLm88kMuC*XH?rJf3%7c=@\?GsRSVOlMB5%ZXG`sl9Ju,f:ne'D:6&K6\6rCiG5']*-Y`D&hfXL<YM2FV%MMVk3dJ)u(n>&i$`RX-*!;A5@)j!`T0)$MbOQHA-G-qfjd7rqkoNCWNE[uRiqSpI&<f.9":TBIkp"Y(I*95!/gVq@82HDKE4A3W@%gWGe("'H4MTOEOim[Pg`-_p(oKGSf,UdQ/R&OiHf,^SQ&cPFrQFG4!9>3gMpkq-'8h5C]T[l@"`]qs!]j\G)F?t)EUp`DXL>G9IC%f`0a;M5c`Ad'`(J$79,*Zu(uD\Mg^^MpQB'jT4B`qmeB-PV$<@T^M=IFhYjbaY"R3SkH\fHd$mkapq@FMeu@epsa'0B3SengAbD]%C3h:+Ek4Fl=54M'2;d')hR@<[(gTl[@.tJ8F5F<%]tjLAH7\s!q?h6Z?D?`8/]t)[`tL2/o`\A?2c*%AEc1j/Y#CRRSTLpYV!LrS%LU,%%q$HM6DCc3hOauQh>3eTFSX;J87?s@VhZ]])$_0b"OTtZ*cAAI-fH0Kc2"A/!^==O@U'E'0kg.JW9Tr61-5j7IjsFA;ee?R4%OOdHZ@peS/]3G!s-8UcCVPI>k5@Oo*oHZ89G1sFm<N2tEYcCAjqEmFeJd=$7pU_NW/iEU[eIAe&Mp:e@8#46V")S]e#Q7(u_0J(%%,e5-%mP.n<0&8T4<g"?]I'k5/8IuAJ*0g(RhI2-3Q!?\)@^;pAI1J/>:48;2kbqgjl+QE[G,)r"G'UFgM,+n$Oo5onrT;5?L?#/L%fh[-rZU/8RhtP5f5Oh[G;>(Kci2`kFYuU<QF=u*jp&4-M&ElmWq^IV77;C.kYBGUT:39_%fQhof)ju0sqUHs;r+]tpo&u-D3",Zb%heIJ0B(O0P3hVST(MAN(k>1iE*N`'s7`i#>^MX`g]*;WUFYemIRhT+]p_jHdNncXmH751SMJri=eLq\=0^8!-LEB9a&k/;TlmPV1%So&e]#mZ89ReP'uSR*[p(bRX5]oVB59I9#Te!IiVF)EEgD)G'4`:n]HJhr_MGmnc1cM;Jgd+s"X.pbSEVkP`WGeOc:X'LG142%o#%>_F)3W;:>4Xl0&IOqO6DXu\<39mE<OLr(:uHC:k@3P$aX;-1#rO/=&^f)DMK_eK:%a-@Y+Jn*Xj2kf*Br@h<Vf%lGt1@[Vh_L6;"%Q"MIQ.89)6#Kr,f<b9-id>@Cn?Ws9UbJl$[SKh3Mf)R"4$m.g#2([&3oe)<WUgu-a0G-r03nW6fWPnetT\"@'dI&RC`0X3mDip)T%-@^-3PH23T-5j5AWB-T$/lqXpMq,?'#,9;'\?+NW:f`D9W[s)F\K,]na<AW<CLU"uAtX(P+JOnP\f3$]7TX#/V7hW3`FRu&\M%=Y%&$8miDc_3t<s\YI4%niO>*g$$5A5qq9^,*=8O^t&YG@-<cjs8$$1Uhf[p+>73gl/shB_O@a$O]fff%3#+VspiO$:,/8'.Um)QO-c%XnB@`E);fGb>`T:qYHc"^6?Mhg\=NBBpK8sT>Hc(aprijl9II.Q:AK/mErZ8],[K)RS;5/6(B#lGJ\og5:MmF8#-:H-a`DL/UB[f%#fqEI`Y`jE0Op3hm'2tHqh_[Np,e]@rit%.d$qJl;ODJu_2/TR?p8IK@RWg7X.icu1-`kh/*'jVR+S(_q/8pc>oFW[2MiAWi0MjQ%CS\\nC$LJBPTDS!KPRYsS^mA/-J)..<Q)[?5K%@i,^"d9=kNq7%6N5V&+"=X5>Q]kFEsG\$^/=&R'(kFYolX8-O!tOI%DDSd3j/:%BI9Q-.8ro#[,F9`fX,&\]>mFhp$1V<RHX&^9(mi28I\@E/C]$u[es#pOrj$H/c5$N"T8O4PA22\PuS2;&[T$*St_.YFd7mQTcN,h%::G'bT+%e8W?6=f2+OO[7_V3PS$.=,`BiJj4Pneq".I#\IeCf'^WJKbeGueu?JKi<`rdU'41H!HE3Y:Kl`:0@XnjgI&Pk$iLV"D$%2sXrNp?5kMT3NB'?ftrF>>\IIHu*ULWa5cm3ZiC52cE,#De-@e;phuRL#b.5j?!'Y'fXp2F?99h7@I1>7Cg]s]pV,eU_*0`%0Bj]%reN./F$D'LMMuAdo!;YoNV:%D'D?$)^F640Ik:])4F`'ujQ2DG.Ear3p\!:OM_b51hH$7+D5_rS4aV1Z[\K_O[\MX$[M$X!N*D,F%j&R@Fin@GE9#)qr>A7Dk%[\(l&/3%m6l3u!#.dFB/$H70S61BSO<aehGDCZ`[`uL\S#cJKX-4@u^VAj^qa]Z%?9PiDnbhY:oDQ#o%T8tU*?X=]n?$uG<^THRX]DEs'a$34kRm-XbT7`2*@J0!Xn`jmF"am]QCqkB?IB`^&RpPs27dJhtJ)SRXp.oRSrnI#\#>[;XbY:3L%MRWHuqXU^@aj[Y!GG";1*1ZJiXEIWo5O*_\](kL,eRP#n^&VrTq3kCHL>dMN!5%i5d8-2ora5K9!@7>LI=9J?ART<(q88p+LV2LB%*`)FCqVg>rZh&_3]Amk.heBUPn!rQ:A_'$En,9if3d8Yf>IO9BF3elN5?^>_c6'1X+'Pn0<ZI%Wm^@!#4b+l/628[q7j%]%Zh%PM%p]ooUr9*T'7mDCpc%i?\^?E8jr/o:HIlY@J+76(*;,TL>Ps3(FZ^!Wq<!fT#80@ZNFYA/a\UX+pQbW0's7u3$pr:;K5EB.IMW]J]%I!MF3?HI)q)Q!(g4JkJMh0;5(k)ceI0)7-#8#m/TG*!'[5J-dedH[L1p+J&%)9hOEg#7kLb8\IkOr%h[0;#\>NgO.Fa8;^7pP3Mr%;"C7YAiE9FapS+AZjJuqa;.qPC[1YDf3R/2XIe6!eSJ!L>G!b<$;HrQ%Gs<5qV*YnB3u]$hJjlLo7Ts(OX$]`X>lVqkp4unljC@^%>]&P$c=q%c8>Si@OkSp0Y2auGs2RpV9BPBYajJf#.ngGfJ+)DPO(a"B`kF\6k\pJ^3d<r=i'0aBfbLCVhjq@YioKZ[#.F0Kn`d@n%@nX+L;u`K0;Bu2t38N.\(?XpQCY/)LL%;9sEk5FZ;.Sl>Zdd9QB81^_=8lt7jJ^7jgmP?p][E\grd0kps5ucKe+`lkFHujhWrj9E%VoZLLs'9%bX8aD(+(Y<1WdNTZ:TU0nrC<KB&,qKFWcM,)'=1J]V_`"6#-G>`lGUrYaO<dPJkW8khY[/U-`aG3%e4.u-s2@qBV'f3%aF)u7d1sg6lL<s9GB@kGri<cg4@N`j"s?&$fu;@dR6FS;F:G3E',I&Zg\kt2:UQDgLNYU`j"rr[LS%BqV071-`C1hc=8'=UIX_(`%/q9L!md'JI(?GVY2l>!b;Itfd9cSjRDM:b?kRskJoT,0Wo#iWaQ&J2)rKV2AIuOcJ8<"T4`*:[.%dM>g]s$G$p:TffoZQ)pk=61_%>j"I#CU5kFTDc14o&Qtt>I0nFS1*a0jhgEZ7;C7eS18H>W;J5LDqCHFUsK%oVR:#'o8_t+pSU`KJ&]<oe1;t9OA2uX4TG%5ak1sH%4:B^kp"&g9md3cXobtfYO\Qo!D]fsEOq$J`3a.Mof.6n$m!\+bgpjf\I0&2uOu*J:TOQ*QC_Mt.:lmr`#ar^7MM+f&KVA/)qr9m;%?/Lek/X=SBDUQ/kffAeMDu(te>(a0dN?o3UCcG2LKQsQ_bs3o&T=^;PDWIb;ll+#'2G"LoH(:A?KKU%ff39Zk]Oc]p"2.1\[U'.%%-7n#lp4Y=rc$VcWn.t=J-4"':,dWa45[h>r%`3#3`iM!:rUSL9=^2kRVGXF??W4&se;QY()PU(LEF6'#<G(Pqe]#rB;CFi5[ajN:%2I4MJZH+k'/DT`j=ql8`lEu%6))7V,1KGDpI.$'p)n9)Ad>E`@/.[C8>MDk>RGoe4e-RUWUkm0fW2a>O;lE<TDX;,>ggM.IB"f[6%)?B,lF.Hi(X+?PnJdGMu-]@76Lbc<sWmF.*AUrdWN.b1#qAV*+)GN;*btp+%-)opi.'hpQ1b<]Xi_hrjU>dHAN)6:>D,"55a%tAD%e>U8cKfa:?>OkZtYW>AP7C>XXkctFjZk6>lPmp0IRu1+m_a,,B=f6s/NcHI;Vel8T`A?dQ)0U&,ges(GE1H"a;,B`qQ7+6j-b(/n%EA7O:@[PH.jQ;NE8.[<9#tINsmc,kmC9HdM<,]nfVk2,,Ls,iu#obZ8'sSX5H)+U%0pq*Xm#Xe4rRI"g&HdAJ\R/@=VQS4>/C-u<%0qpMR(&+!h9YDGn6B-,f7SAE>NNG<2WRWgc)U30(89d?9"KJ_)B*McW=>jqT1O!kq#@VN;I%8nV8Cf`^n?U8qSAuGfdaVH2ERehs%*^3u%)Mi27_G8k_GJJIf$kRO]j6<:)Z#UIG,3.r&D_;%gC`]E4%Ct$k.4``mg#7U1&_k0ie>ZRue=4ZA8r9L^)]>uBKbQ)W8S=9l%Q;m3U-[?jkC3@XN;&+(ge<Q7E+3VfDT:utj(]JAkZfHRBn-F(*<4l_0#@a3mo3Aj`r<U5sW<&L3NAX;T\"&1.GiC\SH&UKDR4;LJ%MMNV(Wkk(Kf[Wgi8`:']p7kYp,EY/'(6!Vf1gem=Z^Bs-oM_;M4K-`'W'43mBln!)A>L\cXLtO>!3JBK[I'aM_b<iOIp#7p<1Y!#%B2P6(%RPe5k!fYG_+0Rm1<nk$>%-%pp'40O,g7Zj<!h:q1)*jFp1[B=C_LS,e'8&0N;f1b>G7Rm+tV,.TOhl&S)js#J@LQ_E3kQV%Z$sE-8^alK?ZS[nd0LQX.1H=g+37:nCqLJX4@>oA45<uhXl</ckcPm^\0*/m0u\MP;^TjAFG*(fcph;oNtj_E>E)ePic_UZ+T`nA%de0^dAnS(T3q2Vio9;Bj[Mc:ZQ)-@H6S(!)gXOAt:"WX=JMi5MLF0[+Cmdh#`5f]?.^(O\7=>X>LP*iPp\=7AN6co4s"+<;f':O&%B70!%iQIF_,K.'YFta):\=P'!*(kcU$q`6JBnADVj]f`5^_"!1iX?'2)2AG:]Autl[51k`V/fNqFXC-M6:DAT.&,`_UB6(+@t8;^%7@O3/pRN)I"5>:BeO$\j@2i'WNZ6\$7K/*49L`g0Bk:AmVqJI3]i7RcF14b/7cY*2PZ%k+?'X,PpO`?D\r+cWm`oAqhG>Q5i]')B%d0:Iofin0/:EI%rlK'I![j'6l@`!keLgfu;<^!]BT2#\,CEP,WlKWB(>e#)`)oMV=:=,.!XYSg3W]:oWF0_lJ;5qf,Zn^:if4&;Z%"-SLg=o%8WPp+aJ`)_rsD&)D8R)#^eb+5f2YU1^+QEfp_MFs0Hr%4a+JbV]`Z8Ro@,;uk7"Z:,J0a#F86_(AVZ!iFtC*IJ0:GQh6%KHf'%7sus"3oT9u2F'o7C;Q-K6@eW2>pWn2ZR!PlkKeq0o<>!N./8(?;!$XV)l]X08iW_?&i-@i1&7$Oj>=l$Ahdb#2R&Ieb'fLH%ou9ra;>]L9XI!srUblM6[D<R<Z(6n795V64?C7H:)p(fu2AI_R9I;s%\2NqfU2MI#`NfYY2]PMh'Hs:=Hco)%"_8qiM=$c'kT<gs%"W*ljG[,\_r"Rp^dj!$sdRnLE)<B8N1"igPs&@Ym&rhjj[gh<%N">*fOXUs=:qE-:15Y56_uZ1$d6C=,3P4!M)V^K;46I+g>&"ON%'?X_jj&h4qU[Q_2,D11;)hEofr\^`=1F7Y>9T-ib6^0m+dup,qC@mRe?H)l0k>CI#G.^X0cQ^N[Qt$0>TQ?;3OM3^*d-dMK\BL*Y%?<'!-&`eHi1\1V]<LAW76ubVV]+"ogIoQ+'-4]1N,.E+l>\HJJ"V$<k6MA:?BZE_dG$DJ+WbrHGC`620%F/IJM)#/=l*a1Mo0O<.%DDK=WBdk#"_aaY<:R860nZt;kO`7NmN#'D8WRQ#-pkI3j7[`Hnr*MNs`0j4)NRPZBk(%tmR<.SQ]jYOHNP\#J0/h[l$$DFOAq=?c%B;L]5Sd#)X-[YlV@Wke>XsV=`#s-5//A>"38$!p$bY/@Uo)l!mEt%B*0,]s'F>XOd+U`'T78?"aUomR+CkE^^B,VDN_Ye7j<if50%A#Q\hj)"8s`m@1#Gr*]S;rp>G67L/a7$&n=4S+_<P=S0s$jnbH3].e5+^aF!85gI-V7+r+aHVpW\)QrEjoGF=K9jsiUQ1`>Y;RCR%Tl>`r0ZlndiBf/WBC5(oam:"M(@u"2:p--HZ?B0`.a,@Nks%)r?E*L#cA_RFS`e4.=0!f'9Ysc[bu'_p\;Mb^b`%<)8XH+cWhteK%1SYbT,GR293)3U@no8<."d.Nb%bL`Xq"aB=s8E,L[e&Sa:ZpLOTO$j[OY%G$gP8:>aj]_#W%BoJdD(.@-E?l+Eq?BECfB,_-FZ=Q%X*dCF_O69V-E,q245;gPmI)'<HUg658Z)@QqRnZZDgtpTpnrs!RoS,tY"]r:FN0TFj.FIm/ktG%N98jD;$qLD8%hV@r3$cQg3qtY%&Fb&8?lL%&=8QXelMJ%%nSb>an!(ZqQg!#4m>:SuihsmZ0@P\>lt=+qpmW"FDO*VHn]f`t:0cU:r3UHkGVn3hIF^!iI[fiaU^#"0%>oij\o^CsQO8@ho5F"7u0R98Xpa:F)@(<Jj5O5Io.^q@l47hQc^L'BpqM+Om4.p$WQl.lA\+OUP1Hka#nL(mBRD%M`Cr&>]YaeW_%+n(1js8'3M^dB)kpdb1<*u,ulj5;jkp^)P%,YoT*kBWbRW5'rGT4%K8FER=Y7r8s4aj!&0Q2bQ-j';%>r$+)Z?\fQ\l)[r1`]m2r%"8VbfM3[`WV3\_DrN2hB#MWV2I/QSUjnaaO<G153i`aG;rJ,aNMfUNf7(en)#jgI(T\nWp(O50J)ufUP6Ws>UfjF1YL?lOhoD\aZ%i37OqHh?(#iP,(Bek)"6K8OiTAA5PIHgborqu;\:P0QrF\"4Z5&,QUHpKO#lBe=.=+8+3o#MVc!Lr='<rp4.Jl5^kH%snPNXc;:I%GgM=P#<"%qZfDqZMLE4ElWtJ:$\TlC<M"^s9*taG/A#5H%dM$M;1d\dn;-gfO1N]X+4T*>B'[g#?(?*l>Pl,4rW2u-HTZ7C\VE]7%j-K(/XmO"LQ0K#WI81kZ/\JD[REG$oLmfD,ml0uOf)lNWLK/gu,'tE]k5KONUkRZ5]B\To<J^FRfMAmAOSc`9c&iN\H\X\#KQNM`%S`?JRlZqsgW.3ad;DW'=?!6P**qYJk.oWeQK;IuZs4V"7>fi8i7W3fN7[B;Ceh@hl<pSchDlk)Ln'd@XD"0]ees#"g#Q'mVFI_#o%_!9Au8T,XjiR)VNEFdD#r=9.ICJ)(E"uo/d7ie;4GI60M.JF><jW[Q^oK(X]laMmfXB+IgASot`$0=opC%6F%YbV50rrC&kI][\G%<:qCV:p['k$cgUmWb9)m#Q/Ogq@d)8L&X/R(@RKn0RpBA.Yc0AT`ClQ479rSZr[%<pBMF[miM-\[uY`;chfO)NiRdbN`YZFDGHQ3%f].Ba+gJt_mAT-1g;M#pB_oj@d68!RgE1\`MM<U+A\g<dqM/G(pd4V8)K@:@]e@F>0E'JNiVlEDPIdc`p8227RH*c"Z^jJCkHOL;%\l@e*2<dK_Gn3^N?t6FScW@mkqYrqVoEu70I?BG/n+)A=QGD#=Ugu6IjJ@0L)fFfr<cGbL)7R@bJ$hU#Ft3*pe?.,&[e>HIT@W_-%\['Mn!ITo>XAWq]f6qFE[r"PkjO:Pg]g&4O`pOp1U#@(B8EBH7]pLdt)5*g[H)uecWGnZa=r;-o&,N2%i@j>/Y3'-`i37&F;9pfE%gY3Zn'54t%XcQQYiSjGCj_+uBmqnRlUsHM"Cn>EQbE)[9^[:(5-E0pp_ocfq$W_VaIki<LG.>;4Hq&\)rYYktL8Pf;6"bQ4gi\fI%W??rPkllfgeE`0S=['7<Whf@uCq?'-;BQ[B/FWO-8fiqWF9Z0L?sj$S]@4LY9W*(\.RYU9/17OmB[O#sc2L$/o_JbH/4K$ke3YFm%,G'*C[EL7IZ'q@..C[q/dQ?I5aeohVhtHM8,UX/kh-a/->C/lildlYC@15R_#Q"a16g4YI.-=6^DA;i3h4=7WmpP<t\@'jNnC%p2%.",V2j>k?m-rq1AV.t_9&R:<WEK8I;_Ch?Y2B\ct*L,Y*@(gc'>5(Cp"*#7RN2$1`)JnkZSRPesb6OqJ36t,q#.GVE`:.Ag$XoZp%l"d`D>km&mrFl(AE2j-u"L8:'hX!Wc&+,5B;p#5\UJZ.Q#FfSK#(tc]qtG/tqg*:`.!Ds\37W,Gbi-R]hJ'mRPh@-pfQaOOOI9Rk%6/U+>B">*XnTaQbCcP=[YAV4NO`h5<:@5D:7K$m!lgWj4SmH/VJ.);#(]t_0K=6^.f$.?^e&kkO89ri:K+K?TMOUPW[tDfg=tM/=%FS--q[uY]ZV[Pgl<5`iP@>cYF?7f]X<oIZjE;Ri8=TYBAW6LM;VeI6,^64U?m%7lO\_+[B=%l@ZT2M(91)&LC(7C`<f(pJjmK#>k%K+h]YI-25se"9@#N!aFjP3m(T):tlmkP=@rL%gC]du-9=EE5Bo2t6IT#t:]#ZEi.CL[o185q'$Q[XOcV6)i5aq7tt:TIR@a^NjjX%-s!b>b+2c\'u@*n1p+^Hb$l4[%t^eY;k#`-D(6\]rFem-L4_daZbsh]2@tTCa+o)c_g*HhnD)u\m""7)1Id6\NdP>S7K`28DZ1FI%E6!FUo(-$tAAfi76:;u-6b]()1$s(].!uX@LHF8fAC:-HZ03S?:%aOlW9\s8j+G8KORKP<;469K%gM2IA_B([P48$]I>K.(+^[5g%'"8XJY#b-\[pGM+Oh$U=-nP7+A8W`acK,\hN80jtkY<\8.VJ/6`TAnk1LElG4I6^DiJ]&)Fta`c$$+Yhbei>f;l8CSs/OUPWj+42%aTYG%V52dDG,h?i+t!_T9:]-ZR*,Ca@cBjPOj]kh`7j)&)&s^F^cAiE::B%4mHq9bc1_&^@H-+k?uX?#$H`3A(tFJNYJa;=GL17K%II4KnA)/=UZ*X2/orkRt^"-W\G?!/JCSA0%4A/^4M0Q#M42c("VS&h_7CTYODS8$jHKj=Br)lk`+2d-i54t)iE3D]F^b8B7WUgKM%T%i,^cWYqDaVHc"^>C0Agc?@JSrJ27S*(Z9X[/"4qZElK^&@oGp4f"14iA@n7.&E/Q\.)$QYG'Y7Ljr28SbitWS'IO*UiCRhQ$8U%_F7fThEOlV)[G-p@QM)o$UEGp4C:fZF:M%R`GB8#IX'_DF(`!4>F:/i,C%,49.nX(J(7nU\_[;;fnH&];d,?`nJUCO(W"oVeXj"Z%dk"hJpZG;rpMJ<cKC)qfKG+W!%BgiGp,:%WS<pFE;^Wo.X_S0k;>[8EEabNneh<Xl2!)GR"[c9VPNfDa[75T#00;)s:JM@hAh4u3%GH(35CO!'.HeW8oHYOnPQhE=N8CJu43i(_KkLH$mk]8EUS2>4@Wo[=\1M4O"jO+LPdt]g&Z:i3Sm/)7A]lst"g1C6.`kcW-GI5fq%UOR6/Drf74+8#PGC's_&T:<\DA3uj[iU<ZKOB.!''j0>K40#Z5HB]JX3q"G-X5u]'LN;CPX2jO&`,P2/3E1J<lXTJpBNnf#Iq&F=%a"lW<!sjbia3U`Ne:\NO@f*u%FH%,jK'ftLa1LYa^$WYpH.5jM/bmAS3jSaC*&.gdNm&/]3Gh>MD-Y;h]K@,#%8ZDBVbpRh,"s8A%g5d<pbMFrQfQYb@S]^!6-l_PL5Hpe=dV\2l'8\n:FU%3V]a/9DB/*H5CKWuNFABN\*jP7#`8(@nds:)1LpLp\8`o5!-4h!lMYYgZ%"%,/S][kC#aGh,5+ki5?a\6VkD7e$he1M]?n"bpU:!HS7cSg"7N-Y2>mpp*8A<VR#M,Nbg9@).r)Wc5c[k':r"d?"2p\)kO]BqEN%g1a;\>-Gr2g@K7CBO2<8D01c;Qh!s&C+RQ@9,?jXFQPO(4Pg"/rnqMj@&mYhS@,r[gOJm]pj=ndqY5m]p2r3OG@ddu*_(T"h3N`R%B=)^3rrU(&P5m'nKBabp_.dEbd!fo:58\+BZaAH`^&Nmdj_^/j-_,q6o2>!;_aIJi$"npH/KZ"gRbP8RI:m\OBrT1bPhC!7ro<P@%hNP#/DU,o+F7"/>p#L.6ouY_=m(rYVYL?kP/hJ__R[glG^YNZIrha$b=O:-HB4'H/q^B-:^%20VUY1:[NI5_34Y"J31qaMjLYZn)%09ae%ZaW0-Dp6L#mN9^q5#f#2`b04n>WT*CQB11B4F":i4-TA>kI9p8h<;<%f=ob'>1n9jmH*0Cn`fu=rM/ei%s.!iWQEHRE9317%EqK%e?%(gZZ((adC@9j7g8hLKmT-^-hH8HLH+B3TI.luVB5PB]o&N8O\`jX21HUL:Au?0o]/R?cj2[&kpG]S$``ZE%T4s[8[m%II%k6A8Ff@*rF?]X?ak&99F*1sEX2r^+kZSV?Y]e]6labTI0^O.$L?WY!dQSt0_btSr1Id=(1?.h"j]^BVXO,]L`->m]PCh1j=k.ddc%DU3FEPH-Y**`%7!3BM`X`Su:Fpr;-Vb?)F7hUq&Zi32O;$X5,g:!7NuX-XoEs7U_aqr@80ggL':[AeeJmuKO\X&m&grp-o"QbOkW%j8/Jm&$qh?NGH-bml\10/)Pc)B04FX*H!0oK8l`&k0A)8C>A#*+20#*jk'A)X!HDhhO_L4,Q5WCmS$;Kp?)YUdp9l-S!ENsq5'K0%Y8/J.m#^kFoM/c(S'MU0hOJl%q/0B<?hqLfhVB+uL@4=G=.k_#qNZN<#<CV2gUXJbWil/<F!Z].>^=i4eXO+\Gj4AF"14fm_agk`%Mi<Wcl^*r9rqkj6`L6"pR9'b,:%A&$L!QVOogUN1f6n[q]R+j2;K_GV\Pq&MlH[W@c#8Y-Z6gU.<8WnMXD3Frbq2!Y5'R.gM*'$\%W1Pi2?(1).@Sr=J^6e,oqV+JPXo%KtGO*htmgHhc[GU-=qMSuB&%\D$G1OBF*-IkP[dg<&V@q=+-i`\u$@T8VG2`,WHcJlLVUl%.%o](t8X;J;T*a"-0)0WJi(H,Ef<,M+#c+@%p^G6]oc"#cATAl=nkL.u*MmEWn?XKVXO'^XP%2IRiJL9L7R(PF</3f/P11XY4h9*hf%(0-?RhnFC!G[dp>M!(MoCmt?G5MA$ggst`.g"U:4QTK!+8&oaLNbD>3h(&Es_'NK)AB2En[l^@*3dtE/(FQBR?_@@uT>+Z6O(N9O%qZd@i;?,mOgPugi%O[4#qjgO+1&&,EWR$J>W=Rb>V/LY*N.%JJ@eKWd_p4I,F,q+"\!Dq#I^m,&35<$$L5fhu%dqXPoUT'tDLJm4%kO%&W[4?GjBG_[9.f)rPpNOXSeC:fB=I:AfRXR,q;`e0#KDq<%]"``?]e"*Y:*5NfjS%$\E,0q"E*L4`:;)"SY$Y=Xi46GTT>%m0%,Ph.XFK\1nmju4Z[Z,`]:Ne:_?cQ5cgctYB\_C9c]\L3.I:m$:<3UN4JaTU&)Le*&\[L!l>UZ2W*ZL`^)(iLFin.V**'RD]=7u3$%deRmnYd*fuWbm7kaIm/So@8':<ldD[\^l$ifY8TQ4mP6Ro62e2T7=Q%mQ>m'\i2N"9Xt'"e*L7eou[-SpU)u"))n^A[lW,)#!Uu@%io6m%QbG3oA97MA1o.GMO^BX+j7f+[dtk2GO;#;l>aSdN\3j/Ap50(JlecU:]qZ8?[BhnS]/RL<rG3.K>sa[]m_aejVA<e[ZKqE=%GklAicP0`51cml[=H;+^eN5uZoA\X#NHFl*5K^=AHS;+K'>"YEYKaWA@D(8JIkAFG;po$Vmh43@Q!!rqNi])WVCL9"5(#?[A_qn2%NW-Lq536_Lf<t_"beGLu(TH3'kOdB8Xsnt>BI2MBOQ<*sXG:$5m>b3jLj*2Wmqd.tC(*ZVNb[NRQkX.rCW(^/T3F0T<>fksXl/MB%&QL+.)dSk?fq9(_ET5e;nb)J#P8PkBiZA'a>t9e#'`L(-V)\'?Lqq+'mBt!CQB*',9;&4^<;QcT(f:D,iY8(=h7(6F6EB,7mTMUS%i\9KlJ"$AR4U3PD1b^RXQQ\$F;$h;Orj#d/^WQSP<_hosB6B-AQW>A5^8oc\/6Y&2=@V-u#qHM%1C?&JQ2?<oH%468j9@Ne2cY4-%MNAbP/[P?BDU9fsUIJB>:)p-r:od'/W6rs_P%Ya`Q/(mI#(Z'9L)8D`s8E+p5$reJOh\WR4dh\<^2]&)hj@jIAc>JJ6giDc.RaHp%p3$>Prl#:s%DsWSl%d1TB4Sfm-'d@<4+!O]>@/FL=SZoc`*mc=?9[.KS;lR"Z17_OpHMMWP"fU%RiFX3T3;)6[!#sQG4bFTc%VLf%+';T&opZ476rYk/--:1;j.$sRn:b-:9p(m`,pb)QkO^V=rN<ms0q6=(^Kk"/,WiamEuklJFH[AkZ12;5*9@Q,P?VbqiP"]ZCh<$5%^[lhkogNNdBPD\Lk/sf_nCPM9CcT4JPD\PTII^qf=F.IM^%5c`mO;V4._==C"@F%TU9K_X&T$O;2dSW8jR8G-GF&hXHu>sWP<J]F%e9UiS)9']4AM;&ImN4XW+&nrkMOl'%rP%Z>L\BuC_s*QkU'mGPTX$\0nY,ue]CkN0p"&icGLRoT^<`9n4&M@%SXp7\QjSh4b@J]g%:p=Oem+7dUMqr<T50\"qe$j45m>c[iq"@0N1:d9Bc_#+c6/7]cO/amWFn!4K76S2]m!hrGTl7I:J@jVj;qLK+#+d,b5?"6KjP'O`%Rr@G-D;W#_?0Ni';ilq(:q(?rqF$]%N7>\m#:t==1qA4[K,)kuX3N."3@Ur;HIqe156.9=(f4i'j8Uh0(PJ)9rJ1!_d,rTlc_'Wk%h>;-]/P=&"<2Ar[O%-0uG3Sl#OX.p<Ym&nKk@`VQ(H:eQrUn.4]"Y^_7Nc?Dn`7W9BaiV6RB&CsNN7Hsj+eRT()Q\)5HF<p\#?Yu%1\oe-G=B6NZ97mJkq)AqB(p;1i#f]OmlYs0qJrifIFJ2R48\M^Pj]Tq5E/\bY4)6-H$%=t^"jjFb^Y%jC&6uJqk$(*T(SdO)JhX.%gNdn)6MmZbI`tPsVWHjnNk0;Rs554*U?TqY5t%8#ILKr*os5['nMR\%d4N7o<GgKa]AJ'\oA7[IGMBo:5(!1cS'.$[I_?HHrM6cG%J+FWDjj&FGI;u5s*O#b99H:)s]%e)$5^)MNf>D*!EqtZQ.^eiP7ocW2/puB6f4T$:\CMFZA1AO'^:e[eoNPtq7IL[C0Kk4-hp3W;%c%@HXSOY%]`l?3<ic+4Z*YZ/KCNf?mb0E"n'02h4qY6&7mTf.^Vu>.%8$=$<U\>/hjMgF\#IbM]firUjm[F_Gl8>.Xb88^3Ls\;n%o'%[JPOrls0->DmcSqb6V]UECE@u!#?XDNWYGMN'o1eV%+)Z:@]tQXFja!tXlYHO\B?9\K,49pS:1Z^uh9"U;e_KSV]B$q_^uKDq%pZ+;Z9;6la\8_%oh@^mQpH*ICrS*V+`U*5tn(Y=\*isjZSUS7#X"kIFjR2.+fJn6ERE7Da!S8oNG?$DeTKN0dKCnp3G.56dA;.o-%I:X_<!_d_YY!'A_S'PFO<n>@>h>;'J;mc:m]=$5G)B3%N*'QFOA@%hN$QDkHf13]SC1d%[p^S1knoB2(lg`0Dg<(t$@6%=8IV*'_%@&c?W4FM\E_t<ZC@Z*)Bl3?KAKK$mkh75s;B&s4#..:LoI_,LNenCiDme:!bns<"UhsYFSr=@9*EMlprs3coL]UZ&W;DH.#CVP:i%>+?Fqf11:If2n9&YJU*:OSj?<DQk's;1I8EX7&eJGr'eo^PqK[<TTki.[_+!L,VjY`'pO^2qPgrMnGVG7ciB?Mt;A1dol#1ijh?p%V23X^p[-Yu-dN!u0O\C)]nk8fmVKOb7t[]9W:PCRp3XJk>WJ>3^@UQ-G'\/@Vsim%pZEXE^V&a(6XBMSHtI`c?$C#Cq9unHPrboo%ro98:j?0/LM\F;.<lt[9(QYR=\5He*3ncrLqr)IaXmVN++4>O_^HGBOd.RoU'h<\NCo]cgVgC@DrO;;mkhS$&laPa=LQT'>XB<+2%gZmdr.p#f/^RO[.5(5TIi&Sli4RX@DXO#^i(`T)rF>J3o=^/La.Hi>WQ<^gJeLX_N/QRfB[f?1&KF[S2b2Rg3",2Q;9<ZHtFXPcr%2eQg&/U'5`CRr+crhW:Qcg;@/F4#h5i!=X"Q**pM9s2%rlqTlMd_24)RCi@"aB&lFU8n`'o]LD#*A,U6D_AeLE9DXqm9H/^@9udR%7/K,Nfi`Vpl,UY;N]TBcKK!/U>UQeG-!)K`G[("oVW6[aj2L>&SfW"q^54d;UN[bChX#.JQBQ@6Jgd*2/,s/CMmpI@#S0.Lc,<.q%Wu&e6hL%H`f%hgB#Mo%lgZ.D<kC]2Ac=$)r:PXu&(XbL5ntmMThg41.pi,A]$.[P3eZ$NAG\^c.](>j*<TpIiZM\LIoUWtHh)RX4%T66KHKCPE/)*GT-ZMEu0[^=k=\9*"fXCXAAAgWS2^0-tcN]rTNpXU-6h3a-MKmeMj8jssPq+S]q?6Q=CDG4:oa^r2PJ$`umZfC$0%>:"sWM\AaqSau+Da&a%g:EQ\kNpilV>[I*<bU.CL;a2%u0So`!!>_ltFn4'5o,[\j_<fBFqg)a&.!5,G-B$b[TnT:+`ieZMdYYLN%$PS<]+(.Y!;.2nKPAaS+1iTALSCl!Lb+-&W[FSGKHu4-B.J(I&nEZ8W135KnUiNrR);hD6hbCi"j&H*C8p,K]pYXjM^]1"#rj$Sr%$6QB$IN\%(rl1W;Y>HK=f!CFKm3c7R7'F;)-\mU=Y"rd>K@4a3-"[CpfQb#8DS3':i:QRJaf1e^\>L*\:L<`$I'&H$\%TPe[5d^G%IOUQ+IJ):j/,3Q"=^BqB1>/DMQbUc3?7rsK887e6rc^FR]mo!A?6qD@r:[HE:HPVt03$c$A-^qeh<dRM>B@DEiBT&FIPbB&*!&0i%Sp='DHaL>(V-2V4VC9UGXc8&-iIe*cb,nrtojOQgH0OnTm`hfL6/+RMU5sY^?^%@r`Oc"=ARaHF3/'`QqF!r'E8s$6ge3^17qVAg%mGQ^a`N.&VrOMQFN\VWtZpda87<U$cZCpT=_;)M<:M7:4S'R,+b7bPI=9`%dlUIF2DjNhdKqk\AQYajg`tXNbK@cBc#dt(M&$B`C%hbA9ch=sAZEaq%ok'6^s-sCq@IqE4R<4l%XZEZ=dpuD5@iocA;(O[iSMs5.k=1ZkQ'BUCsgrNndg3H36iUoT_lg"HaIJ!$mcJk`f%qc;(dp;b9.UlE82q=M^sX&onD3NAG,qHcJh6/(Y#f<,S+psm8dS`9Y-&[i-F5e#6i4aVGPp#YVZjU^7\rL&_5]tubks.#71hV'@K%nc"iG?@R"g]O0^RP*2jN%i.AMI@+3.^"-Nu(ZR=_'OtQf@doUeoBauYK%c^,J,aAjp3pFuXn/Ri-+g`O@_J;jZ8TmOBk+%jPq9-l%`l<91ErPC:RI?')VmH9LNt.5+iRFOOhrF9QG@S@re%N#7CEoHC(A\DW\!@fboHY5UV%LJR#iF.t'N=DBQj^INAr@u/oPM>9q8'2P%mW"#K-(e&QEG__f\CZ!orc@K'gs5;TW@C.NWUU?6\CKWI9tt\c=Mq/eB:%eel\i6nNbqO8^BeUXrP!HOP&_k\(S0a,Q-]<ppZjmr%AVQ0,Y0F%!9R`A(Hs`p[5<6p(,2`9HRj<1Oqi0_*qWn-%)Js[?gjep0s"iD#2geA^]MhQ_:O%X'pse:<IIQU>4UQW*ObnP^I?$n)%Z_Qg=`"DjpN.1;=o+m>8(R'd;nH@suc^mpUQS32EOonX-5LqL&Dfs\Y/<6ppdj'"I_UQUAYJ0t@fA.?o\B.Z>NUtbeWLk[p41ob:%\@qpIoC2/?_J:5t!3Rni*+/\I4F*$iQ-&+XmDVkb0;h<bEV6Cb$qK)r=O61+04,O!@F_sq89Pa7lhd73pVU4fh=7<<@Je:a\Q\A0%_";[9jWi*$O@DI0q"N1q[JT!B%sD5^6j_;BhqHoJRo_Auo&/`@KoPcI:$a'KV=%@ImcCKGr$TEu1VlcZLOAgha/S+Eg3imVZHc1e%Y]!8/3l=^Bd1^/-8L?L-B5`9E0ph>\Xi9*,?Tom\pK%U+[qoVd0:m(0ptMA`L4`<E@I`X]Q$pCfWI=#Gq,6P?m4Wd&lHNP@E+s(T%f%7U[hJ_MB<sM.Z"5K%t(XI#,H?Y@gbKUtFhn.9S;g[lfZV0mK@`f"#02oC\@f8K&:<2DUs4qfFgqp14?%-I<2a[D:@qP<Um]@=p%@\_!6A.=UcpPA80s&_.&o_!4%>%`?"h`D\.,AHTN1Pbj.Y[t=cE7F1?D42si:VBTKI!#C][u'D_p`jj%T]q%LpQ7IQq4gZPYKh%O%8+/)mCE$br0Nd^PpSU/8FM!"mn@!\J,^f,l*"RdsAar:tT4JmuX64ZmPB_B+_F&#7BQYg-]!=LX_.?j@p"%:B(ge,)e8U-,Mkt<,%\n0$5U9^YC7A$ON$[WU+&bp&kC3Aa4fDhSb48\[%'D$=.H%7s$2*Y]67sJ#+/:,<ScJ+,f7fR_h)\^QnrB^Ig9RhF7k[1GOC-?=F%q[g.ndGjc&=Ao`tid^EW9r78B<m6&hr$N`K:KqAq"Q%K"mijC?FUPnMl"SSu&a=elT:VYCj#G9KOUa'K#aa]RCYR^B26jO_HZ-,?%T)]`(i&U5ATHA-kApRX7)n/>[0(!N9MQLO34WH[N3c>]'_h5Z%JS?8'1ERpnm1*dNk"U!2+n?k%UtdJM]u):q*f.^F5:XM1c[?Ri%S4.7Y`cEm[a+pgWP6uO'5<i''%lLM=V!tqF*D5?foof*rI&,Q3GnaH8rk6)C[>,iqP1/*d[Y'>MN)V@BGsM(Ocp%eBF9ma0]66mJ%n&@*+gHM%6mSA4.2Mi'ZjqYA&8l`7I+sUmcYp(PH9a`^Z.Oj,Kc4U19?6W&U#'E#Pnr1@@D\luZ=t5B`8X^<UA9]Dk4Fg&Y7@)k)%qC@G'hO5NbR;VV[BN)IegFC<d<2X3<N`lub[1lcdFu*pS&S!l<4)>eM/8;#m#+4LsfeR9\.:.'G'0pP!0?MX@95RtQBHo+_r&"BM%=<-As:SM8i(E&Kr^k]o;UFHYU<40mnai2:g@+ih^?eIo/=5*iu`,q<a>*(g12O36D70pm%PsCuf7m%7L,lkr^ZBS^I'=&fYj0:M*%UmL>1#+]aO"ePiGn^(J-'Eg-d`JMHioRSJTBQ]=n$E=[6-r\saG7t!hD&&7LVMJ6bU.E_/\mrDC5#p`iQAn9d7EW^3&t]r>*Do1;%fPq]te8o`2'XJTU`5YZG[A-t?8:jJk=H4Vh3F9`N"d@"P#b%t!O3"e$oHgt93%;V8p8E(:-n^20PUUA!Bek^J1W;r-h8SV@5`,<H%i3N''!`Qc1>UnE%S1/R'6r4P\Ej[A061hhR^4JH(dB+P$,E[/5!^4EB%&4+R(B)e)Q:`W)GSrg+Pm1D/LM75m(e#m\>T^p4`Y]@f%k(1H!&uKD]Y-UDkhXdGR&?Lbn\mmQDLd@,&k3Y:R'l8OIC+uM*2MJDuBI9"!C`3IRUtRkd>8q&n.l'5*9>%gHaBXi-8Lgl3LMVoH%T55;mpMUGZ7FY)-6It6Ahk\%=A\KoiJ"=cB$^0J.(GP!Uj&9M_]pOR"&Y,*njq^=\/=6h1j@RR]#!E\SoqH+nK0E(PMit%>)O5/g%l]JCSp5-&-H:uC_8mVLP3A1b&&';habc'j#@%QQK'\sR*7VFtu)b+*aMj,q.A;J;\_)gg=hF;+=3`j=E9WL'q6D>66KVG0AU_++n%&7^eI0S.aJ;]9+]Lf2UC-6(u?a/3kAkbJoC`.ZEpGq)_?D[]Q>`iZ%V`b:2fZnW9I+;ZcPBLrY$bU-=3j!iJ,7=(#6Lm=EiN3T5A%Pu:GgZ,#EQR3.^66luUpF\069aph3LD"HuQ,UU/_cJF)uS8:`Lk&Z]&L>N^`$Y#SuQL0W$JYJSg1ce(.(Jd28la\3d``VBi^EOt#%j]*sp'13Bm(38*ljbcH).#2D'a^'S,6+2^j,47:B5C!F<5^C;-Qf+Dt71KJ=hT<3AFs!M((_a%aNMgH[aN-tjR%t4j:f0O(,gE]1%>g]3q7k8W.20U^Mq!E&">3!;7a;s*DJ<_ZV(lEVc[nRktNM5;d.b^oD9LgQGj'uaf:n>P>kmX@T3/=4NimDBVKG?r]")9js.Cuga%"cXPIL7LB$VLJUjdu+aHe&?1C4c+ms*4BRPqLV2s6nL8;Rs#FWo#`28]H23&K9E`;`m@Z:=&;EK-V-gt)HAQ40?!FcVRRc/5bhbh%T5'V4qIb%Mp7+U?A/Jf1JdiX-ML+56`1=:2F`.?'-%It/-jU<?q?5XrkIs:r8BR;o/t%KbN?*F@I3RbaMSpF0lig&'%APsS+"l7.%d9gV5E>@gGlm[?'_ZZHbNa/#b,%?E?<N4V_B6Yi;`@AtBmW_,:=UBIJSrDQuVJ(^c"<4,'H6>eOj%Y[r??C'mq,A%+!tlmnI1b#B%(b8f(f3>Fc;>gE[++70(6]c7ELD-J[14luc.4NAd8p!LpAE1)W0($Dl_W9<QA&m+.9"WHLH01O=D/S50DXf7Lk(RIBKX?*JSWlXA%!.>qt&rcd,"#ch/`NN;)*[>Ghg+:Vtng^a7#e@K.0thTA)[ME!(Ze*\da\h;W)Ik6Q3[k8N&?+fKHsF?Y/u0`[WP2+:c@8U6!YKN%"JFl#2ds8#aU!=j06`k:`Xc9$N2]^O:^7&<<L*\*N)<3E8i%M=N6F^oQ-*L)$].^K6Gfr]-85S'$0:8(M@VHZ$XYuk#M8*PYfMQl%eRF09')<,5Mo3V*lbo$fCA3O\@:Mu='s.Rp<?1hg/_>,jSS1pHR[p4,O2A@_8hY4BY-ZDp_5$T/(HP(\G^-II)uS>&h2crIfQ6Wi%oZ=\:B:9=H*YQFJBBgnQMrU"5rdq\l*u/AX-bl^ZROAk'06kA%gf4[o,5!/oGNWieqNJel1]8^#'Ar`BVXFGH$`/*'nej2r]1nr?%U(2:Z:f0b_l<FBiUngOS3)PG;-`SScM@cocb)sRU4T48qY`SLN%[90,J*bs`CV_6I[Q6AR^ks`$J7H8FU5S]<BUaB>-@Mi1KF`3m%o7WM(8LW_f#URu'Q:W0u18Lpa/q#-G\3e0kKsL1Z0RFE`,$_(aKF;piF+guB%p00l#Bc7@,ZaHq/%7XmV=i#ar[\R`UhMnOd6Ra&%T>1<eJ%,GO,;MRHM#VRioUcV8DNOcd4-rNP;I[KmoUcU48;tF>=Sg@>^naT\592$JVZWdqoH-.:kZSORVl^G$s680V%=$Ii,.^nV%R7>9:Z<[6%LC+"F0]rVg.)o5Nn=O*k9LJiJPfOG(s-]+iH7\tA$Vs@okn)f<*@C]^_jh[QPma7Z5kn,FWUQO?+'6#5\Lt!krpsdu%c]Z:K+l4c\5S&1(S+q3>cu]&eJ!q$6k81ngkYH2nC"Cj4)G]BT0Q<d&oPQLFYn0tB,bZu)Q:O7*Y^s`e[c57V?bOV9H(d%YW[oD9%W<8tAocJNnkaE'EVlgL6T%%cBRrI`G`H8r!1o2["SHQ+F@a^NFbe$bHRqhcV8EFq;*GLt<,StW,!^g]>(Z(@]oK\eA^`pXZ3_Xcr%LO"YgCDTN1K5dZI<p<3c5JD$YEEuV[*9g7>Ud_)`YSWkk*Ijo[rsURWbD6)A4uB,J53"4%7;R/-m5A>SZJfM8(<A&h(X[7q.Bq2t%+B53`Y9fOm/1-_@FOi'E"T*"Na0l.l.@u2"fGLYT")PPA'sF-.&GF?3-l4af`7%]+"qmuHnWd==lZ0NIQPl8u%#&CW8lP(W,O`jG%Ah5dS#.>f9V8*F1Ye>kmS,<ik[Wm=-(&%!Upar;b2E(+8"Hm7.ACC&A6=uH[qmJ"_6]tP[,lF#l:6p\HX0%85W*DZD![uK*QI%nt%<pYVH.ZWhXq?md3PFb@^^DuABCS)NWJVrf\_u'lPo:-<[7u@#+G5`^kVP<LKW]61pdp^+)3m=dq72\"=bLO$,4#^.\XL;8*]$)q)%59hIZ-B120-&$;6(6MA@@a]$qbWA$n]0c^,F_i2*MBc37j16k4MfG6=@`ge1d<;UJ&)fGf-6/r$X:M*,!IG+d!K\,?P?`FZZ@qQP%krLPSRUE;M\PC3Tqt7Yk[)dtEe:@]c&<\EG^u>bm,ttSDIL0"RTK3HAC'OcAn`3kmCc=oO0DNj;V53t+=i=\HPOeZ3.['DucWI#'%d<SXCs-Te?ItS(*20Jd<j[2\:;IpI8:l@meC,,/t$aPq@,/#J&ASDh`0!p5kI[(nP@?GgGW[J<MESel;?kM?`*@<nI_n7(u[<ohh%<J.+I[+tGf/]W"E>`A^,MmcYG]n!Prb?hd+$Bj8PJt0"i#G<p)5TN,CS6!LNWgn)npkXKO-o4gn<aED#=;lP<Bn6^b@YG9dCfCE9%4"SD>rE.W&OGX%.WNoVpk!26J/#)TlgU`XKK$,_:G'<]jjF=GP/8-T"V*7ttM&kg-8_\:c;tA2*ZI&Dkprd%$o&&O\'86jp$o1S5%$#f&^^WRlL@u9(G6;=F-a>b1epSZpl<*G*:1Pt$mKY+UAn<Oh&cI,&)kII$Eib>E&",U%5prY2/Fh(b9\&:R"S0^POE?5A,VSe)!%FI;`K8PFtDOX1'bE@Op7S)iDIa$_]99Hq\Zjs&JhZ%5a/^-sp_SJEFZ,a]V(\H(Y80o(7+r=Z-/^_p_h>&"9C=RdZ*Y^G%Kp(oh=%:5_OWH^DtV-Jqs8-@ca*F8=*P;3Y%MAG(FtcX5Afs#0nFi'm``.8=bnN]r'bAh4VJ!!YU'2@PX,/"H1\)T$_HANMa)"qZMN_(@F^%9NSXm9f):]Y&0)5#T>9Q^l9tX5jmSbgn7O&d($,^+;I>?a?Ul6%:?I%ZmMOUnXDM4S`9>EWn1KhYWJ08[Rqi&(s=V$QtIJ7!+/`u%`T2tKTH6Z3_tqAT*?.OC@t0JQq8sj;";%.+MekpV/P$ID>dece<)A.U1aPlV6o6#07p?'TOJ(].1f<dLQ^L^i?g.5dI)Sdam.V9Z%rSD"d'5L<>T2G_em?mWDN?Y+[B6h*['%ukJ"ajC.DquVCk?CXRI#IeaChrd$UT"I>^2I0EFZXJVEk:0D$E>+*`Y:`%\!ZO\(A")!%=2,%e2Z1bdD_]rD1[8%5,eH8dLT<Hu%2P),'FkhX'Fs^B%Bb-\H.!VH5laqRq%bOI%8qg:_OCo3b$NJI7[N7#rXE8>=4DhNa(I\P%OXfH9$sZ7gblrG_/LL4L@]Ml4o6RQcS[UI`/`iq0OC4u"K`rDam?`:&VlO,hT!CBolk=MHq%at9FV.pK51+sCCfCPl6n:gr'!3:k%fs;N$;l/2epK+T`.)e*,,"Q@q4D>V]+2oj0aGr7Lm8nhn,?dBRMeE:iI@dlZJXGT]##S$ig`U?WnT@q"ethqRKBQ+c+K>h?)!]_%%QXBVqIUu;&\B_0,E7n*5beeqZFZRl05T2<jQpfr$791,i4>2:r((M9S/86KA#[(,&<j^5M4D*Opkr]t7]r1n_GsL8?J37ss:qBHK%R;]sI?Ph21]$H>J8.+6+r27Gc"*KuPKGf%Sg`5AUW\d/n_LZ=[oTQ3Z0$VKF>]?.ohLi-/i^00AE/="W%MMUe@Eob%g'(C%+P`oj%<OboLOK[I1>aO"p5Ph_a..5#HE0&m05Pk*p[.q%\pE/E_EH,W[O8)NV8g!=`k6^__])\Z<c'&:4"[:FE_M@+Xe#3\&-n[4(=l;Xf%,^lTnV%<5@4#cAmn;s<G%LrQeEorj1m+93uYs+DR($/u"%s=9/Tal.H0ZS=q8H@[B@-BstMc`po_-+`^Q0)Ce?TBa,NMI)-M"%)J%'0aoSc4deC4^r+:51It@OI0It=)N;d9C%oTrE2<@Tjc.!F+=#4?\]AGH-mrlMN)pN&N\;H$[cWAGt3\VT<#T./V</-b2DPcLIi;>%>F$KcYAV;sW@3hg`AA&3>c7f.([=3X?I1Rg+[KBS$s]akbVrt@YK?![*GD%4V#]aF/LDL:`Om;2S8"E+&j[9L"]r1q)OH_U5o,>:%-ka2&i+n,?E&kM-_'7<[>"j6=Mg7O#CDTN1KCkh&<p;n%8%s/iF^8=g>j+t)Tes@U%>%q>oTosaj[/9;8[DOZf$e"WWPcYT;MY)D%5:Ra]F[eP&:LsZ58KB-j%\jm00o2s-BrUWYJN2`K&@%YQ@:D0p_q_+c=1^^;?$/hW-ZpE>g)\dffj+$7s"'2bM9:JLU^e(88KDDe%=cbGVlOo$SaCjI;._dneM_Yp%QMX60IX*:Qqajq.Yni*2*?n;Y4&@!sGG%18mi%9a7><r&n&QLP@)\@D_D9sjZX:cQJ(epVRCC_g%7hYh\?9ItC=:bA<TCb@jM5D.3W(@%<C,+s@/`p=^*r=9\!"qDUVh=;%*@?1_)=iIIQEOM(Pg\[QH5_PE([<^56652/@9'i<**%,T%HI.Ni?ao.,/sct&>F20`4&,;tE1du1%b+t5'.-.Pj$8J,WlH9:"/RI\V<,GJN,$<&]Y<BYRE1'][#!L<k<Q;Sc=)07S?6*A'b,1b%SYL<=J/(Sg!R#S;]RHFMs(Q8A9&j6WT5jN'^W1Qt8j<:LqFsZd,fAZE]+(.sRgsN-:Fg8Jc:.<'.5B:?)C1pb)b:C:MA"%/Nqa>J%n"M?Ur2,1$gU*&`I]d:631B-"E1;k,?b,:./scr0orfh/8s1_r4<5dHVSfJ;V!@KGCa&l%jO-^KSiXkY]W"ReF\Jf#o^?RMgd$d9%h]hXX^B<TVIg<PPr2tL"<()Pks,PZ]`%$L0op4hHH2Y;Si9,>Z($0[Co6c<1IpE'DCCBQ[UZ8.P5ED!NiH1H/S/1_aNtMGXMecNS%j^U`D"pq3FUu0,Pe;8::PlDJ0-5'(/8B5F!krC?X*FMmX!$#!]9R>!A*FH;;\1X,+]`:<1PWr`,I`VC<Mb1Zt1$8O8A7q_OJB!Ea%R;_@)a5'X]DsEQr"NohR`I(m7.e6;hM"CWVPNVrdk`>5fl6T?U+HQOa=pG(1E?n_l>hA*1lhLKUo:20VLsG`eaH%DBs/4/nr^34=%YPHoP!;Ga'pM(\CbL9.VK6EVA#OO3XKQA.2&1LD8>sZ:AgC=jn4"%=A8U\Q]S%$Xjo+hoCTcGHi69EC3BQgck`)0OT"qi`IprXVl%2+_*C/HBHF`qtbT,dbJ-8SEmio?98Ie2hjhJYYa8iZtnK"qli6$X?>(NgJXCVgp.g68emK.o>()i';dVhpsFm7p,pR#f)<Jfg<Z(%K@Knc70#>K@^A1Z"2J>S!'&2GjZJFT3F6:%?(4aF1ss,>Y`K\%AO8R+QNI5WTOKJXJ48N!Ya?C1(A$A7eh.M(<?2_T^iJHbp\`Sf%Fhu69BKD1E?iW/[$il(YDHrLpKGp%FD?M'eJApRL.+<>WVd]WkEk!RG%fhO/,mss8,n#M(AHuGQ6l]VEi#i"MVHa4`nHPD8(BHoX%LbX,L1b7T+,#=pG1[h-24OpGu.!]4FiVu`AW6cECM[7A^1Ys8mS#<uERm?W0`,)+@+D"%WoOb@RkZqbqBaGA5HrXf")b<Zm5!EK`%XoUWeV0M>e67fJuec6>*Pk7?u?RP5)NjH/pr">91_F'?p3]78JMD<M/A\UN)AuM@BGQ50(dfa9_LtHdr:Jo=pQ.)@NM,Ak&"\)(!%iqXV-V0)_I?L=,lP8;clW5Ymj4(JARARoeZUbjG8(6'^k`G*1W9.H.2SKfs,]ElT8TnX"%js9.0E,tZ*GU3ZZ]opeH,=b<7j12*N%1!6Sd&<NZiNXZ&k@SAUdfl)sXV5-H*+G:e8KTcUN[??,iMGmkJmNfe*L]a;*<CUNY0Q&^EX&TjoRoE<c&Lo'V=LqI0+fV=sZ&_r4%/Ki)S%3%j^8]s'NA896Ul4E$&F_LQG]T>2&8`&$0/B<^"*,Th7&7?5WU&iGbKA;DH0$o[p3.Iojd#_Ba0Otq5eu0]_A7^;$Vf!Eg%^lm[8S.l3cI1(>K<g^JfKN(KMa!rVoA+iQ6MHofqo!C9)JK:fd&e.t*)h_a$;T<7?0Hee!_b9ADaFXnb&kZQj@fRBbch<:@(TDNE%:0a[AHr1=":@SO(TGh`+KPJ/BER]7QA6BJ"B>4o\p<1S'[pTC+$#usW'KaiUGto!79$O<2/E+&aD"Rl#Zo*Ad!&T(["t]?TP5@6\%-B<''8k%_._1GRNlTdm".Og*$A3h6pcpj=G<[?\Cci=P$BOrSqW!)MPE#OlB3u&?0:dKYp-kscOQGZ4%T"67j&>Fn<d>/N&POpK]%WaUX_aL)AVRKKBdF.g!9$58`HL]g+N'G4-Sf"`ObCPnKPE(R0F6;cq*[,.!U+_fRK-nUqgfNBTZKRbOMUhOm<9@N$j'2;R@1l1F+%D4;%hUk5+.OU?,pa&D0fPNTbL?9pG&$&k@?So;KffTY;0,`).$o!+A\I>$^NOH<C;%EsFnbV:K6YTdbBhk-Me0CuK/#>0J?OuM8O%+.#gLkrZWHNb07SbKdH.XP4H2STJSq^N5FJ^u<-DO$ETb3V"8joZ,'M5Q&L(3V!jHa=kp5(1d>`I\ES=$s]t>L%d.V7&W]Y@E(+_%6^\Bki-KH.6<Qk29?E_sMG1T>$O*]bJq<61++*J@RLkRUY5o&:Y@UHc@7ANcWf'E\W@0(%=WFH\HT@c8mgU:3hIeml4XA[_K7Up_%1@n4"aa-j<>!12!/Z!3_<!><71THgRk*cjCVlpR?,j:We9fNa7j`_m>]094,H:\jJ1kAP&7E&.NQ'0!9R4C]Xh#d.@2h6M\X<]-]%Y]@-nG`;uL]gdARk!5Q9\b[W5Lhd!%NorA89j%B6,^7YX")cF;$JoXR!(mX]5];;g$IMfoW;oQE7BFAJ>mEt0QLH=]*1ldsOSQsr%-%g7D8IOZGBu0_fc3X4m4QPaB!!`O,0diEo,%qP<Ka\]$5oUV3W0U>j<DhsV/N?%g`3NoO'HH*>_EHnHY$hE`3I1GcSQ%`i?6u1L%YE?3MKDuQ0Kst'JB[ME^4E1hg+93q36kbm`]&]l-%KR6d^E?m8">5_p1c*T(3ouSY9(OIK+'D27#>31u;dsDcO&PnY6jG3`igfpA%*f^pSPV(<SNYJ#9<+I!Pkn8#a2h1u:>+pd"XCqbd?7gbBYEtboM:(oWQn(THM4]U/9aJhhf)Q9^Y[U?a@7ANc^C)u/\5gl1]\*8h%-Hq(Y$KW.kqhkH3a`Zogrkj;<$,]'^XH`;uM5H4ic")prTYQ4`0JHr'@rI'+'-?`:21U5aZcn7QX9]_4oog^6A$crL&P[Ol+uJE+%N[*$+-HD$7]Gt[RZt`?h^3V/?:PRJaUtD`)lpfbWY,.]qb1[`)-M4E2bZ!/I%RRP^:UXc0cm6M$>=kMGVPC(ZC]c!.A9j,^&#?=d%r]dhP3(H>ZY2J4U5f-,dTsU32bhSa?nOb$s@d@MD-nWG*1`=docl1TdK"P8"&tGidZ7Loa0nBYIeBpR4HGTH$]E12a6@j`7Tg2%T%H<(0D1fb<gX!m0Y&ef@FTS!f`I#<*;4<!8e"U6qtpR$XUO`Q5:aLOV>l)!b]'AHE,m`C21F@=@*G+b$qbg[<$,a>Tc7YGTn&K+Xl%9+fo:,j&fW5Y"4IYp^o7-.*jWMtSul3`#kr#EHf5da)%>HO=:).aR35HQ!]bT<K^_^d.run?:s5@2dTS:J3^kmNCb**%8LZs4B==%f7H7-FUb!c16+6>6H+F[9$iAZ8Y8SBL)Wc*(eE/.67P"#;8dL32PhRU,MI]:.kD5[T&%asDCcr@J1+@!Grd@8W!*9[\rXO(>S@1E%eCCfhTU%=[J7ZJ]9G\B*`_f?nPU[!HP%IC=%^_Crr(_tt8V=-No$&tVG)nVcCX>=5Q+06D<iCTUY7X@0<sbQ<Ab`)Q93Bl-Ztr,s%QF]+8OI5-&[U?XaP2/okV7_p(>)K(AOcrSY_*]A55qt`u"dIGBQpM0?nsGM.%31%o';]Wd9AIu@1aZlP)Y9i]J+"u'Db"8sauUC7%$dYS]`Q=i?Q5ApB1.C8j7C_<pJ^V=ocs*K.X=_2Q/J-(=<$#p:EM0[X80/FLTI=!"YY$KALde+fZ^<RfmRq2eI.\QOZo*Ad!&T([%"t]?T6Fqu@i=oq*Yk/tb`.e1g+YH4Q1tb".dHpt\EX`ZgLmOF2h29\qiKPLaFim6p3(]C0S26_=G)pmZlI\@2L*9F)A\(0:(Hsa]%(CfSG',ZZ;$]=pXOX(*n.Y-I'Z>esRJ\g:&S\9`!ru(VLSRaK-G#0kT//X<VpTa2IXpGVaqAR.WJ6:r%'355FU:T!F8#[9]3JCXa%+*KKONp[2ILhF;RaW][)jf<T'oji<4G^@%mr3W+!rT'Yf5sV$O#&k-('k<sEbC*Z:(Hq@<<8shQKM)0LTEG/RTd*i0Npd0Kc9+.]%M'f<;"Y!b0JnV>(5:u(a5C)I]&<Nfn!?;5M`LLVYMP*7a(N%$.D$?QShe`Fk$$2cK6CL<"a@79aN<]!a=p$_i^kA5.P3uUG3:TrT%"(;dU^FU_VQi#2K+CDg4*,Q.XZsK%Od=>fB5tF4gc;ElJ)%rnnB5fu$eg`[\*$D%R_Zga[!q`m).=38/IO)I!6"1n^Jmu=<[1H`+%\gB8$DR?Le<\48FdegXg)hklAXHV"tR%=on]4ihBQ\VA=lKB?YSQL:r:AUP'Y<"t\=.N,GgrDT/nSLh@e(B0T=cHog[,N@Y+N]ak%7SS'29_+X*.s+1r'cKV&k"I:eRPn=&LkI:#7)Gspih1m:#4I&hi0G"a:`s0S"ql)$9=`_6,j&fW5Y!))Yp^o7-.*jW$hl0?H3fM(%h$,G".MX9MK19?Ji)T\T%h2q)<H)jZT4;sPUj,R5ae[<MJQoBei)e^ShDa(&"QH@q!!BuF=VEAdr7@ce&QrV6nnF@O:l(a&nd=o.%<Yfa*Q6Y*.T&D^gOI-WFW8,Nod,:04WV+u<EC[93CbET':r4nf;@%[ROJAuc*<`>&:,Z%-TL!l?4\TnOF&h;[oW\M[5]NIclpNaW%W&+gR"RjY@"3"`c3.]&j8sqp/P)M`-K+Q'i_*G850MpQF^9bEu*9=*"@tOc^)"S1rp)Cql1!'cm9r\:mbHW7Uiqp%a?(Z>:$cFf+%KB-.>dLq2Ob#AcbY7OL4:l&-t#8Lp/H6\i:;X3%)T!g[<#dB1:hgf4M6#IK[VV4g;$\`8bP+Bc_L$5US(S&9eWfWE5Z7cO&0g,jQ%4QN@#.eb]@6jSJPHA+i,A@k5-S@iXU6_:kM2@-OE0@>C3^.EK4I6(_K8PG`a22R056)g?8(E<b*9;;[qe+l=pXq`+"7uu/eLkCB#%7)\0#(P.iea('_D3]IC2bG0!pbG%:g([c5tKUQm?Aa."GiE/p$&os[jgfu$CR=mA^'c;6:,."Cn,54^l\=Z(4#?HBI2AIKcNW%)5%$Wj`k/.$m.Z,?j\VW(1sD]*I)cqhn0rJ\/6P"W6[Q<[2QM7&2PA&naI8#'1JnU!"eg+-$I)Q\YrX]@f<%_dP-^U#eE`9V%M/#6CV%b_Wh^_[Y&jdtau]Lf>B0dHSups7`+f.ZuVHqDu[].`C$*,Y@tr>kRE%eUPp(.^CJ45qu(%*%8M&"22`+,4\:G"G@H-%Du`pHJ8c7%S1SXK8Rn1FjTWUB.Ti?e:uH:E(q<iFZ1j`j#m"2olBl\(N\TFAA%t<'(V;XT<T;f&</G[FSgNbH4lO\!HBq&EkujRY]Ou@"otJtW%_bhqkiRdH:kZ@L`$PKb@eM4Tgka:oM36phf]BFr7TangU-e.*Vm2Y?Ap)N<<nm'eO6%Dr:o*m[aH:!9W4NTo;Ia-/hIV$h_+X'Ka%*KuD5N\TFAA%t<Q(S)h5;X'Aj>SM9f@(%U7bSFcgPT!2F@^ns_P>Vl1"<_]HAo^VM8GK_kBbr6e)D-k=S)qBVG/mT9+@fW<(`4jB%QDi]HhB8Pb^*G*ajK4frOLJ\Z9P;<o:AfTg):YmA`2r`]j]9Bm#,`J5X](9_X0\I$d;plBR%pej*J>h^-6'5F2p(LV=qDCj'$EX/%>@JUE&F@u;**WIV6E-`4&9U>4XZ5!\EkLB7j^)qU^;><bV_ri@'([q<TS!e5*/[4U*#do5e#0Lm)Gq"e?,CaJLrLo$OEnZ`567"9%H(tt:<G8<d]`&kL&XAJ).`tS!"r^@,!Cp*iI4ReSg5p(=1cD!O.]Z[93jXu_OQ8k-W%u5'$mTPG8IoAeiFR!,LJC0,[<8:_"\&_$%/rH`=S<hSj'mrf(&@u$nn50r0S<Wp'3uZk*7m(o'@,Rh3CVBtqIpGY_[-QR%P'N>f'aq2X^T_-$2p:7&(5QJ2Nf!QT.kG&<PGkBF%W'aB3oHDfb*%KMFD'K\aoJN=p&?WGUbubQ78FOD#$4YLpLr'N`*#K)!$i99tP"j)@ScfV98/,D"iBTD(8m!)@MT&sP'2hG#b.1LW%ahct%3EZ4"Y/C,`4QPaB!!`O,0diEo,%qP<7B^G4`JF'D'dEpA"^SleU^P,G?,sm>E=rr8>Ib(r]M^#o?7TL8ae=0'au(@c:L=2`%#f)<VfnPbWPPd%DVhB7s68)g(816s/0F>>G8sGuU@"S8:)Q[HUiV@Z0N'0Tr7tQ&\,O_*"pYLQ"Fp'/UCd84KCAAS23-d@%o3qoc%Ya@aSWmG9c-lr[/V(ea.Ue*fgN`P^nL4TGW#m&Q'6%F7^qKBNE4[h\7JpO+=i>CAEhLYHF"=E>K5R/HIq%W3UGr3V6_Hfupn1tLi%*??!,+:AN0;W9:4=It^)M]>T6\E`:n^]bI;11XRk3oV3o/.JHj*#,n*$O/6)II+Y'CI1:H^'6916'aOYKG?e*W;`[U8#\/.fh6b(%#lmc&SL*bF3CHE5L(,D?"mN(3iq?o->mZ+rY5Cnc"2400/I9;B<l_#fZs8IQ/aEjd$SSeM*fF3mr<p9);e76ais<O^`qtHPIB(^4%Ij3af1(Y5h#sft$<T%j/!#bUJbg*S[$#_+iRTe!]Z31[fAd+/NguFX"C76t0phg]?",8&HA#,aZ.Zb8iSsPJZ;8J"FEYVUFZP0jI%.`W-/>T_.SBi6/N1`g8=PIom-jQ,>7Z:ccLi:/J,UQt%.(om,@jt%-O<]'Q=i"/=D'_.+1)(s\ild[URpJdG(GQNFo]8S^E28>am%p:*tRLW1_h^aX5V>H)!4a>E%hTiXOtA2;T3TL,"n;Agm@GdUc'O"&.M'W%Uo`YrDXR!]'j6_F;5MMF_nBk]UW.05uR.Z*Z##8XIP%>i1Ht_]bHo_aU7?_Ld!RH&oc14:#:@L8eO$Vb0Qk*@pDW7EmW00`fD.B[)U7\qH%cX@t@X:%dP`#$?[17"%(-Dc45A>X24:+pqk.%oHaeo/'o)1)?eP?b\^p2bXYO0$Rh8iDNfJ_6.Gk31ZMCH.G6"2CJ"I8Dd93-L<Ia)]OZ[s-,<KGQ@*'Q9%2qj1P?*_3\&8+"^^Q2%0n&UIp_3jpEqne'=Qe4[RliR[VSQP-GW221Vn>8=Lo3efVJ86W8Os&Wb__>#54OJ6jAT*Xf!n.$5s1+f&$oiI^_%Y\+fU+W3U]#U%$/T[\Y030%RH4ZYdL_gnD,'c?F9gK'oQlf3kB/5TZ0h3U%.6dR:eDm.LDmNoU!elQ+i'f[DM0XI),4[cXJKpT[Z7.e@_e36OAZoH%]E*[o9E,rHG#NZ*f-AM#WLO6,6.1915Cp_^3Ssa$B.,XedR%jumsskGW<emmqJ[&?MT33dM7"Ogfl3pHoYHQb+A\2BE6\BRrZIi/%JL';g@^]SL],<A1\Fj^Ks+`C<(j6'9RpbHKCQF9HD74hb8!=3[8CSQE2,lZBa;g:H1H_V\n)R=d&KD%p*Rr8XF$4Dp.a02IkSS;R%H6]"*8J4]2RT%.d)qO[Q7k$Zi6Cir;6hOoC`qBQUKVr3,j26ES?BS$&_[cA6'(Jme"ttiVC>>TtC\,gq%8)UVFpctM-ih36+YLH$%H*$%72C,Jn@E@I9,&q)M;=@!lCeOob4Q=)rg2)STO!oJ2T$/`m6riC5Nm*__p`r(D5ansZ-RFg.i\]Z]3(`(=@5P4i/V@2$BFq(2%Ah#U#9,VK([#lr.$Ru=tOdb[M9OZ<ee_N@.,[!N9d=d7%0Z:K0eDs\e641I""MH![-N([O/(n$E9foLZXr^j1ep#._Y0M$5A;[H$%KlgkpYRrsJ&YQA9`.@Y&%j@pb1.ES9T\qu0$o^Q55^jUpb_;T]bfqKqB6*:U1!Bo-0a3u,d@DA;',Ege:6K((/hY$,KJ9[dpLrW=%dQBJ?c&kjq1:.!Z=#g8AV\7$S&j0NP6&R7jF"Ad"U3:UG\q3_7Gmb<(I"(_0geM-?eV[lKELMScVb7Fc"To$S%_l>GgaKJ0%!/c3%>EOUdHHg#\8/80j+@UN=`ARg`O_$e]<p]$j\3(T>4:R-Od&%M"jd<+^r+O=R7;9DdS['=`*DfMHY)`u:/g4+QB&Aa;\8o)/;B+4[%Y)-%;p>,roo]5<go??&,5_G@9>"9Q[EPXd[OaoI^K'OX+j69H`2sSV#Sa6sG[7)1!c1,YfFD!'\HQ0&IViH^'0mKJ)`9[IG+NM*!%R"3.CR2I*)V66[D*lk0(&<3'9]Lg&J'/UQ)e+;O)8hptB^_E$43FtWM`",b0lQjmLY%uhOM:]%(^_F/pr%'fn\04#Q.-#0_j?Ul?%m#99K<,t/@!]PlW-0)U?.l/$Yp*Z4YamgQfY)j23qh'):<QZ9Mk_l7jbF`jR7,4XP4tM6?EiRj=TJCR]5"SiIgFMc$'KB[jR5B[2%AHZ)Z=1;Q_F%VoF(>tOh;utUlh?+WK[L;$%F0`\3=(3HcHWXs'i1(Ci+`d91!S$LZ;Q7$VgFP$IMAqm[SqnuG",Z7Z]suRG+cTr-%c?ZBdEnUM5cj9^^=s1[B7)_\bYCuktq7/0Dlm)hM=c7*/OdSqbj<aV:.i?U"V&<]S2nq,.`>Bh@1'DT5#fageCn`bH=)#YBWlBa<%rRSWm=#XVRB=WoLR'7edYud;7XA/5HQC2cl0]\\P("aIeXW^CR]Q#+?\N:TN>,u[OQ3_q?(nbR+:p.^:1o+ZO`tWb60/4U;H[tpd%G'S7;[lHb5gPQU";ZmKSbn^AA]CELTeFgmJU*HQ!IV->(/j,&S<)?7#Rf`d-;Q7O7ddVZ_co.<Y&l88<o'q7OnA$X5H\IEUi2^sW%_S'E;B2hN6>S;:2oHrRT]/;pt&d'[SpgQim#Y=K';>"@<ZnPi*@0NMfa@g)he;l.fN7bFDW5RG@S3S@`i+0GK67k!YRrSgOr!J'[%6%''JO!GQ;'LJ&JP^FDfH(5XrItiKAj8Y(A$W`dcn;U,'1gAnJH68=&U61*&2F'8!:Y`4FE[]/":W[3*`?>P/Mko?P%RClS'/Ptc%``+Cs9r)5Tc8_tW@dp$6kmF[(%r%t<+mEP5nZ!'@hD0<Gi`bV6EGropZf8W`D$pZ&#$#OR>spV:9!+0i20?8AlJ>2U8)*5<,q>cU%BM<>V^`6DoPC*u,TqFkSJf[Mg!3\Kc@fK4%)p/E;;]1b&dO]m3rAJk`OLHQ(Ncj<Tc'+`h)5Zi>1k*LXEF+Pb9fO.\0lg(rIh9>%%%;CO4&eA(u8GN[:09&ed_`PM5`>9)NR$*.pb;;Y1H')1U6D!bG6tXSe4a)&rRZC3Q>[u.1-%ZsE?%P%%O2-&W^BoYO7/BEgL7?(A%&`OQ9;5nb0]V1HUPG1iM+,&\:PYZ;="=8(.R[YR/_<.,h(m-kP'_;J:Tsr6eQci=AD%_sd=X7[8^^MqWK1&=?H;dsc"#t<%DkQ$?%m(Ijnb+Y.g!66E""IJV`(_.6Yo3fPk-R'")/r+P.054&Kb2I`#5YQZZ_.<FpknfGcCT%G?$n=4rU0>H!R,^[So[cD<QY$)`]1-B6%K93oh+F3'MbkQ=R&i2p('d6)FnJ(R_M4$Cr&\A$p*TJqFJ0GL!9KCChWe%Rp=K5*3(j\^05pd#N@jZrs6,H[DaA.p6/BnS,oTR1C%o%?XLN7*B68RZk$W7*]H"20Ps(CJ;/Sd9k?/U=XaqEi&bPCe!VL>k%G\k8K]f`o*R'Ue<G-^g(Na)JK.;`Jm[?p6&<F-/SJ2#\+k%k&Yi.mu6S>(fFJB_!FE0.1+8jP_@Ua)#b`F##X>Tb%Pl#_X!s'SZlPCNs2\"V=:aG9jYYuHZ%k0oHYV@`YpSk7a0.l:0c/0EC"_Q%.$2u=A#t]QRHNcJ7&Fds@d9m@69c"/GVfq[AoZ@D4VAq0JDLE^pRaEWYr/@g2^/`$>`0*Gi"SoU'<Ahe%JZ1:-srHoCmtL4PkiHA%q$h.,!-,%i,s_E.l0?t^30.0nY^6uRL5YV$n_]@TLVSghX0*6!HC4_oKN&MdggT%i/6BF$g=>=/a1]7s=e[NAGlri'r>4Yt&W$Md%.G!VsbGnM#'`oYWV%t1/gn`l]4u,t]:O%3lF'>"[$7(G;.^!@e9l3:3alC:JC*Cg5U%@h4HELM)\aj!+jq6LJ_]3C).aLA>;;2O*%27Rda-]`4(-X$13J7+$UaGf2M9M.^/^k"4925$J?baA`&:Bc:_XBam#"=or(5^dJjP!\YG7@^R*F&:mRljbaG\f8hPG:.C=++)'9%9Kb?D02\$TC$pgcX"Ft-H51$*98-sT?uNlN<N;K9dtaCnA/fV%JfBR]@kEW/'K-Rt?^ZOWRf]smfucGMUHCSa+GdiT3L)>r3)cV.%!J6@Llcaa;$-r]E84^OK)<QlScIU",(3:1QSdGNDSEqb/NYj2YV.=EE&i/sLV9[U<Gc:-NFp0ufSs2@<<+8^Xh^:]R@%q]I.Pj?t%"K==d_Ji%C@UasW+pVQQ'i-"MRP:AU+h)C;6?inZTjFIFEZ1Dc1Kg2t>aldUPkiHAq/nT4GEDH1C^2j2^^;2[a]T1V:uKIWYY9dQ%SH\(ci%PLmEm6C\XthP]:]Mia0aJW$$'6f/W<)0>^+'X"$$aZ,k3I'Kf@_/.#oZlUAD4uG)EB1nR?[PD&do8M99eq@$OW*+OKO@J%`)(h3N!.7CPD2J:m*hY*hl)7m9AEceeur==4BuSIltg57nSNU!dH2tN*7QrjSO(VTl!b,T0ah+i"FMWlArGYR><kLV*^o.E:0gkr%Wi/LP;F1)\UhEWEZ5i#,9Co*9X\(iF!$66X\_9.J2(le\JE9"Qlsit<@@$Mi5t!"/_SUq.=%Xkt-:9!ibb:Io&V4M\T#?N!WsM]9%.Go10g9V?BE.gE\=:4Y4VCAOV"CbU-O<r*#;\;49S5m;!!Y[,Rfg^otH3fuM1d=Y8hcclin4[%7jr&=5qLY]$j8UlBfg9(,2j9gS%9JLTlp%,1=!=>nl<mg$pZD?+IX0aK<*5oMKJ>D]KjrL5FXMo6mW?Y`I&Kl64@*PZ!E,?G!\WC<*&EQ3jPIq0oNA4&_-mIg.gFS``%rWAa,Z*anZ[^n3U6/7O"i&#k!=<QTp3o?riW)Z?Y"$I0t[K^&64C^RkVnKAk&][`2juOG#a1KZQ7m.QOVbG?q&5$rcPc%;u$?3#Y%MMa@17CXcZ\MKYjZJgkr4VD%WSLQ15M@e3f=3RTNnI[^<@>8$V)dond$PQSF(@+VbVFqN+n<5a6mao_ZFs(Uc_#>U6'Shlaeh-&\%Z#(+MCmR5&L9790Ce@XQb+%7<jB9=",1mAjelb="Q>9ImV$4,L##G(l+;lVTQ!K7""DgFS8u)=l_P_@N=Vd7>@RqQkjrr-P#;I`b%@s%o'CnIDp70+?-7`0mq[(SgXc$9U;rC[qrE[4>k%Y8Hs3eL4O'!LP2rdoI@7F&l1F(GVoWdRX1R7Y?5(NRDr@W!U1)L@8IXqI(c%;cQaFQL-AQ9c3"(blShbBdl%"C!%'X*>3F[#s/ZJWL[_CNiGd<#-GALE\RVGU",N%_^(/#X'#Ne_GS6`q6,J1,;([LT5flD_$J(B%Fd;MBZsROIoRb/DZ0[^OI"WI)'U9kaDK[Ds72i`gbqq+$R*>dS0c"`Pe1a\96Y0@C_)02);l(:!mR7tt35Phlgs;p_:g_I)lU[bT%=WSq%dquVr'=.a4+EbF5drHM"a)gKI):>^B=.jn6<2W/e"dVn=N,%%5":\Y8<hR*<V,X<q!TTHLM!(%N>J,(#HNs[Z(.>if$O`_9%_6L11aMp.c_2>Jm7d46@p?e`sT43p:+/4bQ;PKe]\mih'YdfccR$oDW&Mo.fWeacB(q+XNYii8/]JP\hG]Y6"mIr?`^EgsSL72ee%TO:#cNO>sWTBO0Q/?1#<,TL<b.,iuWe@i(>S54;X4OmX.W>&S#GV]_1!ed0U`cN/N<#)V->!>mfDrq1@b&]1T=HnH5eB!C(KTsfF%()aO\))0*3&70:jDAS:H0G']r8]08KRIecK>BL6WODo%jHssX*iM0@_p7#LYPM`u%Gth,)RJSa.36D&4M[JGU;'M#SS$!BoJjgAP%-KL)hs,a/.2&$.ki9c3i&]pIi^t*nP>@Mgf9?^UL8h=I$o6uY8]G$RJ%d2J,*eWj/A:7+(;`S;-XBieV@1Ju!fHY-;(b&m%@.4`K%R+N:WcWD?-i:Sq7P\ETqjhEO7!WNc#:]Uq<FhiQ+i7Q=qZh9BR2k@Ag`MdPF*MFL5TeaMh-YkC;D+;A[V%0M/U.I)Y$cG/IRhjYL%!h!Qk'i!\r$jm9"C8_rAFTSh8(1SKlb:^HIK#`&>I1Oh*ZkFBI-_([3YXd@3JGKXA)*kKdf:r%(]!Bl%jTT?EfX-*9,DPQ!N`giA%##h%4jQ.nC-J5.%_b4].7F/6l;GN+#Bn2jT>mLkI$1!l\A0=KV+GqCE>G6R`bP9_`f[^m.]Znc&W3LrpX#n%0LZ)L",LVqN]_EBa%\A"p.n`P.&XF/X-j?NkVcIO$qS+,R"KQelF5Y2`DS?^b**O[AqZ/bpa-7\YTe<3>tVN[Bk8_=r$&S%!CJW_Jghc^Xu1!bWUXNp8<%l/sE',A`_tH%1$pc&h(6!fN1r<KrqAeLQgeY=bGK@JQp^N8K%"73aAFn;.oXW<[;+]WUM7*;`P'lL@YK,qPgK;q\[52T>lfU7c#D%f/LkF5C3rMeL39[3JEb=aME.4G5P`\6W*(X7h\?90oJ=sPVebhbnl=agNsQ6ks1pf!>a3#'<XZH-$-2AdnkbV6V!e&k.1)+eMt;4%@8ue4O.<I&LnQZG>hI/8GP&qCJYCj].4DL]N>;[-`:2'S1<35m4q**]TF#-$)GeP7I_^_FjH.]mHcGPGnHgKl4N45&4,k&Y0aX%A%:e_t_N*V><YbFip,(`O1W[!FA-71KP(m$C[2_.[E;F-1,.#a,/_5d]cFtc.:\XQ-(@m3hE)Y6\1>`cm1N'TY22og$:mdF`oK>MfU%kViXZ]44Q$E^M82'QH&7k4RrO.I_23OIIHY`fRe]1iEZXRf`PlA$<oG/gSh,.hEB191+fi*"Fh1:/(c?)53FYfpY7>`ZVK7>\o9I%Rf]jQ'5H@6m>a&M_'X)GL0KpL]ua9Hi7/bKJ>Pl2mTUW9E0I2;E9S/cdi0s/CPf(7EB?g5eCkc-mc/35efh3cD!_]kjZT3]SF[jj%6N=^tf9f\VNET-Wnt[SU1Y_QQlTaStQKaHK"T=8Nfm;.opE=9gU<2S.33B)7hIC-'6aC"]i+tk&k`a)^g70]*Ck1Ts#EQ\dB<^s0%.QB_#U%(i<BS5L3$`u0e%L6mrG",Q&LI@m=['[Bt49K^q05PgUO8\?=F^CWSR-)$/.kp+L,!=VE@r!7=RO*\[Irit2U5G#QF%KH,%atQg1=riN@DLmfB;-4GTj99<rUW6p"*q`M/)BCUkVD!>&&W4j)KO"Ri&5.(=5m>9@d9IF:eI"a`l'KG$Htbm<UK38SNNJ:T#o*rY%#.'7'`_e)O/_4?-**M;Rc*C(Lb18`>a`LMiG%ti#Ga'*fq2\^r9(^--b"c,a<eG=rd<s`4H,t&D-Fj_1o4E0/+h"!3F2Z]2?h-ej%gjm6j.jHY&W6_pljs;+2a#[8ns4]WE?:g/-49'p3&*HB30gH=j^HC3T)IS'tMuigp:PQXs`WE_/")1;9rk7>r/$^Yj<&MdpRO3H6%*lQn_.l/q9/j&c5HS%XlYYrg1G^/YVp&T9IeoV/&P."-7-$iLCK3^?LCL8\dl/E_]Wd&SALmcsod+QAK?7QZ_F6+rlXgNLU34,XE%>6feS<scZ2<0G]LU%Pj2Whfei:3gHuk6??01/JB7WhifUl?t'19\C"j>2?,D'^gq>16p+cSkPk$0jLbnYf4GH8Tg+]\*EW5,m0$&%J@8T..U!/&^!C*CjOGJB[^hu.<'r`IH7FCg9e4EIi43X>bsdfWWm4>mBbTamfaT*1rh4g9)4N/6.9nhRZbA;NTk.+;ct*;ENpfrt%b;oV)\o1<h#%-`VJ4Sq6FM+Qt.4T7n<)4l:7?j>GJP.4VLp^s`X00Pb7%*(Ko*&'i@dO5/K_js+@k.'A;_e=V3AYF;f*Ba9W%;s`%fI@:kOJR(R&;[0s+>+FuSh"$o:=MhoM#>1lBsT4SWE,o+cX&b"W`)]joH>aJh^C2nRD`jIGimVCURP[8;?ki'g-]HsM!-#aa&fhR%c<Uu^<Bk)p^s2;aGUh1+8[B%Bm4'#LmOr14cit1\3@2U7(fZalJ_QjD8"!ZN75+eD`C._mkfKb(?=.>fjdSM9;!9D?/W%&(2JT`Z%eb#,4l8Zid7J@U`YA<TQ)%=jU.oGA1'5BD%IA<16Z<*UghWoptW\nLM8O;r_mF2/3%t,3nH;GbNiI;/K?l[ZN<q#r[*%s`JPTZK5%=CgNI@V_A;!6LcOF5E*tKO#2'`pXHS7::]RCSd5>`CnFJa<J;[>m`g.3e)\kpt[S;jLK@3!-Yh]X,<.QF%3'nR@<[SS_2$?J,Cu=%+._`K+OH;CnH7=]I2"=Mc"NT-K"nEtW&K9Fer#O7T&^7'27p3iR+B:\5:p?#kr/qM&0&5W4tp<rm#>)*fD9s^rHc4U!HHVM8JDjA%9*MK\5e<jhTMCSKJ%\dX>3ika$?]cFQ^?on_N3#\9'^8j:p005,,GQ0WAGcUZ\+Dh>+L5n$38a?1U4T?0>`F;Ksh("%$Ur^`fj-!%PY&MaftD8XSOV/@YfRCEH%V/KKRk?kPI5j]4"(t+GUG/o38HR<2HALd+23pq*9mcmMK39j2)MrR!('%=-QS+LGD4G5bTrFIPmS\"%=M4lKC:M+g7]4cK:O6PmFfp3an^qspf=Y.sTcq,;%fm@d]].QJ&@?81^r04:0-W0/?ipn25$O?uG8Om`iZ5iL7[L)&OC=?CqQ^#u%j9jNPU*([:Y/O_ER?M0L"MQMS]^UpFRRBKcK!(]=$rL*nF8=O-=F51k/U0cb;5l,b<DD?O<)OQ',?jHgYO?8MFo/QJaqV6RN_I.2%3&1kE0;W,Ah[GIQ$rqC>\1kg63.a`maJ5cmH/s"i8@Rmg,#g;nV-\](ltMLYbG<]ad;uC+RoWKb;g4d\s%S$"'bt#1+(k1GQ:!'i%])/^?l1K4f.'D.ER2$<tb3L4Sl2n%sX0INT.L8'rWI(>R0u^<JE+3KMGpVfX?"LJIl.>o4Q5:B<Ua'1nFs]o!7Ir399\!O;9XV0@%)AQWirb3$BR$1C%q\dPej]BB+&fd?i\i0QJ!$u0\\@0=3JSBdS>0CCHrDeOJXXLq6DR(0.L+/jiR^@Bn#+#kIWPC04pLr>+`[XK%%RLY0%:uea#_R[GM^PY$IQA`P=Ljq.R!OX_+;bjJQ7K5*'20TLi+u[,0$s<+a-tQF",KH5*"B3A>Rp$=^g4prbBoL240-cu.lSfBh%XS:H=V8:_TP.JI1j,f44?,^X_R^n^rY::XU32WDp'0KFmC?33tlfGOb1`L2Y#$0]OWkK@9bQmrR%q734\=>UbF:sU<%B,doVHJnO%*[ump^_l%&DUZ2SqM7"ti,]jhr<V`8I_N+F6VQZ'!/(p9@@@n9:W?,:'`=DQ;t\eeWmX:g\@*R?Y0h<t;,0iNFS.(@9ioKt,O]Qe%3RNs"(rk-ne4aIY;<uT78g\LnhVpt$j]*E2Bn-M5RY)l+R$4H]RMW1CQ:J(4l[G)pf".2HEA?&pM7H?_.fL)*maDOL#@F$+n/S0[%MC0\f7<09m*-gkE:jK0R<W8B:O1*5/.ss!5La%m9ES`m-et)t>PhhT3@oUiKi4X]#WZ<0K7J'klj9p+u$<-8G*&+nWUN,*"(-4*+%NSkG_:&s))P;&k6RF4:".f;8[ZGK_!>LMm2J!=qP;dsUd#TZsQEoD.t!iQ_e$[UJLmE2S_'(Bn%kX%"0.+T;TE'9#4YbfbY=C0Tn%%")`0F;8"]d0?Tol\$(`F%//Z%AZktOnG2sF-uUKS@3AT(6&aa/&hU?*Lmh$c9[oV?t,>^pVV<.?dN5<<G^U#N,T[@U5D#a,8di,%?<<7!a&L@I<M[Oq&q/;Q'j7_20k.k$7\H"1$Jf'UOj<_5o'TUMYS9g*gG72K4jAVJF>"jUZ[2JZMuZprpWH*76bPGYoX]uH)-/km%Dp&F7EC%YAgQ.]q253ZOpG.=LW:otmNfZr=lZQH%3%5?.cE?KSg0LDB3NjYuhsHJE>=W(nR:G$S,6/p6ZQ$=(Oe1+\Ve)Y;!72na%[#D62AJ85%Q4^RCRf2$TN54;3FJuc',BC-%)4Ibp8E3)c6%RcO6Iob^fP)AbWcd5=VfcMjcZ_kE[Z1p#XOI*Ha#X:[+rU$$X<S_3%ZQRN53^PNBc.mKON]]$?\qA$[:Wj#]>KZ6S@i<+lCXKe=f4@>[?Z8B8b6US>XN)O%h#sgnXs(<*Fj0_?"SspN4mpl4XNEo$eduZ2%Uq8L;(kY0aV^7!)le4DG91UG+1%O-5_LrGO$D3UqN;hJM$A,+5HsT+1//;M&9_%]a-b)(P'=ne]Bk'4jIE4''N%uFR%U&fi.A'9b%qQHp3CA%'0VTTA*NpR/bC"BI&)G=aUb@Y*URp\-f1P&Z2RHfnk>WIbQH]%3e]ejhN=c3A+[_oJd+"b;lMcXes]Eoj^D/C1pY\]/X%@d647-2D^r\^1bbXMcG.S]<HsekOE0'=o<@GCB+d0C`"'B2^lk0T"1WCP+T0AfEh=CIPin$3%*-QuoFZQ/u-d?]7&$:D't0XSNn?%*SC_LY.$k=!W)&-_,A`rb359Ad7\kJWhpV,fm'UqPt8sZ:i=t)nRR%i9P'S7T6QaKG0CCO7H(2qI9B*XS&DhQrI]WkP?;0+N==(t%p?[&$XHEpLF_[@T,drZ2Lo9sr9+S^--\&%%e),Hs^dSZh&'-D7Jc<#]c@CWV+TgX5']Ls8Hgu;c:#E-C)ar!-AIt>fh$7:>EFf%B%%kQJKS&U'>!>]m&>SY.RP"?8cpWJhT?)_[M`RVFcLT;jdi9\SV<$.S+mFS3D]*>+#P'6!KTGCMZKgqLt^+sO;R;ToD.1?s)oU8"F%CIWkN(371VZXT\/VRr!UGdf'1*(;"$,/AA52&b:Iq'eYnCDZW7_58Ud$$0PB,<>pbA[WAGY^5;U"e<3!69:R;ZgS9K@5WMDiJ\1.%[0nG=]"+$V6bD!^`$$q]9qnpMS-'Tb6tFFfJoXP`*uOa65H%!R5VfH[MF.iK,s0d"=:"X]Y.:V?8l7';.g8:L2lfABH!`q86Ad1?%;%=A:'V.rjOW$9k&r;'=44&t;-:k4>P9k"T&C<$Jab&E-GPgG/IXfD&rO5Rqja=rBaEM#ZN2fYObVt1eIa^"s4PCj!Uuo,hn]2fR%Dn(a0@qlflHu6W\rC_(P![NIag_h[k<JB^9p]D\XGP/LZ<m=)UT"&OPK_;.O9H_>qln#EGGB$MdX$GdrQL8+SiW2YVIQaf"kKMU;%Ab0":BJ18PR=QQZ+APfG7mB2shnMAKorAd_oqiALJS#Y7YrbV\I4-o4C.-Pa&'<gOgK<%;2Ha6<&mQM+$aJ>:J]u$-Ot\V)I68Ir%/?@moG5F/6Mt<%>G2-okSsk&5EaG3l35'Aj+raZCVIr-TCcY`%U[;JQRf2bm4'q@OLhd5Xl+N]BP7;0l+A__FA?s,QK/2,FTJ;;^%T-0>gFm`?>d#SNFe*Cf,pmeMYYGmbW<8@&tp\gLXftQcb`RpesAUd9=d[*2[s/T^\<\8ZDLVbmOj_X<Bm+fe/P[$mM5Ych"C%!M]%!tF<k$<Uk=;hnl31M_:)d%/+([^%/GO6X$p_g5L`$#2b2F>i)r>2J;eGdk[kIQPol3^)N7aIcXW>3&I25:uGY'P$so,(D`;CqDRq%RJ#URFhcu$0h5#%lcH=S\^Y'/fO^]jG>p!_Z^&`eo`mWuk#Q;<fm%jq=n?GQ+@bq0h-Yp6^2;KVh/(,aq=2R!b\"Qbm=$$HM.,3]%HW^()Xa.DA:+phHmI>T>BS?L1Qb0_2rBQ=EV7W(>]<`Q>HFpf,F6i3'5Bi16;(/Qmm1qp%O8ao!J,b:bJ,6&rgnNhqCsbKDLhD),%(]ERMU`m<ThfSj^:"m0)j2^n-!l<o<Hcb(RrIoZfJ)8N2%r\m@GA$nhp\U\?V_>UU-\(pSg[H#=QhYWNoW)iI^S'?rZ6S@DSj6;5%BSJc9O0J^qM8Lu^(+7l_.INQkSMV(@WQ#XH^QbBs7bJo?S/@A&n-@C:J@rUC'ngL;8AYm"UZg%U!==]5V$EQklp?=iPn&rV'0RWe%8%)3kkQfR,Ym^tYG*s>DMtkmp+t>H;#+TB,j6M.X7Lk]#c?9,D"c))NY""^,XXVa*i<6&,iChe[fB8h5<u"sP5.TD*!bn]>]4dh2%3:C:CDnU'8J9=QKPWjY$7]XlQQYJ'!=C]73iJ4$nTUrRS^Ti,L))6f<Q'1[fU'Lre"rHFW&6N="n4nOj$[oKT$D8E-5K1PbMA*6)%CVQrj'U1>'aZKW('p1LiRtt<F<Re.#dt3.HE*%.tZ]K=.WdBZF4@SJQS$]h_+fE9I93+;T$=CA"+98\O2-CgkKt;1sK7En$Vcf=]%C6\4@gmTTRn\#o"U@2<tZs-Tdc7k\"-S=(o3s$\l&2V#qdefkYn"`X]h`[Q;IWs2ALXOS:pK]dG1_XOj/1(q1`"YX=\N\:'Tqkf*%Uqf,K#Yp2+LX^?g"b<I.g.*DOk8l9)E6\=OUs6+3eapKrFb]r;Npq6,i&"HTX!u,hMXr6:G#%U.Pc+@qbQTg5Zr0HL<#jp$4uX=E%DbfpBarRf^(kKHiND9`dY>rXm\WuY5&mkjEKTqS_GnN[bl/'8]6&'H+rbW-DDne)#\=2\8a5ff-21UaP2cRtT_Q!dhs7*3U^S4;9%A_lNN>g]-jOADTTm`M4nZjd(%]QJ`l;([(hJ-od\2!I*hog_t<AD%T\'#mS&=F;*uZ"/0XKWG\%jE49FnLaYsdNXA<5Ue.7`sg*7%%K[RpHKH%(`mKtnDVc??ZsoDC!!%oig$1Eq\lk&/7Adq+@M:_]:cjJOJSg(U(@L0R7st==6/"16f!b>e5MY/+e3*G]Y_qk^>NZm/%[s&;UEB_*+]mU?*/7uhur8#Tc%m+up)]N)6J.b$>RZ4qf,'k*=$9OVDf.Xn6Tlid-gYQ&4`(]`c&".p/RI:MEoR=LMg3@F5VfK4*%FL!mVV[r,`.3;<D%Qk:7WtmTs!*.'[Kg-[/9F(K`eRVTmW>&bh"l;0k'3JBEPJMW:0A$::":P*j`c,*]rP:><(]d:-R>1jlfjmn&%O#;Y`ITpA]2f06M)J/;j$Y?I:K0%6hkgp\+!OII0i2SVg.*OaK^>sL9CN3[Q2WjC4Wp+-t(-mP4/F44b.mr_Y`]3Zc[?2/)olucd%$a:_L]d*h"&VV)sAUOiuN95/\._q)ube=Pg=>6"3\Zi>UPqDk*!u1(5/-QeX8U`4_:;U(=9P=Xd8VSY)DF=>V7@$QONZnQ`:Sf+0%!D2%%U?l&IFeQum@bNgt*mkr@UXUq&CEP`PGJQf0PV(HV9tT2iZ-PQH_^O\CI+#4mNki!>dat('<%NSr\r:(!c)6bb>.6cE"f5%:%HCE)sUmX#=lZ9@6/0h'SDRPTsDo??R1n+]4gXgeE$u1=Nj>MfP33_Xc6W/3GbAg$$ha4Mi4S:D$O\OlQm@'(Xr!"-a[d!XSg_N`N%eIVoE&fg&-G<QB/n5Zu7U\*dtl>>l^WhEMJ(8(W2]m\8TA'P!$;)=(/+=R[pq.=r_Q\9WFKVb!CYjB=Vfp_j;_hOP?`!=,=Y75r<%2)8#3WFYP@eg.meo\7gmgZs!h!%>\ZIOEnG\J;?rgO8ro[O,t_knt$#_:pP;JgI:dh[Wj*aR43tP^ZaHUt_A8nDA8sHTR$eLU<Cc%:VL+YH^!4_::Bb8pRBsGmprK0ot+j!]SDj@G6B'b\?>l%X"l8,(#Cclp0ga?ana1@<Gj7c-$[R$eK0f#'/NEFk^TeE[?jaaHa9_u%%(8]GJ?*YikR^dC5@L'VC5J7BRo.oG>O]\>Og9]]?'XJ@`%:/ir3G'srO9k%BWoS$%dV.Ga.&WYV[i20mS.Fffq]\X]?`"HhgM??%![f*_r\?Kq,?=tq#cY*V1VupbiCHoL&Sq17KX0X7#Yc_DoD/KsTrWF#6u*b\s,%^DJ>2DrOQXG<L)pMi.]gpn]4Fb0\f1d'JufTr%@'?'J3RJZ(i6U.PWtsueN-CO[dXJ5klX\h/SXje$JISa81htLq-IRO@[&F+VdN;FriVm;db)(*6*iNJ<9j'>dY9-NJeQXnfc1Yu7%^^.DE"iJ6DL[&UpU9$Td*`%`kE&@BU+Nk?i]HA1;Y!U'6Kd=[d8WJGXD/l(?Y9-NZ%\L#9VQ4ib:F>We3_jK)4dj:MTJCDXIoA\7%6+7psH[Vs@)&;^-g2EOY7C4kXRF-i5;;buJhL&':*EOK$X"%QCZdGUf=Bn7scN;N)mNLh9oBi9k;Los6pFP3(`#6`_03(mpXG?0(%TH8IP8D#7-64J1<-f`t7aI"&Q=&2%F)m>;_N2OZ\.Q]P&PhSkXSEo32Y8/:7WVtUNd(3ssSkNgm8r_hB>gj%PZeomHd4aEc\$$JB%VX_3F6o\_`kK!+l@om[4bAB'I&dA_j)`!314L,IOgY'RJ7?h>D2\"<<nN*0TW$C_Q)thYJ1bm$fG"=PMPk4etKH41NcR-#Oa1DWp%fpGCFT7@O$dH&CgFD0ee80%-@.erC2!(7enUJ%fQpu%e4XLD'6X?u<h2c@S@*g^>PYa"^$po9Xj>J'_mb[Fo61o]*k+Bt+CqCu^P%9RCfnIQ1PmH2)Pq4XTO$iGY!-S(>c9:]lKPg[&9:#$O,@&i#3i0&IG2AVo0pg(p,DHq#gPlOn<J*Qo7"IP%J\C0e87Gbs4s_du`F%6G$GYeX.f8k&kfP[NV0mD%/[up0(0(YK"8S^YRT:g:p;ep?BI:>D-gh?GDZt&m84;GMR=@rt-W9a*3le<M7i8EjMZ,9KaDk(V%03%/K6fWn[9\-,>A@::HRaFU/j?O)ls+;6ZqnMD-.mnKih.J[=3M8jke_KgmlsTf`b3inHTR`6#RRAgjY__l@tPcH,?-KopD%Xe"4;:%DfVE4Dg047+Ip1CFko$:OOF8P)G8VHkVVA'ld]]g?>Xo(ppL<s`qu=sQkkJI2L1<opGBpnMt:X4?J"\qPW`(D44E$umUuI&H/-a@%A!]2//B;@E>(LR\ep45U2Rh.mG-$LtQ1$E?5$^5,%ZR#$3/DtV$QV]m?tI_@+ud.L/DAee<nES;X;JoL'D+0adZg+Kps28s1gC4O%;\=`g.hD;JK?oG`g,?$X#iqcn8=dIffp0IC.*sEB[iV@)>Ya$Z_I2(@1HVbXd<"pm,*p@4no?-,8J2DfRQjusgTXC7][tKLV8b<M%jnBi]romeiq?UPe.Q*`?(ldjhB7r`-.Mupfl'6J^ORVn*s88cZrr17DF@&^g8,&o_T0OZo^"n26[m0fPhp+/C+`"744iPq[Z4`?6%Z-U2/"p=Cp_t03Y!oBh%quh\jrqYH1DtjhZlL77lmH:a2T$En(rX2>3#9Pi1QS[+c+%JuHGc*MP.Ak63RUrob/['tr7NDLP-).UY%p"2UQ'/hbh"t+PtO>2Eq;H8b*Krq/#\.75jF[f=Y0DfnuG:/ejQ-_Hc#ZGaZaEHcZ@]U,^4:!tGOJ!R-VQ;RW2\E/aj@.X77jM:T%Ymh35rfS:a$iKLgT4`6DZ4HFbo#<>rc$(6h"VgEJSF%Wrat^QhD=B:2$F\8=MEODMcR5>?P*[s.&Ts@l^r^"`qrt9Cpa!CddRuld%k!Yn$#HrcRfL.0HHpft,4sRg\g2F4ma?-?Re`?$m:Tdb"Oob;\nN\c27\(?i`u1,QC$n1ABAP7(Ji,k0_tR`bCV51OE2ZO"-jhn5%((lU+]W,XB+d1sp>=Kae\3<XV^uKO#@*J^E&H"Z089j"^&Au5>KLF7ZLhca[OQC7SokHLepM^!Lr%Q;sl5D`.Llm.BZk/pq&I8T+%.I"9"G/s8Y2!/aXdQ6"of06RNW*0uk_`F?,ip.:AJQJ_IIX:b(hcQ6CLg0OprM`Gcps[bi;<?f<s)j-3$:[r,f6o+mJB6rh:hNe&%%RB>:Q5)oh9pBks<]\Iho19-HeuDPOgQWUNoHaXh8RkgV5.;du!PG!s<$<c[U6Yr*_Yo5:#J")2fhI[2Z'T+UXMphX*6/5Gp68RC%8[Y/JD%ULkd/d6]#Ur14nCF3:JQtHYP[)WQkJ$ua]-#d80AsKPP5`*nK%m^5,FKsFBY*`NSuL<j5:k3qWZl"Sb],9'GjIJkQD2ej%`)Vs)^$]S9_Q(SUq.LY"8tqo\k`.@\W>6RSPCCFR%_\8+Y5;FPn310SXsV"7OOCT)P.p"dU,C<2%Tt6B*IYDoS%=)P1ED[?2YPAZ%"h#<=R:(_/AFcQi2m\6tr>T`1/`2+/h0nAr)qm_K0/F-2Q;he%%\Cg/5O%gDp%a)N%JZ+@I(.*NSGbLe<s&Lp@pQmfjJ:L5p&odE%1$7WZ$\p4G0r_PMU/K+5nqRSeLB2U-buYB'4p2*56N"Dl"YYZNk8@:P1Tl=n2P-<\a],_u*"^_bS!B;@XK%Eq&f"m*,iioOJu9s7%rRU@jGt#O^^e:D%;XnYTBiI-r<J+tRQK7^k02upET0"B:bf`VKCEDM6!$is?8]KuW<UtY:E'8"VV7Aa*/eXBaGE<RL_?@_Cl,p-2%7YF/bZok.NjM$_cUO%a[WFIOBZac$FJ_je;)7kjsYWEKAQ=T!UL_4_L7oN\@0T#rM"h]\(_Z[j7Doh1OD<$)]Y(XD.'"9h]T/Ct0%TGBYHW68$GIr!#OP.FM$ccJo*>2fic<0;g3Q<c%.:WDF5CtAO6bimYZ!KNh'biY^gN4=:#h4'Oe5gFT@?$*A,-%Y0<pgtka3*J?^%U%D-/f4s3e+"^@:bZ9,)"&Q0PigThISF2AOQ^D,TB)JZ2Wpb8?%`KU3bO%k4a#M:jCX^hBDWqrcj()H)e@V#l[[oP!O$Tc,A5e+K%1AeF[+&]"$[(F=GYk9-3+YG8Vn=?!"A[8u0SJb>gSX:em;iJ;KU3>f[F1t?f\&F>5O9,0SRcg0#j+E6LG&AKUPS>:u7">kEP[oqi%:eAXSR=_=F=4]mOWS>)@0HgIm="o@E^ka[fepKAoV[d2kq[dWqPZH&<J=4\/"`XK:SKcY(N:cOr+ggReH[(VrPh?b#c2l_,#sm0m%J[ps25c):Lfp&'Ah/AHYgbMr$X``5&cdR6A'GsM/p)138#ueRp6f@<X.hK]*UZ`%i0/;g%DKBK?jVjH>$@fQH9t[%?(sUgscInY_%\1,DNR8`o:>H-WG7uprVl,"K';D'']>0Ri#m;j$R'X[4pJ]GgWY+OljR\N_&CT*W*3[b)SN)ho">]C%P3ZDqQ#`SSh70E>CTc3&j%5e<8!)68nK2R_>@$^u(tgu)eIW4.!55npiD2m3N?[9_""'[dMZgFs!#]c"sihmrot]sb(s%Ar+CgUK?QhP3@leW1N$WAQ.+Q>W8"%'f_C<.NZ!m]i^e-q5AIYHLTGDBTnBof-g,LHu8..-.`4=d;@u]A8`s!^!Ru=<KQ:DF&f'0ZgZ,*fn1b7:UBLeZh\b^J?Yk%,@]Nk%(o^X]j-l$W?_\P%/maP`ESKQl+R8-=)C,0n&HVLW5&UVd1/ksE@$`(nR0dcL8$ghnYNnKsq(U-$%V.fV4hn5L%:3POn#CGt^DtEo%h5_i.a<#"G?DZ7h^Ge)<3,6@=oT@j6'_<`^%m!Eaa:`eM\>\:')Qa1Pj_[JlTj=#J[)]0`mO_,V@c$i,"neJ,Fl@8mI%c;<l.@.)%6_IkYc.T;FA=_:Y4U([g;./.HHTa?Xo:a?MB0LLHGMC`or:a*K>(:@i]GdJs[Qp&b'K8kk(h`Hp^%qTa-GB/\bn*^`7tPK6UB6'u%,W-0.'2;r93L.:mJ/]noj#s4uQT]^JZ1K%Y]T$Fh`'ZP8iN^$T%4#WLlS4L4G2;bg9o_foKKK\d5+1<rc"3>"qgRtg)\qr84=qfC%EREr^mh:Xp^I#IHb(Csbh/Ac)(QdBd,8Ydpn%]X:HY&_f!^alaYr#%0/pS=NfhHuZP)pKP;:4%FK)>E'cJ2!6n*)LNr6H;MQ@0fN%Y0ZBE]/b0*&C^tW#Sa;q/_J;U,c@QdgE33nfu#sCcm7l3?>9(hK2\Yd]WLhiVOGU2bfDY455t+eW\W@BIpmcE+Y6AVT4;Y?+4dn_%/#/l"#I!7GR`\VBI73o$id%QElD7miU^t<h=6GM^h#J#Mmp3EikD`u/bWY+N%P$oR[=(",q7`:A"T]&,3$krt,VARQDmTI_G[I'r%$?)Om+'=u)jeReK</p&lB\aYWR&W<X_^t7fep;Gqe04$l1fJieSDpRe'N*"+GB]l1dg)(@!tO',g"j]Ie"mLS;fBsjS">V;#+WoH%`h)UEH`b=0GeG`<Vn[e,DI.'TK!L?g[RL6L>Lt*1C$=C-c7M,Gf@XDF^rtOcaXo$BFmbZ7HhEU<H269mU3'*)m[bf\h3Y[?Y:Von%oD1oeYQ"C"5CON&?m"(*.V2tt^gS6;Vl8N,7fgK)Z`S24di!pM+41<,ohgBY^QOUqLQ-q/(/umC>oAHAC%u$'Gd?-T,]:W1CDBY>%K1tn1Fa<D`E)+-Un$qZZ'%]3.]]q/00>Oj+kC.`;0Bb^O/mf2sTI7ce"(![Wg_8gGJJX.9qR6\_GacPF8YHpF/7Ubccj:)K6^csX%PHq=6##k4Z.YF_DG;bOmFZTGCZBChN9SqLE<?n?7SD1@\gUI'!i#qCN8r@#""ZhGgGtsUL=WE?-pT]u[DWqL@KLso^(*F.RMT\VF%6bXX;K.Ao17@W$Rb`[1\g@kDCnaP<d6s=0/h=R5e))iMbLfQ]#>7"<*UYFLe/jTNX\=[#+Ncg`'h'^THiq^/$c1ZfA=k7pB+J\i?%S>^!\bdYk(P5IAReX<l_DC8W$h%)Z\j%DUsM%_3P_5ige!J.2>p)uI2IJ.0[2'S5"2FIH9ePA*/=M'>a<_,*UfZrj$ON-%RF.9IX%Q^"Q?O)J&6I]8g<NKsFdQHq$bTTioUCjIoCd!&QK!E<]c2-`c'!!Zr!r9JJj(e6e8F>mG@W1A/To_)^^'$)P8UdIs-0:=BB[6`W<%o3qOIkJ=n.7rDD.rj@*_M0@rrKAe0clum%'R%i796%[jIS@&6n_h=AgX7NO7frYlWnrR&$U]Hk\;+]07[h$r:C'gZm>rU$4I[Tkb%MBICZDWZC%4%k"(Cc?]"Ac&crl-mu[N3Q'HrmS@r@?4pg1fAC^fC=;/WB'/uhq^dm"fjR'"8-39NRO*](oCHX=F8kNR*+J\d:nu>%XOgl1(LVOl*.ndiX5*+Jkq7+k]2%<YZc_&-l"#Qq2af#`a>*+;.'_9dFlKqA;1bCgXDujC7q8oVh[RsajKOF"m7JiI/ED!`d?ErS%7*jHM&;=3(iU#;9^"L\`oP2(";I3s=H/]Zh[(E?E:SUm*PmY<sY/<D8:gHTU>#a*^`[^Q2;4=?EZNKOF;4<bOf^U2I;PN'Vk53!f%0FY_p&jQ5Zn=dHWbdELBSQnUh_HNf]HX@k[1RNh<,Ss%+0'o.U]U9AGOXCacF#R;1V?H7\5n+uZ#q8nPnYir\fcNu6.Yqbn0lrIo%KQ7<r3fU#:RUd`X$&sHE>-uti32O-4*'ocJV9<<C-K<?JIQtQu0C1BFbD+@-7ic2<1$d'X*'a>,4D$hS<rqBF1mst_p,e=\E00n_%H-FE.ZXCfQ%=h]:5c(&rZ"@,TTf:\S<4M#uGrib[\>Y-!(Y<eX$6@Tm'[1,,?)\A0L7GZ*jY>r*05H_XY**\om3^;jaek`sRiYcY%VtqUF58H$!@:Kr\!$7(r=ZSW>Ab`03bNNP7(()NXLRut40nek2:L<`"Oa:C(&Uk:0n--;sc>kN=V>sH$U,adh0pnORBarNpP$E2K%QehEqOapR[M6fUNLFl&,6#\ns*M`_fKn#7HN%II"-gOUUHh%h*;*045NI$%.QY)Jn[_h0!NhAsRNIY98Zt#RFIukj[GjD4<Xe2#6%#6>/jWV?iqkKG#Ts#9_0J0'RNT)L&lqFS+<Wd/<BWL(_[$05-?CHcRfm.SEJ<Qg]-cPN0iomK_E&t@1B9".l/pAV&+Z(CdU5/Z9p%R(GHc=F$4q:]SbA@=3^!E[[2t*"HI!,#,W_jZ*s3R8?Ht7LOE=a=D/qAi+9;(dQJnS_4.)_P7iu!1@h@6A]JI<(Nr2#M#<GNI=WL%Zc53:&;$>f`hrYX:0+NT!5j:f"EUCHD42+<37(M`4dpnr(E?qY0N=Sk'Gp7"J];d_9U]2sYPUu)'W>/no]%P-AJ=HPnYi)C;XioL%4:q50\eMi.#QNScmg4Kq\!kXTk>ugUaBceGIN"F4hr[d@+?/fs-PP]q<XP4.+oaT671hrHCJen&F!sVN_H\3hUrY>eKuJ=kbYHj+%SQD6S?2LTCQat!Z_TAmY:/5R(QmG^?Xt8^LZWrN%e"V@NO)$]I)jU^3gIjB-&nP*\7j@emoJ*J!K\[G>BBb<gTlci)W4Kd,aMgE[%V6q[0-,&tuM5Dok[!]3OP=b>geu)h%,JMX8/bK!&6>3:Xf."]"Ngsn_MQ=Ef8+-jPX%]O.no)XTG<MA`KL2*V*^XPRCoilCBa'Wo%YHC=l^$Uj\n<BO(!u_<]g,ek1A:0SM<J4Ig*S$koS3fDR`fuBVfHVASVt+#-9jnec)F\8]O*cmVR)8P5oYO0L<JHmD[o+ZP#$L2>%jT1TXgQI[3O+ZtXph%9KQ@*l-r3Eq^pONGGPc0"r11AUYdCE;i$ArQg\KE+q+Z14`k^CLE9(D&]k-DaC.!r$N]Ht9d@N:ZrrTbo.%4ON)eBJ8DCAOR:I)Ci.-O1R_qY6%'o\/9saM4#J"l=h6UU]o']'u4S(:_TE7^eNA"m0cMN3d5,=KA+`P=MolW8)j-!"i\@<c5NET%\:6W8"'R6&*^%nfO*^3O9_<'r]a!^$T'KZYj4_i`!#9sJ1lC-M+StH8f![gknJ%ZR1%elHh6IS/fZF6N%ZE<*Yq57aN_]o9Y"76&%/U^B<i*%87.^Papq9Sq[?Snk*)EWbO-uKg:CtC]V$:(Po/:I#8oZ0iFPBo-V@:)Am9nQej_ouPLS7PLCl4/h(q9Z#N4)Nef&"U$L%24J=?ogtTc]eV'H7g#YCYCs1S]"U$foatusM[tq3+])lq0c_n4L@D+oW_>q<md??iCU9Su1R#Fb]*$3LF9aTc&tD'jI(>ncRA5.;%9J:h=eTR;@=iu0,#U4*s&TL1mOD0cpCLiMr)-3K=]D1LXfjAI;I@W"eeP?blAdt$;;R=A`o1=>KL#7G[C8.='=]X:8kg'iHQ\+LI%O]7RfoMLbjjGb%I:sW`cqjQLGXf]K/*hDdlUmeWYGq9W%:l-ujQZZspHpV!TXTj_"4UK$]?2t,hUksq[8u@b%MSJ*RZ"+Hca$pIn%^^0c8V1.ZNIIr'eEB4*p:ss"9PWpg.Y=Fpd,Pi7U-UX3f-QEltqB!E!UI#:s_WYA)W)/#2E;Y_W08e2daOeZ\n"p/%9e"H)g""NW%Mn%DEh:d'!3!q0YePp!3JX(uF=Li&NfkTV!Y`5U@hm/"m7<k2,P\LR)*H5NMT9K6K2j%TG$A5,Kf9%U.g(T1^N/md"^<-t(4?pN7%fuZl6q/:]_jhXXC?(q-rlE$p[,#!h#^6@AP%oC9e'fE%TZUAJa5hSWB#-,lqpr\\gP9hbWTrVYSY,V>*MlV1J6TTg3!(=J5LK,Ym%g6'qghm`/,otV+*.pm63DnQ>5>3M,//Ah(a\oJg83n8Oub-#2&;@4Uf)$NT17j6WFRKbL9A1f8ISAisX,FE%'fEt6Pk-J_g_)ne5%9S>,>S&"/WPX[P:d7+h(fh5=7c$U9YGkff`$B,U<U:S"%btg^0bJjA@kZ2`0&k%uOrO`'e7fOudOJ9=l,059<<ZsIN4"k,kZu-P1%0s,+s#7_MGO!glbq-Gal]h4a!<8d`U</l$,*D1k;9EhPF>^+9ZoP)Zt%Xii0T^$q`C?5cQR0O!*$!bWMI2VB@3*RBQ#N5^;28saI%(9!%]nb>:TEtL\9Ka>$%*3JA*jB],p1-''b&7A2rhUNjOjm!&Sh,,I1.dbTS)[tApVUOub[P'4dAU)!$+i%7BJ:mKh)[(fVo@,4K%c=@'.<_$DfLPGf*(4n2mLjna6c?6]E#e\G9V;d\Q#s):1!FI,(+bXWn,^SA^;cTVYa41B9J;LHHeEKS#=qX!T2nT(dGiZ=U:.>_h%g:C&R;N6+>Hg!BXdqe!(b>.H>hX/FSrj#9HZGPp$s._d@TLMN?q-#t[TDYb"S1rsf"9"kXEde0fE\5+\*AuCrFYd,6)29?7(g/9o%7,j**Z#!7P^pkb]#<A$9<`-5(9]0k]Am\(Oo?\<"U41UU'h"7fDBP*WlJc5(j[GmaNd\'/rb<8+7>@(08Nf1r0I6b)X:d;P>K6T>%#Nakl\l?<K_=X(R"RF_2k%)H]Sn;k[Ci/$87`[fq3=&.[fMhIPE^`mY[]6o"\tXna$`>G&d6!e)@!C[^I,e*3+q"4h8qCGBH^UR]%$@Kr6oF:F>;a87!$L1+MMVXmSYRdcZ!;"_.O/7/GFTadQl>DS<^X_4QHB!Oj],Y2?DG6QDG[5-RHZe&,p_Z^WK!SO&j`4G%pgG]m%@3tXEPl3ITg\'%F>)B4FehR-bHF>W=XIog9[K^bU@pA9S:Q)*!eK"WiaiY@t/6JGTQF54kgijahr/I'!7Mp"R*m,!nJ>X?R")V1@%"1jJ],9Gm:+ObGI19S_C31?qO!6<_l84+J:HL#-r';Q`$\kAq?@76*8p!N&%TgdLKm/'`4?.YQG5"o9KA#@:phm(m+\k(D`CTi;D%Aq.iHbq!o\n_pu"Ad:iGiL\Tpgb#1j=B/EDT>rmoSg;$9)>gkkbVHW(H6")58e`18-&uI\glF)p#uJma-[$CtIi?:9O!;%np(*r=%nn)YIa5Cb'(hP7MgL$`$@mE34pLfc1Ho5J&r:D+f0)T3'qn(PBZK%M1;^RAC77&Xe8?obm@J]]87Dj!V(*"-Z`8PgIPN@&OqWZ6A%`OZE:aDnZih3l>VNi-28:i5X??#@(E+1HQDb?m69#16<J9S(BXRo=#>%Jjh5[3'_e0:[`'/$.s&Ib`3D^XL($TK5KZ1J((kq#Rt?%74!LGjf#Q>6"soHVRS'_0L^PNRnG6^S:HK'cA6!HMRF9;08-<9gJp/*Dsp)[W0e&K03'<+Z\Vt#HUU",/VZN:N,p<:7RZi8We1@p%A^*P,/TJ+7T`uukILCM9b^%[jba+<C-cOoY9OhfE?gFhYGf#i3R):nMbh]]:P!Mc\qV=ZD?:pIQk*K4R/pC//A],k/jD)3(8sALm%PMTQjfb\3kIB*5p>HOse%9uOtqHXg^AAA!E?DihsXA6=_SSf*fp(W.?19Q=lh"UOW,5guCT=c#`s'VfmPTV97dGX/BTdE)'n&k[5%W7'74N>j^2_fU:7eAX'R,Z.LPNB%Ua]`^(eWj68c:$kT?[:uKub-p[_'M5/Q,<r?FP/S?\U5`*4^5+EcN;`@QY8fXELN-EFncBQO%rhSHhj8iSM-j6u\Fk^</fl*ESp1'O*3Gigom1P7&HbJQ_b!WcPCD).a`Z>V"ao3,J#5U&@l:Vm&A!e4`6&#9iK>e]*M_H+>$-Lnj%PFLl/;:V"YptWlAi37(qSs49J(tpm2elM27g2]r@n*L3#)uhB]4r"Fjm:^KQnsaTkqCtJ!VEK/@2huHp=iZgce&q[=3\Msq9PJn3%[Q2e8Y3')eF-D$Z2$3>f"#)'Gfu#CkMH=h>7t.-o+/]sCp_>,!J8G@Gkeqp5=[e2oVh*P?72ZV'5qU77r)Xhg1eoEr>;^@/3:3W!%?>WdC/;aOI=&Q&6H-4k^:U\`9:Y):l[i:pqiphH3]olb$aRL2<:XL_rJ>e47$7-B0G7J,9/i.9P=!eQ8O#u)Wj/K5"VCIt"ng;u#%U%\TCo)..X-N,/['21i>]s;BVl]-kK.Qfg1.acIpV(#CY@IL9hcuVrHe6BV7OC2H-liY\Q6"QI+QGbIs_>/Tc;@O8Um',iCM,cP"%lXec^He]lp%SU5(oYU;T:KH`%:3W%=AY;It7h.b+NW"#VW>E^3VVSDUin;\$`@q;*Y1S\J(>6EZL/'lV%%bc`o\i(7D-6lDBtRJX%f%Tp=5E(<FL'4D]f?S(&?3ap^"DfdPhQ1X><^g-][Lth>cerm1q$uJp<Gq:DX!/5Ih$oqo1Sc%gME/*1\b1&sgZq$\hHG'&;I*4B%!#<$0+ll\YqqmpGkJ!=!3u:!A;rbD9N!FTF4#Qg0gLmrn+.V'Vgj8krkr#(Oht>2(lijluqRc3F@/r;&TCP8k>8U)5*5T:o9WC%!%'2iI>-$bW1\_uMj_lWUt@b[)t1u>&Rfdi5SbCGq=C"&maX#g>5(RPlYi?j>9dL;$aAc^?;[gCa5bCH<\e>J1,#h^Lm?Mjg*GL9Mk%Ogj^uK0fkSe]0.oY#'+;)'[`b4Q)XHATOPC=7i>ZBVuWe$_/Xm15.`CAQg@X+h;E?c?sGngPUZ<*.)Xr;cor[9sq(Hg$Xa1;0aQs%W+?[Vd'<f3/0+t8Wi/]l[Go*)cqmX"\;2u\ha_uRfr#DTdYfO'eHA3,XQU1S;H#XsE#/(emGDY.*3DeTP8WLGFXu72%T'6>i\pM)%eFs-VCsk73q,9R]n@0M>keh0tER`3V8sTIf:o(6$A4AmDn<"mprq*p)C+D,D.*)[e/?4h*'3dtV@A2lH>gfDNoo7Bt.X^0E!E'FN%s+RuO3YkOD3^luO*0@9+6bHOhS'odtO5s#Cb?`3e7>Nj8i;9CMI3PLT&;=RY/TMXJ/(_!*X3don&T@`O0+#R+H6IIf2!Cp7onPqI%I1\`mS?q:tiDA&"8m+_<)E\mpSJlmF8u.(0MX>*42b.]fCb?`?49D(O$\L.H'LoAi&__.]:`Z'p,s*>:=t,L>?,u94DTBkTHMpKk%IXHQ<VO\5pCmBZGWrS#W[i'^]nHK]m]PEFoLT&Dm8LkRhr1nDp,ca1\[%!bXW8TMYL?[/7:)*#Ss34DTh,&Db7\(U3:-BU+rkuN+%5#9q\6tXn/VCVg'jPkg[\LhP<+g=um:b[n!G<lSA:hB'9?ALt;!`N(WK\aGaTk>VNIM\t`Hl:Ci(PX&2L22O)gWX?.Xi2U'VVGBS%@>N:FRfVs4(0UsrEDJ]$g:lS+iNF41AV+4rnsa?!JBVm6ST1Q5K6lB(B8Pl^^:W#L*M;bo6gK%KnR2oj-L9\(,qS-Wok\/g0W5iH%TfG/R;)0cO$kD%CO<]\<?DPeV"l>oPC#hq=(/\D$KHuZ9Qn0->7;V,ILtJ#^')XH`'U5euW)g6B"(>ZfD+^0KdW_>]S&c)\_"V\C%-fR;K*jW>4FUG:LC5%Qu%oKp,87DWY7FZoDT;>BsZ[7dY2Wa4#5.PVANGU/L+Qk&kUq/#^*\lD/l4E/fB:KU<jY$:%U&1MX?Mco!%/ck+":ERZg:e!1IEUfjIp+7kri7Wr4HBVGNk5Yg+GnCj-^0-j65duhL5XL3#er?Vc0kY;Tn:>V5VM:5%r:b'%pRmB[S%adLM5dZo%XsoKcjNd8KF[?k?]K26PM;+UI#-Fps@BsJX@t5+`&:(hVBQSB,^aMb*Qq@EK>J1Om[r96R5]eMl-%'Nn4uD6'Cqpj_AHF/7Ei*-N%$><+,\3eNCXa_p<dFF2qlE+dFZ)$jn9o!?ED8?7/Ej,r6U]Z9bjc)RlbaMW3M?j8[[:"\+mN'80`P/sECMMf:^2mkL?-BO1Mg;rj%M``(T[.ZU;\]i#:7;lBS9F1-]Qi.hN;]*5uI;)mFeeUpR6r'09lbPV,Pb2tjMSZO4dMf>$G_MGe0^^R2idCMS_NG)i@7bj@;.VB/%>1@@N^<<<lXN3g11s<Wu1kr27jSs/^%HBna(=a:Q",f``"%o(/IYT<UHFIGj-@mT\_K=cL1UdWiXFaEr:&.?=*?cB%=bV+eQ7su5%kP7+UId)WrGQq"1,qE\;PoslT3objYlcB\Q]"]3(7#Dr>"m_`\b)0NS<hFMC;H+%ld>h^LOq0leX4nJ%EcD*"K0n"2Y9H1Ue=cd9%Yut7i.Ih/ISm:;*BJhD%WZnk(hDHOa&?QZjLNP(G6UbNS<CpA2(qg:0W92=@GJolfXg6e8RMh6<]ESn,0GPF%:]sqL<eu7_.f,E<%q%+@<"G\DZ<tJ,_[8;SM;tO==l5#I,3`4]W;TY#D8idZA`cA^AA^u-hC=U+9=-/nl5Q+$8a5*[Q61*O<7GhCI3)%R@F\9W2^b6<-%iJ$d",/aKX130ih!DEt(Gb;oWWYnPY&Rkr7R?$O8I[^a05!e:XAOY-\>J?5:V4'#`C3/^0o7LF&8dSAcU!.bA7Vm`X*\Rnd?'*+h%1Hpm-9'S+Yq/X%-:aEf>.!4$860'>:#\:.GT]j1@n<3-Fm$uVL:aoF2#(_[o;C%"6e"g7b4WXe@6#'0aMAK8BabREFNL"Q]QYI>V%8Ibfg!JAbU<J.);hfN#D1;T<p.P4/\:LIV0Wf<PYN`].r=qeCoO^u=@5lcHf[RIR*F>Sq8(fE(IlF$5aQr3M[CN?5V*L&[2ca]RP%cuSR$onIUX`01rFJhZ$,MoIXtk?I7iK;aiE*mVJNC^0gPh\SZ7GNrVo.9QV&=)P)jnlYf[HCJe:]`#kl<kh"H0Nl..OG*9kad0>a%nub1FBe*3P!4]#Z4R;"PXN*p8Hs61;ih@3+RnZ/ujBNFin6d2o^k/<oGhV_>OmK9GqS1'_feWh@;uG$YG;'h/Qs>JSSZEO.n.74B%3cbm0F+BfB)`Am$)A3;WBijFIF9baD:bV*N,!X%qG/8+;U?Y"SbU*&PJ8+'g^MfH>j`EH`Fjmc4/d$Hr?h\?f-IVA3cY-WOJZVD&%`?7AK*TT+A$tc`jKFl$B)DuaW)``.N#]RUPf1:d)8#2eL.&?WP@3,]V23s04B2%,17<]R@j#eeuI:f@@#dduqlEV.gTVC9#?NhUa%*]h*.\`IroTM<H<+V8$)L^g!(o_i6fV[\09JDZFl&=SIUW1#=:R/2?"`r<'\$Q!)ZRLb*E3H"?*V0O@Q(ia)CrgDU7?(5LTFdMY6%NJ\MV6q#dXgh`2qB#3N4/Dj8]h2"Kk+t-*B)4PsWMJ)*&og=#6[%6$5RjXou$)A,L\@#]`eue][;R'0U9aH'uTW(d-P+9mS`p;+d%/WN5[F:5EOXdZU-cjX$aWON<Shae-Qnq-Fb]<@ZACpa<S6i%amhrY%b^CtVo>6MaD8m"sor)+sR;2@gD'pMU?kIb_t*7t9BUcNfl%q3LcOF!sHX`3W$gY&jB0_Hg!<AHCu4<fX$8#-KNi]NZsC%2UN?!TWt6:kDWD<D(Z+"(pWAAP-;aq9`ONT`llPJGf_2'!#J1bkm71%Ee8dW]N0Y.J>SZtS1VK"8j9+2C.sYG8/dqbcC,B(4H%9%'!M0Z4I)%I-@oEoqiE/eDq&'9_n4uE0N<9gH8\A(<)[KL_Xu2%\Nilb%2SN>X)CKK7B!D'/7oSK;fHl74Um!d'8ZtCcGU-AcXKGrLbTJ8Zi2!'7l?48D=;f^o`m(!q4U.$@%O*lt9F_+ZJG*?BZq:FSC(h=7%E&.bm5KQrJC`jj^Vu:IGf2r>*@FObL`M8+j"r3[^=UeIk#oQ5nXOsg<m.$++/!dU_PQBDDb$s/>QgF35N$;ANh_+RQ<"`V`8#SWH%/&'$_0_W=3iJWm6cnj?rP%4d/Y7VMtC)JpTj[57`51*@<#%A61K/0OfAju01*L^>K6S?V!6o&)@2!^D!iV_&e7mL2#S!^3DP_nbW%"PRe>#\GC<3ni7S#uj#k!pja=ogg\#j:.;Y5-fJoqRVXX7sDC3,SGDUQjVpkP?GM"p8+8Kco18E3h)5"B[Q`Ub4n:W7A^;*f6rC1%JeCB0Ul?2:%9L4lCfh^-iNUX*9r_iRL"r5S`2fp#o#_nd.Q94C'AN^7X\g-M;]\:7?@'Q%k./l>6*[A-C7$WVcu(MBZ,4U=eKa$7%7#h_97T3b0#$^VD<.d0#4>k'6s0)l'H>sT*Z/tau^f[C>8&`hO+#I!?R$0'V$Qg>N2PYLN5RbIV=JOWPc!3i!5Yfuq,GBBo!iW3J%fOuH0)*9jOk<a`s#cT<&BJBU`=CHgFJDE^D$B%6K\1+G0Ct")TgqQCCq6=pWF-dS0Hr8F8gI^8(\WX\[+tZnX9.YF2<M0[l>:Uh'%<l^W/"e81?EOfrMXE.4Prm#i:#RbKBo*\K6kh"lXY*2&=\u-3"8V.-;9gnI3SAWDh\d<<cO5VFq!S]q#b+Y<='1V1Oo6QI'YWq7Q%F!"aWBkC[QqQO\g,<M^:d*B$Rf0sM7,uA&CTt)1;rG"?CR)Z(O!)/2J1-b+<UPO?AOq>e+6mKCd7g+S_pWE!><Gub*f]Y16M<dl3%n0T=%qBC*,f@Z2u=L24fB1;4!bLe?("j`"9i>fmkIIj#J1VlpE.'dDPHmOu>FA*k!9CTZW$jcYoB:R`;L9=lSL6oK,.U"JW$1\:g%!(5or%c!8la2GHIS<On7UcoK2H1_6)WK6?pNkMT&/RhYtDt<HfOc\!7`A!*]^`)/C-Jn'P<k5>A_5e1aVL$CPU1Esap9gSAOI?;8%`=A(hMCHcACY^):PjO_?Tc.ASbF-I9\19nCR"D;Nfc)3a%+"IjN)^:$2&/Y=V%p10)Wdh_B\V*r6QVBaSg9V(jNUP.c&/r),s/#h%H+UmgPsap!$TNO6fP8rn1KY?W[OST.AYWu%.?^/H\R&Y^MCMqE3JSM]<f_e*X\r@*R=ak"]f,e"_6ZcEdUt=V0q]B+=LI(s_ro+.%,\rL.+`ScD3cYi!N@lG@%ku5g.d3bP?QP<`/f("&CMH:\EB:+OSuD+Hk2rDV,K7,W(tO+nZ!.aPYn9q?"H$V6FC?Ts.hLS%\@1l1%lT[cpHaE4sjUJTN%\j">Z71A;#dQHmG5H:PE7SN]eBqd8;(_%J4&lRS5'qO6f2Dh^JT^Q"JjX5^QqCjc=lHD]V*\tGokc2h(1s28%D2XuaZIT-I'eNt)]Tk@oj$nd"XA[">dCF+6\-Am8K:*h5\e")Ea7=+E2k4;XD:L.m7euEqop__E%R31lUt5@CqYRQq8njW36A1TB%92lYX;MeH.3G#UubDR(hNTdjOnnF\lWlWu4`Z7?Vf6SQX4m,jEV2FA'cVaO)[N_+\>1DUFeK]&'qQue3TTfom'rm!$/brpe9CC:1%iQ85-g==&XJ1@V@-BGU_G$R;c3k`'*?+(^fAA_NQ%@p^FO.U(TL'bXC-^SSH0_3Ua;['AngZYdN9TQ\*1l6s81(ef'BfE#;N)=D`%Rn]Qkc-\,_2'cg=W)ren.,#p(LsmIWlRtl\dI=uXjd:-4Yul%:Z9_HPIES.i*7SICh='F89oTL-^A.be(&eM(hcQlN147bmA',/%%6PVCobN?iK2KG"&A#a:JbEnK\9`B%q>6'jU?!%k*#9\sH1ZZjP7aBpSBr$'HfYNqt_`%$qV9ou_/3oDr_LhsqMHK)lbUa&ZdceTd%,FM9teJ\ZRq+,0YQ*U)HE1$QMTN75)(_eoSbTt_$MVC@!m2=TpZo&^C)X6#e3DsWN(X^^DmM^l5+A*u,9MY(Jk">TJWW>#]&kRbD%V3NM`V0u$$AeZQ(,K./,'5hu#Qa`2#g`rp<@RojN'q4.HAeB,r,aG6OCo+JE"JYGf[;F"l's'^4m=78sosRKsFr*MHjWL=W-ca3/%Q#6K)#3&I51MtWscW^g:k*&$RH)"/$&F5?-CIW\Tl$\uP[KNs?P>o0YP;^#>p87V-b,3(SmH^=49"(`FS6R?Gs+U<0?<"BI.%b6M%PbKn0b.A!!`*PTM#.\Sbed@j[m+WD-ZY\>iPc0.D:g\g=C0!OpTn,9O%dBNj#_KGC7?UQj.:@U9;lj"T/1QA'dRdbp31E:=X'QmW%h59UFlp[uk_cp);!&a-^rfZ($>cP47!(gVV:c5Nn>_4d&%o%/p$'FKu#QM]q^mrUoR[[9@N*Fg!*gD,4QSKi[9eR*d4Qm'V@[)S^%V(4ffmq8D!$Lg#(ggR>EhN9N"(FK7cNBe4X$>7FJVD.^H,Br1q\1P<h=spmWGLeh"q(GrcA_0UNcHCNs(`HAL.=l`O';3b.Kr4[e%jC6ZrXR];B11fhrmK-Fom`IH4mgN*a0^RKDP-oXCT=3SaO@2!L203S5:BPjT<+NicSK@C@lE`0Q7".NZ_%;`!EtK@R-3&kJp%fq1%dc@2!BIVR3o;(;Fkm"HW.A@&fmu'T>LupEP<VP-<\"8a&QS>1@$K$X$Jg:p^*[+Xlj9R,'>QIV34`EY(\rL$k?'D")?.,"J0#pB6%WRhNYYk#/K07BUoK)F\<+2nPs*+j@Yc_?1A]'2Pd&p8a51++aQ;!=;(&9/mkp_5K_;>d\_fJB*;FDF`"^[/YN-LdrX<Xci.;hn$k%<_1L#fD#AH.gqG0@SCUdj;(j5MPP\n^n7,<1Cm3%b@(Ei/q?lG^KOC($fut5(;l,Pfe<V&dO#KeiA+jTcr/79Z9rj5R.+<;ZW.P%%+k,qfJN_2t!DuQ=O.mXF'@%k:TG;qBK"Pjpo%.NV]PY13_K)m-RHB0;#dm5+;Xg>%QD.nJDPJB=L.PA-Jm0(;T3%5Ppi&LGGL(WB%jtIPJHTYOX)V@0mB)!Ef5RNSnZ#B7#Ei`X:>A5aMN4dNIPdolo[[4EYN#,Snk0VLFBK:bY@J?@JHmJ>;0Q@*LS.=JH9hq]>@^0iG%e6J`=>T8rW"J<H$!glj!rJ]%gqT7gH?_=dTXm_$a&`a<_c[OB1$Z0tD7$O/D?r6&BL:%X`e(LN7E-pQ"<TfZTLBbb(0?/aZ:Bp\q%k\CM"WZIdA1u3.n.A=Yb5)LGPMS%oRNGc?Pa/5g^mcELdLW\WQ8.sl-qu#Yf*TRo%B`mnbWgo:Qau_sBRYuDEksi:Pgc`9hPtR[M%Kg05-:XCF/15e\-$foZChs[7qDRs:<ISb3J9Lltcg`d*$A3?:(Y4-ZODj0$*8I3VCT%3+u1<uR0LLRa\"'O>4%:)&\X4GBkJ7!3I%4d+G3'H?2^AIG_*Br7@Q6)Clt=ETe^RT)YN[i#PHX_LfM3]3%8Sm1C!XO"?iZ;R?m]EQ_;2D7C9Sm/SJWaApV^'h+c%3q+'D&LUj%^5A,f5&Ht_!<@UafJKL;]&>'m%NW_<#u`BZ%t%RBaXh>KMPC4Q?dL#\Ue.Q8BWP+1<n6Wu+?*!0MCrW2'j-NWW[ApUX!"("Y#5mn%CChr25%6]4dZ#=fI<8&t8/pA=_Noi&WJ:Vhc9t%F+9+2eH9tB88Q(OhPT]rd;\9RTgR?h3\q_n;m(<0ZNI@U;aV>RfpH]M6.TLT2%eXTV5.IEgkDYphT74PdqBVVB@I?JgU4)7b^=gda*Uq8gZ9hiR]8@bY`890kdkT=`5c'ti#Ybcf?'G9B]JeKDP#K:7iD:0If^F`F^%fZJ!q9qS!W^hjlJM'PL;$hAeUBXQh?;JF4*8;*P0eAiX6jFGRd<(?)`;0O_7rZ5qJp0a0#p9mc2S<<Gb78WdToc_3uCQFI&4bc\Z%#+$I\hSEF1]PeoRG(4ZHC+RbCC.$QK!q#F%#nGAjldYj2L0cj_h"FDA+\RTR5+-h[,igc"QpF!H)/Mlf;=b&@D*R0VNOS,F.cMbR%dFkSBI"1uXQE<aH#GXicaMfTWe3Sa;3(>r'Pij'CDq>S(U0=?8d>s\JXW\/aV=q376l"<uEXZ/:/K-(.$Z#M8K9#FsReEV1(*\K!%cR%U8<H:J&Wh_[;A<3I'+l9!l/_o^AjhK^:3.Wo'S??i34/7rYKl<]d=?'pAYpeX_?BAWZ-?p>FA9'hl2gq8Gh8e,[D,ZXdG#8d$%%93Z%Mi^)LW<R@7N\:aKcp-p/`f3>-*2TMNr=icl8Hg:BKiU$IhQRPs2\\'q`+6T%[j#Q%@?,r2M&0,s%e[PUC@Y&f=ePlGkT1OU%8JU(HV.jKL(2@YXefsCdeq%8Tor+.bF\[S:*:)(:8]sZUh`X+79VJ_No4t[mBcp-HqfuMsI-o]O[C:RrL\@_#_XU?c<!b:[:$=o%%,tc7TU&JdA_.(CQAP1G`%*K_RR4lQ+TnPpRSlE\_l@Hc0gUd.t)M?1TBuI7Rg+Y`oR@XD;9=(WsWNT+PkdIBpRW<,8^8(?^d\.f9%M!.p:Pi\@4P6uGmQHd50Q9pRk9%no>j\Y<NQ!b48<<IAr>a?+cTNW6V#FhaDF"U=)+FZ.$n?R!.^6NTK=>AG5d'9WUC]nV[*C<uA%2Ep00fd97N`?@oVd"jX*^',kaX5G,.a>A#;,Ib$&6^%qR"D.7BAp0BrJ.rk4(%<f/8F[_X\+,1])'%i1e7bm_AP,<0h=Lj!E<tbd%e9*7Qgd"RbNL95q8sV`T9-RKm2,>8948c-mHC-YEllHFd<JGtT)lk=k*;KIS)TBQV#Wuea%<Lc^d_.Eg#&L]3[-q@kV@>6+qLW.X%bp#)3Pp+7)>ei!i0^_02(5lk\e9M$uQ4-drZpg:%=cto1L@uUAGE#Kne+WA]FD)$9l&hLX_!M+=<S(o2J8gqgpCKp>E)#P0.UD%Z%QN)Yl\epkfT&XMFaDALbN]s%b!-7@iIUa%a"Y&k8ERuN^ap7>M$>@Ar`Tb9aX^1c_J=ii*F@[+;j)%`T-I?8h/kHL=#]nBml2Rol%H.1$-eNK`V4nOJK&nd$'mSG8bq2cE6_D")1aUR@e`Kc>(R`fK>a$Muk,b6bKo#LN'Kle;+V-E8jr*S!f8RASZ+USe9`X%c:",tW$%^!'dT\hMf\?NfR1rD!p&K"`$/+&KW]_B)g3!'YsQ<80(sct'frl"(6F:/4r"pi-jj%15Q!S3jcg0)uA<fX;C$9UM]@]XjeM6;rGL%;3!rOJZi0Rg_A>YSUs:[ORUt[/t4'Q*2;nBh\\54e1t>>C19#8[4jS5;"f0D&.qCpO"(h.XB/mlmS_*3<EqR']OFOr$]E>CW(_\h%:su=:YiR>90Ro5?&ap_[_3G57O?O1lTn/cO_mk"Y+DSGQ*BXDi_.6[4K?i2f&uIq9)@RWCj)F+[["VNoOdRJ"e"gJ#h*Bm0=N%,$%f<9_uoB!gIXsPbK#L^^1>^ceM*a1oEf9iFc:[O!EIE7`+=k+#r4!WdD(sUc>ffKGK]-[`SF_A.!SR8d#le'S<?A4Fiklq>1O2"97%*CKPG9@P^Fk(\`QD$.#<N=]erWPd^!!i>$;O[/36EUR4!76dQ8?FhRM0;ZsB4p<MRiuup?dC9>rj-&7!]N6DqKjtBP(jR2h]:6um%E&5$m#=?*Q&LV1?;g/*CpPtf)%NmV,^+F(Al!XW_I*ej-eu$MA`CA[fP'(DgKdJ`"Ue,N9?n%jH!!C>A_BT%QD&uM;<J@TODn$os%!p>hm;S]2%QS6`]Qu*E.IFf5QfR[jYZk;\\<ni'GW]5>K1"Mhmn*:@LC\F\:8-ps]BP1CCG?)G2/=K%oY*$m8'$VOH5i_*G`/QeT%;*WSk6B\$p.\M'I^2K$dDK"YYk:DsQ)K%UeWjXpu.KU^"Y,)[lO%ua8/Y>:]!5cB5?30:Gifd:g@0T@7l]aW>I5;'8(cJCP@&i\;%>0!c8W/RqQcl.$O$OKhsHFhTZ62e$pN1H5_PA)ThH<MQKJ73a&IQW,o$rR?U^>-Y^dhNOW"uEBq$QDD=^mglg:Bjfb&[TN4mh0/g%S@1C="e%K*;e#rSY_+RHE[_$d4JJk$PNc10LG8rlm]]c3?ZN&SQRm.1')1SEAN)_4)>"%E.;1PYS6iNiQ.Yt(MTSYUV!0gg7tWAC%/?BI\7=1;,/ao6[dt.mNJUtn)NY""Vo=U\hXLcKKiba^cJb/Wka@QlOZ*-*Ve9n56'3!HiWE=cX)r?BBUp]"/K4_V/M+=UAB'bWP%X'-Gbbg8:WUk="<&46p<,VgH5JR>5t`&<Ec*D.7tE]a,AnDFRtJ(N/*dO5dXE,$FZJgY`A!X[hLilB1/<(g+914V!uOK=+*<I<=X%ZPT=o7441#\14i92*"/c`1foZDL#2K);FfoU]Y8ZN=C7"_E[U\CT.3*L"[R=B#PTKZETdg<<"a2[Q6Cc*P,j!l0HGE.`6m5ctJiE%#DL<fdHDlO<+II(-+b/7VNI$\89oA&[*+USr41ZCkA="&J2P>qM*4>u"dSOtFJKQ&'3GfB?d/usWjR]\`8TCIAPT2;'KhsYBl747%9_OVmdRcZD!i>Nnj,.Tf:`V`FI;G)__mqk"A"q8YCGceLc5'Q]N-VkEFi77mf-IoJ8iMVUWUgVb1t@D$-]53g]jjhg489:npk;GG%Z2R-3e(BUk2FO1tn4X1*5;nCrXq/]rdo8CJP7AVc8sAtc"Ph+#XBf02:t]\1^^7[n5`9:Z^U+Ef]Tf`p(7BOJ:l"VMmDW^=m5^Hb%PS?F83Hb93S5f4RJo:8..W*\kB2n;!ZAPrW$Eo%c0hJ@R-4$hK?kZ`qJbu/]VW0P;EiPAO+IhY=?`o?n-R;473q.W^e>_qE"em;[%Y:a4Z&=W-_8a96?En)lgUhPooSblB]b#j@l)bY6P7UH"ipioKe3*^P5*jS(ei-aRXCfAYjW!hY.HI1GpL0o)R21\Wm>uKDl^?^f?%D6iJ[O4OPW=Q=5OpE=.;>j6%&16iI`=%8$7dhCM),F.9NVNWpH4SXdKc]+0"F6Rr(p!2oEYb\=!P$&,6"ee7APk2@kn=`jN<:F(k%:pOo-i$[1t<sP7$jQSU[Uc7$H]1krSckhs\J0f$tTGuS6!D#kXHp'>/lkq")ZdY7aSjcV%qF"<C]58K_n^t"rK,a/"!.4T=++Er+%s.TGdhuEMEhZ!$5J,ILOo&4f-qp0cek<Jst^\m%d+92,&&-)RZ5CELOQTtEDcd;XinR'mT?N0aRJ,JWIrQARIq"!&:nLsnUbPK>#%q<re,qg\P@&-!$*SC4q~>%AI9_PrivateDataEnd